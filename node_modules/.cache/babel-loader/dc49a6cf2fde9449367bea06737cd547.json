{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageFormatter = void 0;\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"./utils\");\nclass MessageFormatter {}\nexports.MessageFormatter = MessageFormatter;\nMessageFormatter.makeRequest = (method, params) => {\n  const id = (0, utils_2.generateRequestId)();\n  return {\n    id,\n    method,\n    params,\n    env: {\n      sdkVersion: (0, utils_1.getSDKVersion)()\n    }\n  };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n  id,\n  success: true,\n  version,\n  data\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n  id,\n  success: false,\n  error,\n  version\n});","map":{"version":3,"sources":["../../../src/communication/messageFormatter.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,MAAM,gBAAgB,CAAA;AA6Bb,OAAA,CAAA,gBAAA,GAAA,gBAAA;AA5BA,gBAAA,CAAA,WAAW,GAAG,CAA2C,MAAS,EAAE,MAAS,KAA0B;EAC5G,MAAM,EAAE,GAAG,CAAA,CAAA,EAAA,OAAA,CAAA,iBAAiB,EAAA,CAAE;EAE9B,OAAO;IACL,EAAE;IACF,MAAM;IACN,MAAM;IACN,GAAG,EAAE;MACH,UAAU,EAAE,CAAA,CAAA,EAAA,OAAA,CAAA,aAAa,EAAA;IAC1B;GACF;AACH,CAAC;AAEM,gBAAA,CAAA,YAAY,GAAG,CAAC,EAAa,EAAE,IAA+B,EAAE,OAAe,MAAuB;EAC3G,EAAE;EACF,OAAO,EAAE,IAAI;EACb,OAAO;EACP;CACD,CAAC;AAEK,gBAAA,CAAA,iBAAiB,GAAG,CAAC,EAAa,EAAE,KAAa,EAAE,OAAe,MAAqB;EAC5F,EAAE;EACF,OAAO,EAAE,KAAK;EACd,KAAK;EACL;CACD,CAAC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageFormatter = void 0;\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"./utils\");\nclass MessageFormatter {\n}\nexports.MessageFormatter = MessageFormatter;\nMessageFormatter.makeRequest = (method, params) => {\n    const id = (0, utils_2.generateRequestId)();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: (0, utils_1.getSDKVersion)(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\n//# sourceMappingURL=messageFormatter.js.map"]},"metadata":{},"sourceType":"script"}