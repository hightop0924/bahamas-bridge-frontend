{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/modals/TokenListModal.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Button, Flex, Image, Input, InputGroup, InputRightElement, Link, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Spinner, Text, useBreakpointValue, useDisclosure } from '@chakra-ui/react';\nimport SearchIcon from \"assets/search.svg\";\nimport { Logo } from 'components/common/Logo';\nimport { ConfirmBSCTokenModal, shouldShowBSCTokenModal } from 'components/modals/ConfirmBSCTokenModal';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useSettings } from 'contexts/SettingsContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { PlusIcon } from 'icons/PlusIcon';\nimport { LOCAL_STORAGE_KEYS } from 'lib/constants';\nimport { formatValue, getNativeCurrency, logError, uniqueTokens } from 'lib/helpers';\nimport { ETH_BSC_BRIDGE } from 'lib/networks';\nimport { fetchTokenBalanceWithProvider } from 'lib/token';\nimport { fetchTokenList } from 'lib/tokenList';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  CUSTOM_TOKENS\n} = LOCAL_STORAGE_KEYS;\nconst TokenDisplay = ({\n  token,\n  onClick\n}) => {\n  _s();\n  const {\n    ethersProvider,\n    account\n  } = useWeb3Context();\n  const {\n    decimals,\n    name,\n    logoURI,\n    symbol,\n    address,\n    mode,\n    chainId\n  } = token;\n  const {\n    disableBalanceFetchToken\n  } = useSettings();\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState();\n  useEffect(() => {\n    (async () => {\n      if (!ethersProvider || !account || disableBalanceFetchToken) return;\n      setLoading(true);\n      try {\n        const b = await fetchTokenBalanceWithProvider(ethersProvider, {\n          address,\n          mode,\n          symbol\n        }, account);\n        setBalance(b);\n      } catch (error) {\n        logError(`Error fetching balance for ${address}-${symbol}`, error);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [ethersProvider, account, address, mode, symbol, disableBalanceFetchToken]);\n  const desc = balance && decimals && !disableBalanceFetchToken ? formatValue(balance, decimals) : name;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"outline\",\n    size: \"lg\",\n    width: \"100%\",\n    borderColor: \"#DAE3F0\",\n    onClick: () => onClick(token),\n    mb: 2,\n    px: 4,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      width: \"100%\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"center\",\n          align: \"center\",\n          background: \"white\",\n          border: \"1px solid #DAE3F0\",\n          boxSize: 8,\n          overflow: \"hidden\",\n          borderRadius: \"50%\",\n          children: /*#__PURE__*/_jsxDEV(Logo, {\n            uri: logoURI,\n            chainId: chainId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          mx: 2,\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"sm\",\n        speed: \"0.5s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Text, {\n        color: \"grey\",\n        fontWeight: \"normal\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n        maxWidth: \"60%\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenDisplay, \"2EmSAjnP1KFH5Ixej/+M/miXRCE=\", false, function () {\n  return [useWeb3Context, useSettings];\n});\n_c = TokenDisplay;\nexport const TokenListModal = ({\n  isOpen,\n  onClose,\n  onCustom\n}) => {\n  _s2();\n  // Ref\n  const initialRef = useRef();\n  // Contexts\n  const {\n    fromToken,\n    setToken,\n    setLoading: setBridgeLoading\n  } = useBridgeContext();\n  const {\n    chainId\n  } = fromToken !== null && fromToken !== void 0 ? fromToken : {};\n\n  // State\n  const [loading, setLoading] = useState(false);\n  const [tokenList, setTokenList] = useState([]);\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const smallScreen = useBreakpointValue({\n    sm: false,\n    base: true\n  });\n  const {\n    bridgeDirection,\n    getBridgeChainId,\n    foreignChainId,\n    getGraphEndpoint,\n    enableForeignCurrencyBridge\n  } = useBridgeDirection();\n  const [customTokens, setCustomTokens] = useState([]);\n\n  // Effects\n  useEffect(() => {\n    (async () => {\n      if (!chainId) return;\n      setLoading(true);\n      try {\n        const baseTokenList = await fetchTokenList(chainId, getGraphEndpoint(chainId), getGraphEndpoint(getBridgeChainId(chainId)));\n        const nativeCurrency = enableForeignCurrencyBridge && foreignChainId === chainId ? [getNativeCurrency(chainId)] : [];\n        const customTokenList = [...nativeCurrency, ...uniqueTokens(baseTokenList.concat(customTokens.filter(token => token.chainId === chainId)))];\n        setTokenList(customTokenList);\n      } catch (fetchTokensError) {\n        logError({\n          fetchTokensError\n        });\n      }\n      setLoading(false);\n    })();\n  }, [chainId, getGraphEndpoint, getBridgeChainId, enableForeignCurrencyBridge, foreignChainId, customTokens]);\n  useEffect(() => {\n    if (isOpen && tokenList.length) {\n      setFilteredTokenList(tokenList);\n    }\n  }, [isOpen, tokenList, setFilteredTokenList]);\n  useEffect(() => {\n    if (isOpen) {\n      const localTokenList = window.localStorage.getItem(CUSTOM_TOKENS);\n      if (localTokenList && localTokenList !== JSON.stringify(customTokens)) {\n        setCustomTokens(JSON.parse(localTokenList));\n      }\n    }\n  }, [isOpen, customTokens]);\n\n  // Handlers\n  const selectToken = useCallback(async token => {\n    onClose();\n    setBridgeLoading(true);\n    await setToken(token);\n    setBridgeLoading(false);\n  }, [setBridgeLoading, onClose, setToken]);\n  const {\n    isOpen: shouldShowWarning,\n    onOpen: showWarning,\n    onClose: closeWarning\n  } = useDisclosure();\n  const [selectedToken, setSelectedToken] = useState();\n  const onConfirmWarningModal = useCallback(() => {\n    selectToken(selectedToken);\n  }, [selectedToken, selectToken]);\n  const onClick = useCallback(async token => {\n    setSelectedToken(token);\n    if (bridgeDirection === ETH_BSC_BRIDGE && shouldShowBSCTokenModal(token)) {\n      showWarning();\n    } else {\n      selectToken(token);\n    }\n  }, [selectToken, bridgeDirection, showWarning]);\n  const onChange = e => {\n    const newFilteredTokenList = tokenList.filter(token => {\n      const lowercaseSearch = e.target.value.toLowerCase();\n      const {\n        name,\n        symbol,\n        address\n      } = token;\n      return name.toLowerCase().includes(lowercaseSearch) || symbol.toLowerCase().includes(lowercaseSearch) || address.toLowerCase().includes(lowercaseSearch);\n    });\n    setFilteredTokenList(newFilteredTokenList);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    scrollBehavior: \"inside\",\n    isCentered: true,\n    initialFocusRef: initialRef,\n    children: /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      background: \"modalBG\",\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        boxShadow: \"0px 1rem 2rem #617492\",\n        borderRadius: \"1rem\",\n        pb: 4,\n        pt: 2,\n        maxW: \"37rem\",\n        mx: \"12\",\n        children: [chainId && /*#__PURE__*/_jsxDEV(ConfirmBSCTokenModal, {\n          isOpen: !!selectedToken && shouldShowWarning,\n          onClose: closeWarning,\n          onConfirm: onConfirmWarningModal,\n          token: selectedToken,\n          bridgeChainId: getBridgeChainId(chainId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n          pb: 0,\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"space-between\",\n            children: [\"Select a Token\", /*#__PURE__*/_jsxDEV(Link, {\n              fontSize: \"md\",\n              color: \"blue.500\",\n              fontWeight: \"normal\",\n              onClick: onCustom,\n              children: /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n                  mr: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: smallScreen ? 'Custom' : 'Add Custom Token'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"grey\",\n            my: 2,\n            fontSize: \"md\",\n            fontWeight: \"normal\",\n            children: \"Search Name or Paste Token Contract Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            mb: 4,\n            borderColor: \"#DAE3F0\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Search ...\",\n              onChange: onChange,\n              _placeholder: {\n                color: 'grey'\n              },\n              ref: initialRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n              px: 0,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: SearchIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          size: \"lg\",\n          top: -10,\n          right: -10,\n          color: \"white\",\n          p: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          minH: \"5rem\",\n          children: loading ? /*#__PURE__*/_jsxDEV(Flex, {\n            w: \"100%\",\n            align: \"center\",\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              color: \"blue.500\",\n              thickness: \"4px\",\n              size: \"xl\",\n              speed: \"0.75s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this) : filteredTokenList.map(token => /*#__PURE__*/_jsxDEV(TokenDisplay, {\n            token,\n            onClick\n          }, token.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s2(TokenListModal, \"YDZOC21eOQ6205Yxhspq9wB5tt8=\", false, function () {\n  return [useBridgeContext, useBreakpointValue, useBridgeDirection, useDisclosure];\n});\n_c2 = TokenListModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"TokenDisplay\");\n$RefreshReg$(_c2, \"TokenListModal\");","map":{"version":3,"names":["Button","Flex","Image","Input","InputGroup","InputRightElement","Link","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Spinner","Text","useBreakpointValue","useDisclosure","SearchIcon","Logo","ConfirmBSCTokenModal","shouldShowBSCTokenModal","useBridgeContext","useSettings","useWeb3Context","useBridgeDirection","PlusIcon","LOCAL_STORAGE_KEYS","formatValue","getNativeCurrency","logError","uniqueTokens","ETH_BSC_BRIDGE","fetchTokenBalanceWithProvider","fetchTokenList","React","useCallback","useEffect","useRef","useState","jsxDEV","_jsxDEV","CUSTOM_TOKENS","TokenDisplay","token","onClick","_s","ethersProvider","account","decimals","name","logoURI","symbol","address","mode","chainId","disableBalanceFetchToken","loading","setLoading","balance","setBalance","b","error","desc","variant","size","width","borderColor","mb","px","children","align","justify","background","border","boxSize","overflow","borderRadius","uri","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","mx","speed","color","textOverflow","maxWidth","_c","TokenListModal","isOpen","onClose","onCustom","_s2","initialRef","fromToken","setToken","setBridgeLoading","tokenList","setTokenList","filteredTokenList","setFilteredTokenList","smallScreen","sm","base","bridgeDirection","getBridgeChainId","foreignChainId","getGraphEndpoint","enableForeignCurrencyBridge","customTokens","setCustomTokens","baseTokenList","nativeCurrency","customTokenList","concat","filter","fetchTokensError","length","localTokenList","window","localStorage","getItem","JSON","stringify","parse","selectToken","shouldShowWarning","onOpen","showWarning","closeWarning","selectedToken","setSelectedToken","onConfirmWarningModal","onChange","e","newFilteredTokenList","lowercaseSearch","target","value","toLowerCase","includes","scrollBehavior","isCentered","initialFocusRef","boxShadow","pb","pt","maxW","onConfirm","bridgeChainId","mr","my","placeholder","_placeholder","ref","src","top","right","p","minH","w","thickness","map","_c2","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/modals/TokenListModal.jsx"],"sourcesContent":["import {\n  Button,\n  Flex,\n  Image,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Link,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n  useBreakpointValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport SearchIcon from 'assets/search.svg';\nimport { Logo } from 'components/common/Logo';\nimport {\n  ConfirmBSCTokenModal,\n  shouldShowBSCTokenModal,\n} from 'components/modals/ConfirmBSCTokenModal';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useSettings } from 'contexts/SettingsContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { PlusIcon } from 'icons/PlusIcon';\nimport { LOCAL_STORAGE_KEYS } from 'lib/constants';\nimport {\n  formatValue,\n  getNativeCurrency,\n  logError,\n  uniqueTokens,\n} from 'lib/helpers';\nimport { ETH_BSC_BRIDGE } from 'lib/networks';\nimport { fetchTokenBalanceWithProvider } from 'lib/token';\nimport { fetchTokenList } from 'lib/tokenList';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst { CUSTOM_TOKENS } = LOCAL_STORAGE_KEYS;\n\nconst TokenDisplay = ({ token, onClick }) => {\n  const { ethersProvider, account } = useWeb3Context();\n  const { decimals, name, logoURI, symbol, address, mode, chainId } = token;\n  const { disableBalanceFetchToken } = useSettings();\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState();\n\n  useEffect(() => {\n    (async () => {\n      if (!ethersProvider || !account || disableBalanceFetchToken) return;\n      setLoading(true);\n      try {\n        const b = await fetchTokenBalanceWithProvider(\n          ethersProvider,\n          { address, mode, symbol },\n          account,\n        );\n        setBalance(b);\n      } catch (error) {\n        logError(`Error fetching balance for ${address}-${symbol}`, error);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [\n    ethersProvider,\n    account,\n    address,\n    mode,\n    symbol,\n    disableBalanceFetchToken,\n  ]);\n\n  const desc =\n    balance && decimals && !disableBalanceFetchToken\n      ? formatValue(balance, decimals)\n      : name;\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"lg\"\n      width=\"100%\"\n      borderColor=\"#DAE3F0\"\n      onClick={() => onClick(token)}\n      mb={2}\n      px={4}\n    >\n      <Flex align=\"center\" width=\"100%\" justify=\"space-between\">\n        <Flex align=\"center\">\n          <Flex\n            justify=\"center\"\n            align=\"center\"\n            background=\"white\"\n            border=\"1px solid #DAE3F0\"\n            boxSize={8}\n            overflow=\"hidden\"\n            borderRadius=\"50%\"\n          >\n            <Logo uri={logoURI} chainId={chainId} />\n          </Flex>\n          <Text fontSize=\"lg\" fontWeight=\"bold\" mx={2}>\n            {symbol}\n          </Text>\n        </Flex>\n        {loading ? (\n          <Spinner size=\"sm\" speed=\"0.5s\" />\n        ) : (\n          <Text\n            color=\"grey\"\n            fontWeight=\"normal\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n            maxWidth=\"60%\"\n          >\n            {desc}\n          </Text>\n        )}\n      </Flex>\n    </Button>\n  );\n};\n\nexport const TokenListModal = ({ isOpen, onClose, onCustom }) => {\n  // Ref\n  const initialRef = useRef();\n  // Contexts\n  const {\n    fromToken,\n    setToken,\n    setLoading: setBridgeLoading,\n  } = useBridgeContext();\n  const { chainId } = fromToken ?? {};\n\n  // State\n  const [loading, setLoading] = useState(false);\n  const [tokenList, setTokenList] = useState([]);\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const smallScreen = useBreakpointValue({ sm: false, base: true });\n  const {\n    bridgeDirection,\n    getBridgeChainId,\n    foreignChainId,\n    getGraphEndpoint,\n    enableForeignCurrencyBridge,\n  } = useBridgeDirection();\n\n  const [customTokens, setCustomTokens] = useState([]);\n\n  // Effects\n  useEffect(() => {\n    (async () => {\n      if (!chainId) return;\n      setLoading(true);\n      try {\n        const baseTokenList = await fetchTokenList(\n          chainId,\n          getGraphEndpoint(chainId),\n          getGraphEndpoint(getBridgeChainId(chainId)),\n        );\n\n        const nativeCurrency =\n          enableForeignCurrencyBridge && foreignChainId === chainId\n            ? [getNativeCurrency(chainId)]\n            : [];\n\n        const customTokenList = [\n          ...nativeCurrency,\n          ...uniqueTokens(\n            baseTokenList.concat(\n              customTokens.filter(token => token.chainId === chainId),\n            ),\n          ),\n        ];\n\n        setTokenList(customTokenList);\n      } catch (fetchTokensError) {\n        logError({ fetchTokensError });\n      }\n      setLoading(false);\n    })();\n  }, [\n    chainId,\n    getGraphEndpoint,\n    getBridgeChainId,\n    enableForeignCurrencyBridge,\n    foreignChainId,\n    customTokens,\n  ]);\n\n  useEffect(() => {\n    if (isOpen && tokenList.length) {\n      setFilteredTokenList(tokenList);\n    }\n  }, [isOpen, tokenList, setFilteredTokenList]);\n\n  useEffect(() => {\n    if (isOpen) {\n      const localTokenList = window.localStorage.getItem(CUSTOM_TOKENS);\n      if (localTokenList && localTokenList !== JSON.stringify(customTokens)) {\n        setCustomTokens(JSON.parse(localTokenList));\n      }\n    }\n  }, [isOpen, customTokens]);\n\n  // Handlers\n  const selectToken = useCallback(\n    async token => {\n      onClose();\n      setBridgeLoading(true);\n      await setToken(token);\n      setBridgeLoading(false);\n    },\n    [setBridgeLoading, onClose, setToken],\n  );\n\n  const {\n    isOpen: shouldShowWarning,\n    onOpen: showWarning,\n    onClose: closeWarning,\n  } = useDisclosure();\n\n  const [selectedToken, setSelectedToken] = useState();\n\n  const onConfirmWarningModal = useCallback(() => {\n    selectToken(selectedToken);\n  }, [selectedToken, selectToken]);\n\n  const onClick = useCallback(\n    async token => {\n      setSelectedToken(token);\n      if (\n        bridgeDirection === ETH_BSC_BRIDGE &&\n        shouldShowBSCTokenModal(token)\n      ) {\n        showWarning();\n      } else {\n        selectToken(token);\n      }\n    },\n    [selectToken, bridgeDirection, showWarning],\n  );\n\n  const onChange = e => {\n    const newFilteredTokenList = tokenList.filter(token => {\n      const lowercaseSearch = e.target.value.toLowerCase();\n      const { name, symbol, address } = token;\n      return (\n        name.toLowerCase().includes(lowercaseSearch) ||\n        symbol.toLowerCase().includes(lowercaseSearch) ||\n        address.toLowerCase().includes(lowercaseSearch)\n      );\n    });\n    setFilteredTokenList(newFilteredTokenList);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      scrollBehavior=\"inside\"\n      isCentered\n      initialFocusRef={initialRef}\n    >\n      <ModalOverlay background=\"modalBG\">\n        <ModalContent\n          boxShadow=\"0px 1rem 2rem #617492\"\n          borderRadius=\"1rem\"\n          pb={4}\n          pt={2}\n          maxW=\"37rem\"\n          mx=\"12\"\n        >\n          {chainId && (\n            <ConfirmBSCTokenModal\n              isOpen={!!selectedToken && shouldShowWarning}\n              onClose={closeWarning}\n              onConfirm={onConfirmWarningModal}\n              token={selectedToken}\n              bridgeChainId={getBridgeChainId(chainId)}\n            />\n          )}\n          <ModalHeader pb={0}>\n            <Flex align=\"center\" justify=\"space-between\">\n              Select a Token\n              <Link\n                fontSize=\"md\"\n                color=\"blue.500\"\n                fontWeight=\"normal\"\n                onClick={onCustom}\n              >\n                <Flex align=\"center\">\n                  <PlusIcon mr={2} />\n                  <Text>{smallScreen ? 'Custom' : 'Add Custom Token'}</Text>\n                </Flex>\n              </Link>\n            </Flex>\n            <Text color=\"grey\" my={2} fontSize=\"md\" fontWeight=\"normal\">\n              Search Name or Paste Token Contract Address\n            </Text>\n            <InputGroup mb={4} borderColor=\"#DAE3F0\">\n              <Input\n                placeholder=\"Search ...\"\n                onChange={onChange}\n                _placeholder={{ color: 'grey' }}\n                ref={initialRef}\n              />\n              <InputRightElement px={0}>\n                <Image src={SearchIcon} />\n              </InputRightElement>\n            </InputGroup>\n          </ModalHeader>\n          <ModalCloseButton\n            size=\"lg\"\n            top={-10}\n            right={-10}\n            color=\"white\"\n            p={2}\n          />\n          <ModalBody minH=\"5rem\">\n            {loading ? (\n              <Flex w=\"100%\" align=\"center\" justify=\"center\">\n                <Spinner\n                  color=\"blue.500\"\n                  thickness=\"4px\"\n                  size=\"xl\"\n                  speed=\"0.75s\"\n                />\n              </Flex>\n            ) : (\n              filteredTokenList.map(token => (\n                <TokenDisplay key={token.address} {...{ token, onClick }} />\n              ))\n            )}\n          </ModalBody>\n        </ModalContent>\n      </ModalOverlay>\n    </Modal>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}