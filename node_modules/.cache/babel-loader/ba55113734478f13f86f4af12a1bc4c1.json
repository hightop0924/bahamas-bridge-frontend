{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobalObject } from '@sentry/utils';\nexport var onHidden = function (cb, once) {\n  var onHiddenOrPageHide = function (event) {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};","map":{"version":3,"sources":["../../../../../../src/browser/web-vitals/lib/onHidden.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,SAAS,eAAe,QAAQ,eAAe;AAM/C,OAAO,IAAM,QAAQ,GAAG,SAAA,CAAC,EAAoB,EAAE,IAAc,EAAA;EAC3D,IAAM,kBAAkB,GAAG,SAAA,CAAC,KAAY,EAAA;IACtC,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,eAAe,CAAA,CAAU,CAAC,QAAQ,CAAC,eAAe,KAAK,QAAQ,EAAE;MAChG,EAAE,CAAC,KAAK,CAAC;MACT,IAAI,IAAI,EAAE;QACR,mBAAmB,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,IAAI,CAAC;QACjE,mBAAmB,CAAC,UAAU,EAAE,kBAAkB,EAAE,IAAI,CAAC;MAC1D;IACF;EACH,CAAC;EACD,gBAAgB,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,IAAI,CAAC;EAC9D;EACA;EACA,gBAAgB,CAAC,UAAU,EAAE,kBAAkB,EAAE,IAAI,CAAC;AACxD,CAAC","sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobalObject } from '@sentry/utils';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || getGlobalObject<Window>().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}