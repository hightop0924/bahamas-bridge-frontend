{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\nvar WindowOperator = /*@__PURE__*/function () {\n  function WindowOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n  WindowOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  };\n  return WindowOperator;\n}();\nvar WindowSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowSubscriber, _super);\n  function WindowSubscriber(destination, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.closingSelector = closingSelector;\n    _this.openWindow();\n    return _this;\n  }\n  WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.openWindow(innerSub);\n  };\n  WindowSubscriber.prototype.notifyError = function (error) {\n    this._error(error);\n  };\n  WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.openWindow(innerSub);\n  };\n  WindowSubscriber.prototype._next = function (value) {\n    this.window.next(value);\n  };\n  WindowSubscriber.prototype._error = function (err) {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  };\n  WindowSubscriber.prototype._complete = function () {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  };\n  WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  };\n  WindowSubscriber.prototype.openWindow = function (innerSub) {\n    if (innerSub === void 0) {\n      innerSub = null;\n    }\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n    var prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    var window = this.window = new Subject();\n    this.destination.next(window);\n    var closingNotifier;\n    try {\n      var closingSelector = this.closingSelector;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  };\n  return WindowSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/windowWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier;\n        try {\n            var closingSelector = this.closingSelector;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n"]},"metadata":{},"sourceType":"module"}