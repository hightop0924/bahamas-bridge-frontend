{"ast":null,"code":"/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/function () {\n  function Subscription(unsubscribe) {\n    this.closed = false;\n    this._parentOrParents = null;\n    this._subscriptions = null;\n    if (unsubscribe) {\n      this._ctorUnsubscribe = true;\n      this._unsubscribe = unsubscribe;\n    }\n  }\n  Subscription.prototype.unsubscribe = function () {\n    var errors;\n    if (this.closed) {\n      return;\n    }\n    var _a = this,\n      _parentOrParents = _a._parentOrParents,\n      _ctorUnsubscribe = _a._ctorUnsubscribe,\n      _unsubscribe = _a._unsubscribe,\n      _subscriptions = _a._subscriptions;\n    this.closed = true;\n    this._parentOrParents = null;\n    this._subscriptions = null;\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (var index = 0; index < _parentOrParents.length; ++index) {\n        var parent_1 = _parentOrParents[index];\n        parent_1.remove(this);\n      }\n    }\n    if (isFunction(_unsubscribe)) {\n      if (_ctorUnsubscribe) {\n        this._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n    if (isArray(_subscriptions)) {\n      var index = -1;\n      var len = _subscriptions.length;\n      while (++index < len) {\n        var sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  };\n  Subscription.prototype.add = function (teardown) {\n    var subscription = teardown;\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          var tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        {\n          throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n    }\n    var _parentOrParents = subscription._parentOrParents;\n    if (_parentOrParents === null) {\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        return subscription;\n      }\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      _parentOrParents.push(this);\n    } else {\n      return subscription;\n    }\n    var subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n    return subscription;\n  };\n  Subscription.prototype.remove = function (subscription) {\n    var subscriptions = this._subscriptions;\n    if (subscriptions) {\n      var subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  };\n  Subscription.EMPTY = function (empty) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription());\n  return Subscription;\n}();\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n}","map":{"version":3,"sources":["../../src/internal/Subscription.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n"]},"metadata":{},"sourceType":"module"}