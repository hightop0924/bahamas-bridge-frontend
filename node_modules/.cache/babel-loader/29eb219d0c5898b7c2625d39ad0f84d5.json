{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\nvar BufferToggleOperator = /*@__PURE__*/function () {\n  function BufferToggleOperator(openings, closingSelector) {\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n  BufferToggleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  };\n  return BufferToggleOperator;\n}();\nvar BufferToggleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BufferToggleSubscriber, _super);\n  function BufferToggleSubscriber(destination, openings, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n    _this.add(subscribeToResult(_this, openings));\n    return _this;\n  }\n  BufferToggleSubscriber.prototype._next = function (value) {\n    var contexts = this.contexts;\n    var len = contexts.length;\n    for (var i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  };\n  BufferToggleSubscriber.prototype._error = function (err) {\n    var contexts = this.contexts;\n    while (contexts.length > 0) {\n      var context_1 = contexts.shift();\n      context_1.subscription.unsubscribe();\n      context_1.buffer = null;\n      context_1.subscription = null;\n    }\n    this.contexts = null;\n    _super.prototype._error.call(this, err);\n  };\n  BufferToggleSubscriber.prototype._complete = function () {\n    var contexts = this.contexts;\n    while (contexts.length > 0) {\n      var context_2 = contexts.shift();\n      this.destination.next(context_2.buffer);\n      context_2.subscription.unsubscribe();\n      context_2.buffer = null;\n      context_2.subscription = null;\n    }\n    this.contexts = null;\n    _super.prototype._complete.call(this);\n  };\n  BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  };\n  BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.closeBuffer(innerSub.context);\n  };\n  BufferToggleSubscriber.prototype.openBuffer = function (value) {\n    try {\n      var closingSelector = this.closingSelector;\n      var closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  };\n  BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n    var contexts = this.contexts;\n    if (contexts && context) {\n      var buffer = context.buffer,\n        subscription = context.subscription;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  };\n  BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n    var contexts = this.contexts;\n    var buffer = [];\n    var subscription = new Subscription();\n    var context = {\n      buffer: buffer,\n      subscription: subscription\n    };\n    contexts.push(context);\n    var innerSubscription = subscribeToResult(this, closingNotifier, context);\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      innerSubscription.context = context;\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  };\n  return BufferToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n"]},"metadata":{},"sourceType":"module"}