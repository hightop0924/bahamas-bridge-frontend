{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n  if (!scheduler) {\n    return new Observable(function (subscriber) {\n      var keys = Object.keys(obj);\n      for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n        var key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable(function (subscriber) {\n      var keys = Object.keys(obj);\n      var subscription = new Subscription();\n      subscription.add(scheduler.schedule(dispatch, 0, {\n        keys: keys,\n        index: 0,\n        subscriber: subscriber,\n        subscription: subscription,\n        obj: obj\n      }));\n      return subscription;\n    });\n  }\n}\nexport function dispatch(state) {\n  var keys = state.keys,\n    index = state.index,\n    subscriber = state.subscriber,\n    subscription = state.subscription,\n    obj = state.obj;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      var key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({\n        keys: keys,\n        index: index + 1,\n        subscriber: subscriber,\n        subscription: subscription,\n        obj: obj\n      }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/pairs.ts"],"names":[],"mappings":"AAAA;AAGA,SAAS,UAAA,QAAc,eAAM;AAkD7B,SAAM,YAAe,QAAiB,iBAAyB;AAC7D,OAAA,SAAK,KAAW,CAAA,GAAA,EAAA,SAAA,EAAA;MACd,CAAA,SAAO,EAAI;IACT,OAAA,IAAM,UAAa,CAAC,UAAU,UAAA,EAAA;MAC9B,IAAA,IAAK,GAAK,MAAO,CAAA,IAAG,CAAA,GAAK,CAAA;MACvB,KAAA,IAAM,CAAA,GAAG,CAAG,EAAA,CAAA,GAAM,IAAE,CAAA,MAAA,IAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;QACpB,IAAI,GAAG,GAAC,IAAA,CAAA,CAAA,CAAA;YACN,GAAA,CAAA,cAAiB,CAAA,GAAK,CAAA,EAAG;UAC1B,UAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA;QACF;MACD;MACC,UAAA,CAAA,QAAA,CAAA,CAAA;IACJ,CAAA,CAAA;GAAM,MACL;IACE,OAAA,IAAM,UAAa,CAAC,UAAU,UAAA,EAAA;MAC9B,IAAM,IAAA,GAAA,MAAY,CAAA,IAAG,CAAI,GAAA,CAAA;MACzB,IAAA,YAAgB,GACd,IAAA,YAAkB,CACf,CAAA;MACL,YAAO,CAAA,GAAA,CAAA,SAAa,CAAA,QAAA,CAAA,QAAA,EAAA,CAAA,EAAA;QAAA,IAAA,EAAA,IAAA;QAAA,KAAA,EAAA,CAAA;QAAA,UAAA,EAAA,UAAA;QAAA,YAAA,EAAA,YAAA;QAAA,GAAA,EAAA;MAAA,CAAA,CAAA,CAAA;MACnB,OAAA,YAAA;IACJ,CAAA,CAAA;EACF;AAGD;AAEU,OAAA,SAAA,QAAA,CAAI,KAAE,EAAA;EACd,IAAI,IAAC,GAAA,KAAW,CAAA,IAAA;IAAM,KAAE,GAAA,KAAA,CAAA,KAAA;IAAA,UAAA,GAAA,KAAA,CAAA,UAAA;IAAA,YAAA,GAAA,KAAA,CAAA,YAAA;IAAA,GAAA,GAAA,KAAA,CAAA,GAAA;MACtB,CAAA,UAAS,CAAG,MAAK,EAAA;QACf,KAAM,GAAG,IAAG,CAAA,MAAK,EAAM;MACvB,IAAA,GAAA,GAAU,IAAC,CAAI,KAAK,CAAA;MACpB,UAAA,CAAA,IAAa,CAAG,CAAC,GAAA,EAAK,GAAA,CAAA,GAAA,CAAQ,CAAC,CAAA;MAChC,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA;QAAA,IAAA,EAAA,IAAA;QAAA,KAAA,EAAA,KAAA,GAAA,CAAA;QAAA,UAAA,EAAA,UAAA;QAAA,YAAA,EAAA,YAAA;QAAA,GAAA,EAAA;MAAA,CAAA,CAAA,CAAA;KAAM,MACL;MACD,UAAA,CAAA,QAAA,CAAA,CAAA;IACF;EACF","sourcesContent":["/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n                var key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            var subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            var key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map\n"]},"metadata":{},"sourceType":"module"}