{"ast":null,"code":"import * as windowMetadata from \"@walletconnect/window-metadata\";\nimport * as windowGetters from \"@walletconnect/window-getters\";\nimport { detect } from \"detect-browser\";\nexport function detectEnv(userAgent) {\n  return detect(userAgent);\n}\nexport function detectOS() {\n  const env = detectEnv();\n  return env && env.os ? env.os : undefined;\n}\nexport function isAndroid() {\n  const os = detectOS();\n  return os ? os.toLowerCase().includes(\"android\") : false;\n}\nexport function isIOS() {\n  const os = detectOS();\n  return os ? os.toLowerCase().includes(\"ios\") || os.toLowerCase().includes(\"mac\") && navigator.maxTouchPoints > 1 : false;\n}\nexport function isMobile() {\n  const os = detectOS();\n  return os ? isAndroid() || isIOS() : false;\n}\nexport function isNode() {\n  const env = detectEnv();\n  const result = env && env.name ? env.name.toLowerCase() === \"node\" : false;\n  return result;\n}\nexport function isBrowser() {\n  const result = !isNode() && !!getNavigator();\n  return result;\n}\nexport const getFromWindow = windowGetters.getFromWindow;\nexport const getFromWindowOrThrow = windowGetters.getFromWindowOrThrow;\nexport const getDocumentOrThrow = windowGetters.getDocumentOrThrow;\nexport const getDocument = windowGetters.getDocument;\nexport const getNavigatorOrThrow = windowGetters.getNavigatorOrThrow;\nexport const getNavigator = windowGetters.getNavigator;\nexport const getLocationOrThrow = windowGetters.getLocationOrThrow;\nexport const getLocation = windowGetters.getLocation;\nexport const getCryptoOrThrow = windowGetters.getCryptoOrThrow;\nexport const getCrypto = windowGetters.getCrypto;\nexport const getLocalStorageOrThrow = windowGetters.getLocalStorageOrThrow;\nexport const getLocalStorage = windowGetters.getLocalStorage;\nexport function getClientMeta() {\n  return windowMetadata.getWindowMetadata();\n}","map":{"version":3,"sources":["../../src/browser.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,cAAc,MAAM,gCAAgC;AAChE,OAAO,KAAK,aAAa,MAAM,+BAA+B;AAC9D,SACE,MAAM,QAMD,gBAAgB;AAEvB,OAAM,SAAU,SAAS,CACvB,SAAkB,EAAA;EAElB,OAAO,MAAM,CAAC,SAAS,CAAC;AAC1B;AAEA,OAAM,SAAU,QAAQ,CAAA,EAAA;EACtB,MAAM,GAAG,GAAG,SAAS,CAAA,CAAE;EACvB,OAAO,GAAG,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,SAAS;AAC3C;AAEA,OAAM,SAAU,SAAS,CAAA,EAAA;EACvB,MAAM,EAAE,GAAG,QAAQ,CAAA,CAAE;EACrB,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAA,CAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,KAAK;AAC1D;AAEA,OAAM,SAAU,KAAK,CAAA,EAAA;EACnB,MAAM,EAAE,GAAG,QAAQ,CAAA,CAAE;EACrB,OAAO,EAAE,GACL,EAAE,CAAC,WAAW,CAAA,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,IAC7B,EAAE,CAAC,WAAW,CAAA,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,cAAc,GAAG,CAAE,GACpE,KAAK;AACX;AAEA,OAAM,SAAU,QAAQ,CAAA,EAAA;EACtB,MAAM,EAAE,GAAG,QAAQ,CAAA,CAAE;EACrB,OAAO,EAAE,GAAG,SAAS,CAAA,CAAE,IAAI,KAAK,CAAA,CAAE,GAAG,KAAK;AAC5C;AAEA,OAAM,SAAU,MAAM,CAAA,EAAA;EACpB,MAAM,GAAG,GAAG,SAAS,CAAA,CAAE;EACvB,MAAM,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAA,CAAE,KAAK,MAAM,GAAG,KAAK;EAC1E,OAAO,MAAM;AACf;AAEA,OAAM,SAAU,SAAS,CAAA,EAAA;EACvB,MAAM,MAAM,GAAG,CAAC,MAAM,CAAA,CAAE,IAAI,CAAC,CAAC,YAAY,CAAA,CAAE;EAC5C,OAAO,MAAM;AACf;AAEA,OAAO,MAAM,aAAa,GAAG,aAAa,CAAC,aAAa;AAExD,OAAO,MAAM,oBAAoB,GAAG,aAAa,CAAC,oBAAoB;AAEtE,OAAO,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB;AAElE,OAAO,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW;AAEpD,OAAO,MAAM,mBAAmB,GAAG,aAAa,CAAC,mBAAmB;AAEpE,OAAO,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY;AAEtD,OAAO,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB;AAElE,OAAO,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW;AAEpD,OAAO,MAAM,gBAAgB,GAAG,aAAa,CAAC,gBAAgB;AAE9D,OAAO,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS;AAEhD,OAAO,MAAM,sBAAsB,GAAG,aAAa,CAAC,sBAAsB;AAE1E,OAAO,MAAM,eAAe,GAAG,aAAa,CAAC,eAAe;AAE5D,OAAM,SAAU,aAAa,CAAA,EAAA;EAC3B,OAAO,cAAc,CAAC,iBAAiB,CAAA,CAAE;AAC3C","sourceRoot":"","sourcesContent":["import * as windowMetadata from \"@walletconnect/window-metadata\";\nimport * as windowGetters from \"@walletconnect/window-getters\";\nimport { detect, } from \"detect-browser\";\nexport function detectEnv(userAgent) {\n    return detect(userAgent);\n}\nexport function detectOS() {\n    const env = detectEnv();\n    return env && env.os ? env.os : undefined;\n}\nexport function isAndroid() {\n    const os = detectOS();\n    return os ? os.toLowerCase().includes(\"android\") : false;\n}\nexport function isIOS() {\n    const os = detectOS();\n    return os\n        ? os.toLowerCase().includes(\"ios\") ||\n            (os.toLowerCase().includes(\"mac\") && navigator.maxTouchPoints > 1)\n        : false;\n}\nexport function isMobile() {\n    const os = detectOS();\n    return os ? isAndroid() || isIOS() : false;\n}\nexport function isNode() {\n    const env = detectEnv();\n    const result = env && env.name ? env.name.toLowerCase() === \"node\" : false;\n    return result;\n}\nexport function isBrowser() {\n    const result = !isNode() && !!getNavigator();\n    return result;\n}\nexport const getFromWindow = windowGetters.getFromWindow;\nexport const getFromWindowOrThrow = windowGetters.getFromWindowOrThrow;\nexport const getDocumentOrThrow = windowGetters.getDocumentOrThrow;\nexport const getDocument = windowGetters.getDocument;\nexport const getNavigatorOrThrow = windowGetters.getNavigatorOrThrow;\nexport const getNavigator = windowGetters.getNavigator;\nexport const getLocationOrThrow = windowGetters.getLocationOrThrow;\nexport const getLocation = windowGetters.getLocation;\nexport const getCryptoOrThrow = windowGetters.getCryptoOrThrow;\nexport const getCrypto = windowGetters.getCrypto;\nexport const getLocalStorageOrThrow = windowGetters.getLocalStorageOrThrow;\nexport const getLocalStorage = windowGetters.getLocalStorage;\nexport function getClientMeta() {\n    return windowMetadata.getWindowMetadata();\n}\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"module"}