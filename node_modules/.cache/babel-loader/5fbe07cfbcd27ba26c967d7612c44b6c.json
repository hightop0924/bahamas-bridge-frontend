{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n  var resultSelector;\n  var initialState;\n  if (arguments.length == 1) {\n    var options = initialStateOrOptions;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions;\n    resultSelector = identity;\n    scheduler = resultSelectorOrObservable;\n  } else {\n    initialState = initialStateOrOptions;\n    resultSelector = resultSelectorOrObservable;\n  }\n  return new Observable(function (subscriber) {\n    var state = initialState;\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        subscriber: subscriber,\n        iterate: iterate,\n        condition: condition,\n        resultSelector: resultSelector,\n        state: state\n      });\n    }\n    do {\n      if (condition) {\n        var conditionResult = void 0;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      var value = void 0;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n    return undefined;\n  });\n}\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n    condition = state.condition;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    var conditionResult = void 0;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  var value;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}","map":{"version":3,"sources":["../../../src/internal/observable/generate.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    var resultSelector;\n    var initialState;\n    if (arguments.length == 1) {\n        var options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(function (subscriber) {\n        var state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber: subscriber,\n                iterate: iterate,\n                condition: condition,\n                resultSelector: resultSelector,\n                state: state\n            });\n        }\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, condition = state.condition;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        var conditionResult = void 0;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    var value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map\n"]},"metadata":{},"sourceType":"module"}