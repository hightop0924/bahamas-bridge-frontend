{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/common/WalletInfo.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Flex, Text } from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useRenderChain } from 'hooks/useRenderChain';\nimport { WalletFilledIcon } from 'icons/WalletFilledIcon';\nimport { getNetworkName } from 'lib/helpers';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WalletInfo = ({\n  close\n}) => {\n  _s();\n  const {\n    homeChainId,\n    foreignChainId,\n    getBridgeChainId\n  } = useBridgeDirection();\n  const {\n    fromToken\n  } = useBridgeContext();\n  const {\n    isConnected,\n    providerChainId,\n    disconnect,\n    loading\n  } = useWeb3Context();\n  const renderChain = useRenderChain();\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  if (!isConnected) return null;\n  const isHistoryPage = pathname === '/history';\n  let isInvalid = false;\n  if (isHistoryPage) {\n    isInvalid = loading ? false : ![homeChainId, foreignChainId].includes(providerChainId);\n  } else {\n    isInvalid = loading ? false : providerChainId !== (fromToken === null || fromToken === void 0 ? void 0 : fromToken.chainId);\n  }\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    background: \"white\",\n    direction: \"column\",\n    align: \"center\",\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      bg: isInvalid ? 'red.500' : 'blue.500',\n      borderRadius: \"50%\",\n      p: \"0.75rem\",\n      justify: \"center\",\n      align: \"center\",\n      color: \"white\",\n      mb: 4,\n      children: /*#__PURE__*/_jsxDEV(WalletFilledIcon, {\n        boxSize: \"1.25rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"lg\",\n      fontWeight: \"bold\",\n      mb: 4,\n      children: isInvalid ? 'Switch your network' : `Connected to ${getNetworkName(providerChainId)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isInvalid && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"greyText\",\n      mb: 4,\n      textAlign: \"center\",\n      children: isHistoryPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Please switch to \", renderChain(foreignChainId), \" for claiming your tokens\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Please switch to \", renderChain(fromToken === null || fromToken === void 0 ? void 0 : fromToken.chainId), \" for bridging your tokens to\", ' ', getNetworkName(getBridgeChainId(fromToken === null || fromToken === void 0 ? void 0 : fromToken.chainId))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        close();\n        disconnect();\n      },\n      colorScheme: \"blue\",\n      px: 12,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletInfo, \"d4DiUqRxaqmp84dWZmyxQ1mGap4=\", false, function () {\n  return [useBridgeDirection, useBridgeContext, useWeb3Context, useRenderChain, useHistory];\n});\n_c = WalletInfo;\nvar _c;\n$RefreshReg$(_c, \"WalletInfo\");","map":{"version":3,"names":["Button","Flex","Text","useBridgeContext","useWeb3Context","useBridgeDirection","useRenderChain","WalletFilledIcon","getNetworkName","React","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","WalletInfo","close","_s","homeChainId","foreignChainId","getBridgeChainId","fromToken","isConnected","providerChainId","disconnect","loading","renderChain","location","pathname","isHistoryPage","isInvalid","includes","chainId","background","direction","align","w","children","bg","borderRadius","p","justify","color","mb","boxSize","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","textAlign","onClick","colorScheme","px","_c","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/common/WalletInfo.jsx"],"sourcesContent":["import { Button, Flex, Text } from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useRenderChain } from 'hooks/useRenderChain';\nimport { WalletFilledIcon } from 'icons/WalletFilledIcon';\nimport { getNetworkName } from 'lib/helpers';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const WalletInfo = ({ close }) => {\n  const { homeChainId, foreignChainId, getBridgeChainId } =\n    useBridgeDirection();\n  const { fromToken } = useBridgeContext();\n  const { isConnected, providerChainId, disconnect, loading } =\n    useWeb3Context();\n\n  const renderChain = useRenderChain();\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  if (!isConnected) return null;\n\n  const isHistoryPage = pathname === '/history';\n\n  let isInvalid = false;\n\n  if (isHistoryPage) {\n    isInvalid = loading\n      ? false\n      : ![homeChainId, foreignChainId].includes(providerChainId);\n  } else {\n    isInvalid = loading ? false : providerChainId !== fromToken?.chainId;\n  }\n\n  return (\n    <Flex background=\"white\" direction=\"column\" align=\"center\" w=\"100%\">\n      <Flex\n        bg={isInvalid ? 'red.500' : 'blue.500'}\n        borderRadius=\"50%\"\n        p=\"0.75rem\"\n        justify=\"center\"\n        align=\"center\"\n        color=\"white\"\n        mb={4}\n      >\n        <WalletFilledIcon boxSize=\"1.25rem\" />\n      </Flex>\n      <Text fontSize=\"lg\" fontWeight=\"bold\" mb={4}>\n        {isInvalid\n          ? 'Switch your network'\n          : `Connected to ${getNetworkName(providerChainId)}`}\n      </Text>\n      {isInvalid && (\n        <Text color=\"greyText\" mb={4} textAlign=\"center\">\n          {isHistoryPage ? (\n            <>\n              Please switch to {renderChain(foreignChainId)} for claiming your\n              tokens\n            </>\n          ) : (\n            <>\n              Please switch to {renderChain(fromToken?.chainId)} for bridging\n              your tokens to{' '}\n              {getNetworkName(getBridgeChainId(fromToken?.chainId))}\n            </>\n          )}\n        </Text>\n      )}\n\n      <Button\n        onClick={() => {\n          close();\n          disconnect();\n        }}\n        colorScheme=\"blue\"\n        px={12}\n      >\n        Disconnect\n      </Button>\n    </Flex>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}