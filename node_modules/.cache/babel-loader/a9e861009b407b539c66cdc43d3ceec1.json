{"ast":null,"code":"/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/function () {\n  function Observable(subscribe) {\n    this._isScalar = false;\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var operator = this.operator;\n    var sink = toSubscriber(observerOrNext, error, complete);\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n    return sink;\n  };\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  };\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    });\n  };\n  Observable.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n    return source && source.subscribe(subscriber);\n  };\n  Observable.prototype[Symbol_observable] = function () {\n    return this;\n  };\n  Observable.prototype.pipe = function () {\n    var operations = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n    if (operations.length === 0) {\n      return this;\n    }\n    return pipeFromArray(operations)(this);\n  };\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n  return Observable;\n}();\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n  return promiseCtor;\n}","map":{"version":3,"sources":["../../src/internal/Observable.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n"]},"metadata":{},"sourceType":"module"}