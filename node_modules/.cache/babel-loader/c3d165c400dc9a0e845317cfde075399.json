{"ast":null,"code":"import { fill, loadModule, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../../flags';\n/** Tracing integration for node-mysql package */\nvar Mysql = /** @class */function () {\n  function Mysql() {\n    /**\n     * @inheritDoc\n     */\n    this.name = Mysql.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  Mysql.prototype.setupOnce = function (_, getCurrentHub) {\n    var pkg = loadModule('mysql/lib/Connection.js');\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function (options, values, callback) {\n        var _a, _b;\n        var scope = getCurrentHub().getScope();\n        var parentSpan = (_a = scope) === null || _a === void 0 ? void 0 : _a.getSpan();\n        var span = (_b = parentSpan) === null || _b === void 0 ? void 0 : _b.startChild({\n          description: typeof options === 'string' ? options : options.sql,\n          op: 'db'\n        });\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            callback(err, result, fields);\n          });\n        }\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            var _a;\n            (_a = span) === null || _a === void 0 ? void 0 : _a.finish();\n            values(err, result, fields);\n          });\n        }\n        return orig.call(this, options, values, callback);\n      };\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  Mysql.id = 'Mysql';\n  return Mysql;\n}();\nexport { Mysql };","map":{"version":3,"sources":["../../../../../src/integrations/node/mysql.ts"],"names":[],"mappings":"AAEA,SAAS,IAAI,EAAE,UAAU,EAAE,MAAM,QAAQ,eAAe;AAExD,SAAS,cAAc,QAAQ,aAAa;AAM5C;AACA,IAAA,KAAA,GAAA,aAAA,YAAA;EAAA,SAAA,KAAA,CAAA,EAAA;IAME;;AAEG;IACI,IAAA,CAAA,IAAI,GAAW,KAAK,CAAC,EAAE;EA4ChC;EA1CE;;AAEG;EACI,KAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,CAAqC,EAAE,aAAwB,EAAA;IAC9E,IAAM,GAAG,GAAG,UAAU,CAAkB,yBAAyB,CAAC;IAElE,IAAI,CAAC,GAAG,EAAE;MACR,cAAc,IAAI,MAAM,CAAC,KAAK,CAAC,0DAA0D,CAAC;MAC1F;IACD;IAED;IACA;IACA;IACA;IACA,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE,UAAU,IAAgB,EAAA;MACjD,OAAO,UAAyB,OAAgB,EAAE,MAAe,EAAE,QAAiB,EAAA;;QAClF,IAAM,KAAK,GAAG,aAAa,CAAA,CAAE,CAAC,QAAQ,CAAA,CAAE;QACxC,IAAM,UAAU,GAAA,CAAA,EAAA,GAAG,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAA,CAAE;QACnC,IAAM,IAAI,GAAA,CAAA,EAAA,GAAG,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;UAClC,WAAW,EAAE,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,GAAI,OAA2B,CAAC,GAAG;UACrF,EAAE,EAAE;SACL,CAAC;QAEF,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;UAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,GAAU,EAAE,MAAe,EAAE,MAAe,EAAA;;YAC5F,CAAA,EAAA,GAAA,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,CAAA;YACZ,QAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC;UAC/B,CAAC,CAAC;QACH;QAED,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;UAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,GAAU,EAAE,MAAe,EAAE,MAAe,EAAA;;YACpF,CAAA,EAAA,GAAA,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,CAAA;YACZ,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC;UAC7B,CAAC,CAAC;QACH;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;MACnD,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAnDD;;AAEG;EACW,KAAA,CAAA,EAAE,GAAW,OAAO;EAiDpC,OAAA,KAAC;CAAA,CAAA,CAAA;SArDY,KAAK","sourcesContent":["import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, loadModule, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../../flags';\n\ninterface MysqlConnection {\n  createQuery: () => void;\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mysql.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<MysqlConnection>('mysql/lib/Connection.js');\n\n    if (!pkg) {\n      IS_DEBUG_BUILD && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig: () => void) {\n      return function (this: unknown, options: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: 'db',\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}