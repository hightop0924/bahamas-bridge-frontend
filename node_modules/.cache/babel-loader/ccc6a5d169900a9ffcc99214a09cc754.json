{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n  var first = sources[0],\n    remainder = sources.slice(1);\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext.apply(void 0, first);\n  }\n  return new Observable(function (subscriber) {\n    var subNext = function () {\n      return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber));\n    };\n    return from(first).subscribe({\n      next: function (value) {\n        subscriber.next(value);\n      },\n      error: subNext,\n      complete: subNext\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/onErrorResumeNext.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAM,QAAM,eAAS;AAC9B,SAAS,IAAA,QAAS,QAAM;AACxB,SAAS,OAAO,QAAM,iBAAU;AAwEhC,SAAM,KAAA,QAAU,SAAA;AAAwB,OAAA,SAAA,iBAEqD,CAAA,EAAA;MAFrD,OAAA,GAAA,EAAA;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAEqD,MAAA,EAAA,EAAA,EAAA,EAAA;;EAE3F;MACE,OAAO,CAAA,MAAM,KAAA,CAAA,EAAA;IACd,OAAA,KAAA;EAEO;EAER,IAAI,KAAA,GAAQ,OAAM,CAAA,CAAA,CAAA;IAAM,SAAI,GAAQ,OAAM,CAAE,KAAA,CAAA,CAAA,CAAA;MAC1C,OAAO,CAAA,MAAA,KAAA,CAAA,IAAiB,OAAA,CAAA,KAAA,CAAA,EAAI;IAC7B,OAAA,iBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA;EAED;EACE,OAAA,IAAM,UAAU,CAAA,UAAM,UAAA,EAAA;IAItB,IAAA,OAAW,GAAC,SAAA,CAAA,EAAO;MAAS,OAAC,UAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,SAAA,CAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA;IAAA,CAAA;IAC3B,OAAA,IAAI,CAAA,KAAA,CAAA,CAAA,SAAM,CAAI;MACd,IAAA,EAAK,SAAA,CAAS,KAAA,EAAA;QAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA;MAAA,CAAA;MACd,KAAA,EAAA,OAAU;MACT,QAAA,EAAA;IACF,CAAA,CAAA;EACJ,CAAA,CAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    var first = sources[0], remainder = sources.slice(1);\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext.apply(void 0, first);\n    }\n    return new Observable(function (subscriber) {\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\n        return from(first).subscribe({\n            next: function (value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map\n"]},"metadata":{},"sourceType":"module"}