{"ast":null,"code":"import { parseQueryString } from \"./url\";\nexport function isWalletConnectSession(object) {\n  return typeof object.bridge !== \"undefined\";\n}\nexport function parseWalletConnectUri(str) {\n  const pathStart = str.indexOf(\":\");\n  const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n  const protocol = str.substring(0, pathStart);\n  const path = str.substring(pathStart + 1, pathEnd);\n  function parseRequiredParams(path) {\n    const separator = \"@\";\n    const values = path.split(separator);\n    const requiredParams = {\n      handshakeTopic: values[0],\n      version: parseInt(values[1], 10)\n    };\n    return requiredParams;\n  }\n  const requiredParams = parseRequiredParams(path);\n  const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n  function parseQueryParams(queryString) {\n    const result = parseQueryString(queryString);\n    const parameters = {\n      key: result.key || \"\",\n      bridge: result.bridge || \"\"\n    };\n    return parameters;\n  }\n  const queryParams = parseQueryParams(queryString);\n  const result = Object.assign(Object.assign({\n    protocol\n  }, requiredParams), queryParams);\n  return result;\n}","map":{"version":3,"sources":["../../src/session.ts"],"names":[],"mappings":"AAMA,SAAS,gBAAgB,QAAQ,OAAO;AAExC,OAAM,SAAU,sBAAsB,CAAC,MAAW,EAAA;EAChD,OAAO,OAAO,MAAM,CAAC,MAAM,KAAK,WAAW;AAC7C;AAEA,OAAM,SAAU,qBAAqB,CAAC,GAAW,EAAA;EAC/C,MAAM,SAAS,GAAW,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;EAE1C,MAAM,OAAO,GAAuB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS;EAE1F,MAAM,QAAQ,GAAW,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;EAEpD,MAAM,IAAI,GAAW,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,EAAE,OAAO,CAAC;EAE1D,SAAS,mBAAmB,CAAC,IAAY,EAAA;IACvC,MAAM,SAAS,GAAG,GAAG;IAErB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAEpC,MAAM,cAAc,GAAG;MACrB,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;MACzB,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;KAChC;IAED,OAAO,cAAc;EACvB;EAEA,MAAM,cAAc,GAA0B,mBAAmB,CAAC,IAAI,CAAC;EAEvE,MAAM,WAAW,GAAW,OAAO,OAAO,KAAK,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;EAErF,SAAS,gBAAgB,CAAC,WAAmB,EAAA;IAC3C,MAAM,MAAM,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAE5C,MAAM,UAAU,GAAuB;MACrC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,EAAE;MACrB,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI;KAC1B;IAED,OAAO,UAAU;EACnB;EAEA,MAAM,WAAW,GAAuB,gBAAgB,CAAC,WAAW,CAAC;EAErE,MAAM,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;IACV;EAAQ,CAAA,EACL,cAAc,CAAA,EACd,WAAW,CACf;EAED,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["import { parseQueryString } from \"./url\";\nexport function isWalletConnectSession(object) {\n    return typeof object.bridge !== \"undefined\";\n}\nexport function parseWalletConnectUri(str) {\n    const pathStart = str.indexOf(\":\");\n    const pathEnd = str.indexOf(\"?\") !== -1 ? str.indexOf(\"?\") : undefined;\n    const protocol = str.substring(0, pathStart);\n    const path = str.substring(pathStart + 1, pathEnd);\n    function parseRequiredParams(path) {\n        const separator = \"@\";\n        const values = path.split(separator);\n        const requiredParams = {\n            handshakeTopic: values[0],\n            version: parseInt(values[1], 10),\n        };\n        return requiredParams;\n    }\n    const requiredParams = parseRequiredParams(path);\n    const queryString = typeof pathEnd !== \"undefined\" ? str.substr(pathEnd) : \"\";\n    function parseQueryParams(queryString) {\n        const result = parseQueryString(queryString);\n        const parameters = {\n            key: result.key || \"\",\n            bridge: result.bridge || \"\",\n        };\n        return parameters;\n    }\n    const queryParams = parseQueryParams(queryString);\n    const result = Object.assign(Object.assign({ protocol }, requiredParams), queryParams);\n    return result;\n}\n//# sourceMappingURL=session.js.map"]},"metadata":{},"sourceType":"module"}