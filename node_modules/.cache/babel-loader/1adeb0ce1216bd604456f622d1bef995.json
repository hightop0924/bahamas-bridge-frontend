{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  var absoluteDelay = isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\nvar DelayOperator = /*@__PURE__*/function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n  return DelayOperator;\n}();\nvar DelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelaySubscriber, _super);\n  function DelaySubscriber(destination, delay, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.delay = delay;\n    _this.scheduler = scheduler;\n    _this.queue = [];\n    _this.active = false;\n    _this.errored = false;\n    return _this;\n  }\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    var destination = this.destination;\n    destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification.createNext(value));\n  };\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  };\n  return DelaySubscriber;\n}(Subscriber);\nvar DelayMessage = /*@__PURE__*/function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n  return DelayMessage;\n}();","map":{"version":3,"sources":["../../../src/internal/operators/delay.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        var destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n"]},"metadata":{},"sourceType":"module"}