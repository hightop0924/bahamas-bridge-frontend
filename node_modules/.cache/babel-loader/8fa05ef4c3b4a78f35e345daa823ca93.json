{"ast":null,"code":"import * as encoding from \"@walletconnect/encoding\";\nimport * as jsonRpcUtils from \"@walletconnect/jsonrpc-utils\";\nimport { infuraNetworks } from \"./constants\";\nexport function sanitizeHex(hex) {\n  return encoding.sanitizeHex(hex);\n}\nexport function addHexPrefix(hex) {\n  return encoding.addHexPrefix(hex);\n}\nexport function removeHexPrefix(hex) {\n  return encoding.removeHexPrefix(hex);\n}\nexport function removeHexLeadingZeros(hex) {\n  return encoding.removeHexLeadingZeros(encoding.addHexPrefix(hex));\n}\nexport const payloadId = jsonRpcUtils.payloadId;\nexport function uuid() {\n  const result = ((a, b) => {\n    for (b = a = \"\"; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : \"-\") {}\n    return b;\n  })();\n  return result;\n}\nexport function logDeprecationWarning() {\n  console.warn(\"DEPRECATION WARNING: This WalletConnect client library will be deprecated in favor of @walletconnect/client. Please check docs.walletconnect.org to learn more about this migration!\");\n}\nexport function getInfuraRpcUrl(chainId, infuraId) {\n  let rpcUrl;\n  const network = infuraNetworks[chainId];\n  if (network) {\n    rpcUrl = `https://${network}.infura.io/v3/${infuraId}`;\n  }\n  return rpcUrl;\n}\nexport function getRpcUrl(chainId, rpc) {\n  let rpcUrl;\n  const infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId);\n  if (rpc.custom && rpc.custom[chainId]) {\n    rpcUrl = rpc.custom[chainId];\n  } else if (infuraUrl) {\n    rpcUrl = infuraUrl;\n  }\n  return rpcUrl;\n}","map":{"version":3,"sources":["../../src/misc.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,yBAAyB;AACnD,OAAO,KAAK,YAAY,MAAM,8BAA8B;AAE5D,SAAS,cAAc,QAAQ,aAAa;AAI5C,OAAM,SAAU,WAAW,CAAC,GAAW,EAAA;EACrC,OAAO,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC;AAClC;AAEA,OAAM,SAAU,YAAY,CAAC,GAAW,EAAA;EACtC,OAAO,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC;AACnC;AAEA,OAAM,SAAU,eAAe,CAAC,GAAW,EAAA;EACzC,OAAO,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC;AACtC;AAEA,OAAM,SAAU,qBAAqB,CAAC,GAAW,EAAA;EAC/C,OAAO,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACnE;AAIA,OAAO,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS;AAE/C,OAAM,SAAU,IAAI,CAAA,EAAA;EAClB,MAAM,MAAM,GAAW,CAAC,CAAC,CAAO,EAAE,CAAO,KAAI;IAC3C,KACE,CAAC,GAAG,CAAC,GAAG,EAAE,EACV,CAAC,EAAE,GAAG,EAAE,EACR,CAAC,IAAK,CAAC,GAAG,EAAE,GAAI,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,IAAI,CAAC,MAAM,CAAA,CAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,EAC9F,CAED;IACD,OAAO,CAAC;EACV,CAAC,EAAC,CAAE;EACJ,OAAO,MAAM;AACf;AAIA,OAAM,SAAU,qBAAqB,CAAA,EAAA;EAEnC,OAAO,CAAC,IAAI,CACV,sLAAsL,CACvL;AACH;AAIA,OAAM,SAAU,eAAe,CAAC,OAAe,EAAE,QAAiB,EAAA;EAChE,IAAI,MAA0B;EAC9B,MAAM,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;EACvC,IAAI,OAAO,EAAE;IACX,MAAM,GAAG,WAAW,OAAO,iBAAiB,QAAQ,EAAE;EACvD;EACD,OAAO,MAAM;AACf;AAEA,OAAM,SAAU,SAAS,CAAC,OAAe,EAAE,GAAe,EAAA;EACxD,IAAI,MAA0B;EAC9B,MAAM,SAAS,GAAG,eAAe,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC;EACxD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;IACrC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;GAC7B,MAAM,IAAI,SAAS,EAAE;IACpB,MAAM,GAAG,SAAS;EACnB;EACD,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["import * as encoding from \"@walletconnect/encoding\";\nimport * as jsonRpcUtils from \"@walletconnect/jsonrpc-utils\";\nimport { infuraNetworks } from \"./constants\";\nexport function sanitizeHex(hex) {\n    return encoding.sanitizeHex(hex);\n}\nexport function addHexPrefix(hex) {\n    return encoding.addHexPrefix(hex);\n}\nexport function removeHexPrefix(hex) {\n    return encoding.removeHexPrefix(hex);\n}\nexport function removeHexLeadingZeros(hex) {\n    return encoding.removeHexLeadingZeros(encoding.addHexPrefix(hex));\n}\nexport const payloadId = jsonRpcUtils.payloadId;\nexport function uuid() {\n    const result = ((a, b) => {\n        for (b = a = \"\"; a++ < 36; b += (a * 51) & 52 ? (a ^ 15 ? 8 ^ (Math.random() * (a ^ 20 ? 16 : 4)) : 4).toString(16) : \"-\") {\n        }\n        return b;\n    })();\n    return result;\n}\nexport function logDeprecationWarning() {\n    console.warn(\"DEPRECATION WARNING: This WalletConnect client library will be deprecated in favor of @walletconnect/client. Please check docs.walletconnect.org to learn more about this migration!\");\n}\nexport function getInfuraRpcUrl(chainId, infuraId) {\n    let rpcUrl;\n    const network = infuraNetworks[chainId];\n    if (network) {\n        rpcUrl = `https://${network}.infura.io/v3/${infuraId}`;\n    }\n    return rpcUrl;\n}\nexport function getRpcUrl(chainId, rpc) {\n    let rpcUrl;\n    const infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId);\n    if (rpc.custom && rpc.custom[chainId]) {\n        rpcUrl = rpc.custom[chainId];\n    }\n    else if (infuraUrl) {\n        rpcUrl = infuraUrl;\n    }\n    return rpcUrl;\n}\n//# sourceMappingURL=misc.js.map"]},"metadata":{},"sourceType":"module"}