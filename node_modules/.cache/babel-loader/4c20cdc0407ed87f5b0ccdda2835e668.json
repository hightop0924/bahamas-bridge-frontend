{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler, config) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n  };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/function () {\n  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n  };\n  return ThrottleTimeOperator;\n}();\nvar ThrottleTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleTimeSubscriber, _super);\n  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n    var _this = _super.call(this, destination) || this;\n    _this.duration = duration;\n    _this.scheduler = scheduler;\n    _this.leading = leading;\n    _this.trailing = trailing;\n    _this._hasTrailingValue = false;\n    _this._trailingValue = null;\n    return _this;\n  }\n  ThrottleTimeSubscriber.prototype._next = function (value) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n        subscriber: this\n      }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  };\n  ThrottleTimeSubscriber.prototype._complete = function () {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  };\n  ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n    var throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  };\n  return ThrottleTimeSubscriber;\n}(Subscriber);\nfunction dispatchNext(arg) {\n  var subscriber = arg.subscriber;\n  subscriber.clearThrottle();\n}","map":{"version":3,"sources":["../../../src/internal/operators/throttleTime.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n"]},"metadata":{},"sourceType":"module"}