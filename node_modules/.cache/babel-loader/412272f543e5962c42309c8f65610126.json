{"ast":null,"code":"import { getGlobalObject, logger } from '@sentry/utils';\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { getActiveTransaction } from '../utils';\nvar global = getGlobalObject();\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', function () {\n      var activeTransaction = getActiveTransaction();\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n        IS_DEBUG_BUILD && logger.log(\"[Tracing] Transaction: \" + statusType + \" -> since tab moved to the background, op: \" + activeTransaction.op);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}","map":{"version":3,"sources":["../../../../src/browser/backgroundtab.ts"],"names":[],"mappings":"AAAA,SAAS,eAAe,EAAE,MAAM,QAAQ,eAAe;AAEvD,SAAS,iBAAiB,EAAE,+BAA+B,QAAQ,cAAc;AACjF,SAAS,cAAc,QAAQ,UAAU;AAGzC,SAAS,oBAAoB,QAAQ,UAAU;AAE/C,IAAM,MAAM,GAAG,eAAe,CAAA,CAAU;AAExC;;;AAGG;AACH,OAAM,SAAU,8BAA8B,CAAA,EAAA;EAC5C,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;IAC7B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAA;MACnD,IAAM,iBAAiB,GAAG,oBAAoB,CAAA,CAAqB;MACnE,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,iBAAiB,EAAE;QAC/C,IAAM,UAAU,GAAmB,WAAW;QAE9C,cAAc,IACZ,MAAM,CAAC,GAAG,CACR,yBAAA,GAA0B,UAAU,GAAA,6CAAA,GAA8C,iBAAiB,CAAC,EAAI,CACzG;QACH;QACA;QACA,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;UAC7B,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC;QACxC;QACD,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;QAC/D,iBAAiB,CAAC,MAAM,CAAC,iBAAiB,EAAE,+BAA+B,CAAC,CAAC,CAAC,CAAC;QAC/E,iBAAiB,CAAC,MAAM,CAAA,CAAE;MAC3B;IACH,CAAC,CAAC;GACH,MAAM;IACL,cAAc,IAAI,MAAM,CAAC,IAAI,CAAC,oFAAoF,CAAC;EACpH;AACH","sourcesContent":["import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS } from '../constants';\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatusType } from '../span';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        IS_DEBUG_BUILD &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.setTag(FINISH_REASON_TAG, IDLE_TRANSACTION_FINISH_REASONS[2]);\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    IS_DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}