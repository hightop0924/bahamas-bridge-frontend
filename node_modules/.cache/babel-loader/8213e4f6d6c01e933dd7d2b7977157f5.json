{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst init_1 = require(\"../init\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n  constructor(options) {\n    var _a;\n    super();\n    this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n    this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n    this._relay = null;\n    this._addresses = [];\n    this.hasMadeFirstChainChangedEmission = false;\n    this._send = this.send.bind(this);\n    this._sendAsync = this.sendAsync.bind(this);\n    this.setProviderInfo = this.setProviderInfo.bind(this);\n    this.updateProviderInfo = this.updateProviderInfo.bind(this);\n    this.getChainId = this.getChainId.bind(this);\n    this.setAppInfo = this.setAppInfo.bind(this);\n    this.enable = this.enable.bind(this);\n    this.close = this.close.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.request = this.request.bind(this);\n    this._setAddresses = this._setAddresses.bind(this);\n    this.scanQRCode = this.scanQRCode.bind(this);\n    this.genericRequest = this.genericRequest.bind(this);\n    this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    this._overrideIsMetaMask = options.overrideIsMetaMask;\n    this._relayProvider = options.relayProvider;\n    this._storage = options.storage;\n    this._relayEventManager = options.relayEventManager;\n    this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    const chainId = this.getChainId();\n    const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    this.emit(\"connect\", {\n      chainIdStr\n    });\n    const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    this._subscriptionManager.events.on(\"notification\", notification => {\n      this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (this._addresses.length > 0) {\n      void this.initializeRelay();\n    }\n    window.addEventListener(\"message\", event => {\n      var _a;\n      if (event.data.type !== \"walletLinkMessage\") return;\n      if (event.data.data.action === \"defaultChainChanged\") {\n        const _chainId = event.data.data.chainId;\n        const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n        this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n  }\n  get selectedAddress() {\n    return this._addresses[0] || undefined;\n  }\n  get networkVersion() {\n    return this.getChainId().toString(10);\n  }\n  get chainId() {\n    return (0, util_1.prepend0x)(this.getChainId().toString(16));\n  }\n  get isWalletLink() {\n    return true;\n  }\n  /**\n   * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n   * true for this method.\n   */\n  get isMetaMask() {\n    return this._overrideIsMetaMask;\n  }\n  get host() {\n    return this.jsonRpcUrl;\n  }\n  get connected() {\n    return true;\n  }\n  isConnected() {\n    return true;\n  }\n  get jsonRpcUrl() {\n    var _a;\n    return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n  }\n  set jsonRpcUrl(value) {\n    this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n  }\n  get isChainOverridden() {\n    return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n  }\n  set isChainOverridden(value) {\n    this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  setProviderInfo(jsonRpcUrl, chainId) {\n    if (this.isChainOverridden) return;\n    this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n  }\n  updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n    const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n    if (hasChainSwitched && fromRelay) return;\n    if (fromRelay) {\n      this.isChainOverridden = true;\n    }\n    this.jsonRpcUrl = jsonRpcUrl;\n    // emit chainChanged event if necessary\n    const originalChainId = this.getChainId();\n    this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n    const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n    if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n      this.emit(\"chainChanged\", this.getChainId());\n      this.hasMadeFirstChainChangedEmission = true;\n    }\n  }\n  async watchAsset(type, address, symbol, decimals, image) {\n    const relay = await this.initializeRelay();\n    const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n    return !!result.result;\n  }\n  async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    var _a, _b;\n    if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n      return false;\n    }\n    const relay = await this.initializeRelay();\n    const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n    if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n      this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n      this.updateProviderInfo(rpcUrls[0], chainId, false);\n    }\n    return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n  }\n  async switchEthereumChain(chainId) {\n    if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n      return;\n    }\n    const relay = await this.initializeRelay();\n    const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n    if (res.errorCode) {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: res.errorCode\n      });\n    }\n    const switchResponse = res.result;\n    if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n      this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n      this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n    }\n  }\n  setAppInfo(appName, appLogoUrl) {\n    void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n  }\n  async enable() {\n    this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n      method: \"provider::enable\",\n      addresses_length: this._addresses.length,\n      sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n    });\n    if (this._addresses.length > 0) {\n      return [...this._addresses];\n    }\n    return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n  }\n  close() {\n    void this.initializeRelay().then(relay => relay.resetAndReload());\n  }\n  send(requestOrMethod, callbackOrParams) {\n    // send<T>(method, params): Promise<T>\n    if (typeof requestOrMethod === \"string\") {\n      const method = requestOrMethod;\n      const params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n      const request = {\n        jsonrpc: \"2.0\",\n        id: 0,\n        method,\n        params\n      };\n      return this._sendRequestAsync(request).then(res => res.result);\n    }\n    // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n    if (typeof callbackOrParams === \"function\") {\n      const request = requestOrMethod;\n      const callback = callbackOrParams;\n      return this._sendAsync(request, callback);\n    }\n    // send(JSONRPCRequest[]): JSONRPCResponse[]\n    if (Array.isArray(requestOrMethod)) {\n      const requests = requestOrMethod;\n      return requests.map(r => this._sendRequest(r));\n    }\n    // send(JSONRPCRequest): JSONRPCResponse\n    const req = requestOrMethod;\n    return this._sendRequest(req);\n  }\n  sendAsync(request, callback) {\n    if (typeof callback !== \"function\") {\n      throw new Error(\"callback is required\");\n    }\n    // send(JSONRPCRequest[], callback): void\n    if (Array.isArray(request)) {\n      const arrayCb = callback;\n      this._sendMultipleRequestsAsync(request).then(responses => arrayCb(null, responses)).catch(err => arrayCb(err, null));\n      return;\n    }\n    // send(JSONRPCRequest, callback): void\n    const cb = callback;\n    this._sendRequestAsync(request).then(response => cb(null, response)).catch(err => cb(err, null));\n  }\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"Expected a single, non-array, object argument.\",\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"'args.method' must be a non-empty string.\",\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"'args.params' must be an object or array if provided.\",\n        data: args\n      });\n    }\n    const newParams = params === undefined ? [] : params;\n    // WalletLink Requests\n    const id = this._relayEventManager.makeRequestId();\n    const result = await this._sendRequestAsync({\n      method,\n      params: newParams,\n      jsonrpc: \"2.0\",\n      id\n    });\n    return result.result;\n  }\n  async scanQRCode(match) {\n    const relay = await this.initializeRelay();\n    const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n    if (typeof res.result !== \"string\") {\n      throw new Error(\"result was not a string\");\n    }\n    return res.result;\n  }\n  async genericRequest(data, action) {\n    const relay = await this.initializeRelay();\n    const res = await relay.genericRequest(data, action).promise;\n    if (typeof res.result !== \"string\") {\n      throw new Error(\"result was not a string\");\n    }\n    return res.result;\n  }\n  supportsSubscriptions() {\n    return false;\n  }\n  subscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n  unsubscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n  disconnect() {\n    return true;\n  }\n  _sendRequest(request) {\n    const response = {\n      jsonrpc: \"2.0\",\n      id: request.id\n    };\n    const {\n      method\n    } = request;\n    response.result = this._handleSynchronousMethods(request);\n    if (response.result === undefined) {\n      throw new Error(`WalletLink does not support calling ${method} synchronously without ` + `a callback. Please provide a callback parameter to call ${method} ` + `asynchronously.`);\n    }\n    return response;\n  }\n  _setAddresses(addresses) {\n    if (!Array.isArray(addresses)) {\n      throw new Error(\"addresses is not an array\");\n    }\n    const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n    if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n      return;\n    }\n    this._addresses = newAddresses;\n    this.emit(\"accountsChanged\", this._addresses);\n    this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n      detail: this._addresses\n    }));\n  }\n  _sendRequestAsync(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        const syncResult = this._handleSynchronousMethods(request);\n        if (syncResult !== undefined) {\n          return resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: syncResult\n          });\n        }\n        const filterPromise = this._handleAsynchronousFilterMethods(request);\n        if (filterPromise !== undefined) {\n          filterPromise.then(res => resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }))).catch(err => reject(err));\n          return;\n        }\n        const subscriptionPromise = this._handleSubscriptionMethods(request);\n        if (subscriptionPromise !== undefined) {\n          subscriptionPromise.then(res => resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: res.result\n          })).catch(err => reject(err));\n          return;\n        }\n      } catch (err) {\n        return reject(err);\n      }\n      this._handleAsynchronousMethods(request).then(res => res && resolve(Object.assign(Object.assign({}, res), {\n        id: request.id\n      }))).catch(err => reject(err));\n    });\n  }\n  _sendMultipleRequestsAsync(requests) {\n    return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n  }\n  _handleSynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_accounts:\n        return this._eth_accounts();\n      case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n        return this._eth_coinbase();\n      case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n        return this._eth_uninstallFilter(params);\n      case JSONRPC_1.JSONRPCMethod.net_version:\n        return this._net_version();\n      case JSONRPC_1.JSONRPCMethod.eth_chainId:\n        return this._eth_chainId();\n      default:\n        return undefined;\n    }\n  }\n  async _handleAsynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n        return this._eth_requestAccounts();\n      case JSONRPC_1.JSONRPCMethod.eth_sign:\n        return this._eth_sign(params);\n      case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n        return this._eth_ecRecover(params);\n      case JSONRPC_1.JSONRPCMethod.personal_sign:\n        return this._personal_sign(params);\n      case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n        return this._personal_ecRecover(params);\n      case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n        return this._eth_signTransaction(params);\n      case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n        return this._eth_sendRawTransaction(params);\n      case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n        return this._eth_sendTransaction(params);\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n        return this._eth_signTypedData_v1(params);\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n        return this._throwUnsupportedMethodError();\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n        return this._eth_signTypedData_v3(params);\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n        return this._eth_signTypedData_v4(params);\n      case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n        return this._walletlink_arbitrary(params);\n      case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n        return this._wallet_addEthereumChain(params);\n      case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n        return this._wallet_switchEthereumChain(params);\n      case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n        return this._wallet_watchAsset(params);\n    }\n    const relay = await this.initializeRelay();\n    return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n  }\n  _handleAsynchronousFilterMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n        return this._eth_newFilter(params);\n      case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n        return this._eth_newBlockFilter();\n      case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n        return this._eth_newPendingTransactionFilter();\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n        return this._eth_getFilterChanges(params);\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n        return this._eth_getFilterLogs(params);\n    }\n    return undefined;\n  }\n  _handleSubscriptionMethods(request) {\n    switch (request.method) {\n      case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n      case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n        return this._subscriptionManager.handleRequest(request);\n    }\n    return undefined;\n  }\n  _isKnownAddress(addressString) {\n    try {\n      const address = (0, util_1.ensureAddressString)(addressString);\n      const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n      return lowercaseAddresses.includes(address);\n    } catch (_a) {}\n    return false;\n  }\n  _ensureKnownAddress(addressString) {\n    if (!this._isKnownAddress(addressString)) {\n      this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n      throw new Error(\"Unknown Ethereum address\");\n    }\n  }\n  _prepareTransactionParams(tx) {\n    const fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n    if (!fromAddress) {\n      throw new Error(\"Ethereum address is unavailable\");\n    }\n    this._ensureKnownAddress(fromAddress);\n    const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n    const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n    const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n    const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n    const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n    const chainId = this.getChainId();\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId\n    };\n  }\n  _requireAuthorization() {\n    if (this._addresses.length === 0) {\n      throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n    }\n  }\n  _throwUnsupportedMethodError() {\n    throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n  }\n  async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    this._ensureKnownAddress(address);\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n      }\n      throw err;\n    }\n  }\n  async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    const relay = await this.initializeRelay();\n    const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res.result\n    };\n  }\n  _eth_accounts() {\n    return [...this._addresses];\n  }\n  _eth_coinbase() {\n    return this.selectedAddress || null;\n  }\n  _net_version() {\n    return this.getChainId().toString(10);\n  }\n  _eth_chainId() {\n    return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n  }\n  getChainId() {\n    const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n    const chainId = parseInt(chainIdStr, 10);\n    return (0, util_1.ensureIntNumber)(chainId);\n  }\n  async _eth_requestAccounts() {\n    this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n      method: \"provider::_eth_requestAccounts\",\n      addresses_length: this._addresses.length,\n      sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n    });\n    if (this._addresses.length > 0) {\n      return Promise.resolve({\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: this._addresses\n      });\n    }\n    let res;\n    try {\n      const relay = await this.initializeRelay();\n      res = await relay.requestEthereumAccounts().promise;\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n      }\n      throw err;\n    }\n    if (!res.result) {\n      throw new Error(\"accounts received is empty\");\n    }\n    this._setAddresses(res.result);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: this._addresses\n    };\n  }\n  _eth_sign(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const message = (0, util_1.ensureBuffer)(params[1]);\n    return this._signEthereumMessage(message, address, false);\n  }\n  _eth_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, false);\n  }\n  _personal_sign(params) {\n    this._requireAuthorization();\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    return this._signEthereumMessage(message, address, true);\n  }\n  _personal_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, true);\n  }\n  async _eth_signTransaction(params) {\n    this._requireAuthorization();\n    const tx = this._prepareTransactionParams(params[0] || {});\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signEthereumTransaction(tx).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n      }\n      throw err;\n    }\n  }\n  async _eth_sendRawTransaction(params) {\n    const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n    const relay = await this.initializeRelay();\n    const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res.result\n    };\n  }\n  async _eth_sendTransaction(params) {\n    this._requireAuthorization();\n    const tx = this._prepareTransactionParams(params[0] || {});\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n      }\n      throw err;\n    }\n  }\n  async _eth_signTypedData_v1(params) {\n    this._requireAuthorization();\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _eth_signTypedData_v3(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _eth_signTypedData_v4(params) {\n    this._requireAuthorization();\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n    this._ensureKnownAddress(address);\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n  async _walletlink_arbitrary(params) {\n    const action = params[0];\n    const data = params[1];\n    if (typeof data !== \"string\") {\n      throw new Error(\"parameter must be a string\");\n    }\n    if (typeof action !== \"object\" || action === null) {\n      throw new Error(\"parameter must be an object\");\n    }\n    const result = await this.genericRequest(action, data);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result\n    };\n  }\n  async _wallet_addEthereumChain(params) {\n    var _a, _b, _c, _d;\n    const request = params[0];\n    if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        error: {\n          code: 2,\n          message: `please pass in at least 1 rpcUrl`\n        }\n      };\n    }\n    if (!request.chainName || request.chainName.trim() === \"\") {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: 0,\n        message: \"chainName is a required field\"\n      });\n    }\n    if (!request.nativeCurrency) {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: 0,\n        message: \"nativeCurrency is a required field\"\n      });\n    }\n    const chainIdNumber = parseInt(request.chainId, 16);\n    const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n    if (success) {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: null\n      };\n    } else {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        error: {\n          code: 2,\n          message: `unable to add ethereum chain`\n        }\n      };\n    }\n  }\n  async _wallet_switchEthereumChain(params) {\n    const request = params[0];\n    await this.switchEthereumChain(parseInt(request.chainId, 16));\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: null\n    };\n  }\n  async _wallet_watchAsset(params) {\n    var _a;\n    const request = Array.isArray(params) ? params[0] : params;\n    if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"type is a required field\"\n      });\n    }\n    if (request.type !== \"ERC20\") {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: `Asset of type '${request.type}' not supported`\n      });\n    }\n    if (!(request === null || request === void 0 ? void 0 : request.options)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"options is a required field\"\n      });\n    }\n    if (!request.options.address) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"option address is a required option\"\n      });\n    }\n    const {\n      address,\n      symbol,\n      image,\n      decimals\n    } = request.options;\n    const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res\n    };\n  }\n  _eth_uninstallFilter(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.uninstallFilter(filterId);\n  }\n  async _eth_newFilter(params) {\n    const param = params[0];\n    const filterId = await this._filterPolyfill.newFilter(param);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n  async _eth_newBlockFilter() {\n    const filterId = await this._filterPolyfill.newBlockFilter();\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n  async _eth_newPendingTransactionFilter() {\n    const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n  _eth_getFilterChanges(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterChanges(filterId);\n  }\n  _eth_getFilterLogs(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterLogs(filterId);\n  }\n  initializeRelay() {\n    if (this._relay) {\n      return Promise.resolve(this._relay);\n    }\n    return this._relayProvider().then(relay => {\n      relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n      relay.setChainCallback((chainId, jsonRpcUrl) => {\n        this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n      });\n      this._relay = relay;\n      return relay;\n    });\n  }\n}\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLinkProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","WalletLinkAnalytics_1","init_1","Session_1","WalletLinkRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","default","constructor","options","_a","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","isCoinbaseWallet","overrideIsCoinbaseWallet","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","action","_chainId","Number","selectedAddress","undefined","networkVersion","isWalletLink","isMetaMask","host","connected","isConnected","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","watchAsset","symbol","decimals","image","relay","result","promise","addEthereumChain","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","_b","res","isApproved","switchEthereumChain","errorCode","ethErrors","provider","custom","code","switchResponse","rpcUrl","appName","appLogoUrl","then","sendEvent","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","newAddresses","JSON","stringify","join","dispatchEvent","CustomEvent","detail","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","walletlink_arbitrary","_walletlink_arbitrary","wallet_addEthereumChain","_wallet_addEthereumChain","wallet_switchEthereumChain","_wallet_switchEthereumChain","wallet_watchAsset","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBN","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","_ethereumAddressFromSignedMessage","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","requestEthereumAccounts","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","_c","_d","error","trim","chainIdNumber","success","invalidParams","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/node_modules/walletlink/dist/provider/WalletLinkProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst init_1 = require(\"../init\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            if (event.data.type !== \"walletLinkMessage\")\n                return;\n            if (event.data.data.action === \"defaultChainChanged\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        void this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // WalletLink Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n        window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", { detail: this._addresses }));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _walletlink_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` }\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` }\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        var _a;\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"type is a required field\"\n            });\n        }\n        if (request.type !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' not supported`\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"options is a required field\"\n            });\n        }\n        if (!request.options.address) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"option address is a required option\"\n            });\n        }\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}