{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nvar SubscribeOnObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscribeOnObservable, _super);\n  function SubscribeOnObservable(source, delayTime, scheduler) {\n    if (delayTime === void 0) {\n      delayTime = 0;\n    }\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n    var _this = _super.call(this) || this;\n    _this.source = source;\n    _this.delayTime = delayTime;\n    _this.scheduler = scheduler;\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      _this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      _this.scheduler = asap;\n    }\n    return _this;\n  }\n  SubscribeOnObservable.create = function (source, delay, scheduler) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n    return new SubscribeOnObservable(source, delay, scheduler);\n  };\n  SubscribeOnObservable.dispatch = function (arg) {\n    var source = arg.source,\n      subscriber = arg.subscriber;\n    return this.add(source.subscribe(subscriber));\n  };\n  SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n    var delay = this.delayTime;\n    var source = this.source;\n    var scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source: source,\n      subscriber: subscriber\n    });\n  };\n  return SubscribeOnObservable;\n}(Observable);\nexport { SubscribeOnObservable };","map":{"version":3,"sources":["../../../src/internal/observable/SubscribeOnObservable.ts"],"names":[],"mappings":";AAGA,OAAO,KAAE,OAAU,MAAE,OAAM;AAC3B,SAAS,UAAM,QAAM,eAAoB;AACzC,SAAS,IAAA,QAAW,mBAAM;AAY1B,SAAA,SAAA,QAAA,mBAAA;IAA8C,qBAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAYzD,OAAA,CAAA,SAAA,CAAA,qBACoB,EAAA,MAAA,CAAqB;EAArB,SAAA,qBAAA,CAAA,MAAA,EAAA,SAAqB,EAAA,SAAA,EAAA;IACrB,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MAFpB,SAGE,GAAA,CAAA;IAHiB;IACC,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MACA,SAAA,GAAA,IAAA;IAElB;QACE,KAAI,GAAC,MAAA,CAAS,IAAI,CAAC,IAAA,CAAA,IAAA,IAAA;IACpB,KAAA,CAAA,MAAA,GAAA,MAAA;IACD,KAAK,CAAA,SAAS,GAAI,SAAO;IACvB,KAAA,CAAA,SAAK,GAAA,SAAiB;IACvB,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,IAAA,SAAA,GAAA,CAAA,EAAA;;IACF;IApBM,IAAA,CAAA,SAAA,IAAA,OAAP,SAAA,CAAA,QAAsC,KAAE,UAAmB,EAAA;MAAnB,KAAA,CAAA,SAAA,GAAA,IAAA;IAAmB;IACzD,OAAO,KAAI;EACb;EAGO,qBAAA,CAAA,MAAA,GAAP,UAAA,MAAgE,EAAA,KAAA,EAAA,SAAA,EAAA;IACtD,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;MACR,KAAO,GAAK,CAAA;IACb;IAeD,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MACQ,SAAQ,GAAI,IAAC;IACnB;IACA,OAAM,IAAA,qBAA2B,CAAA,MAAA,EAAA,KAAA,EAAA,SAAA,CAAA;GAEjC;EACE,qBAAM,CAAA,QAAE,GAAA,UAAU,GAAA,EAAA;IACnB,IAAE,MAAA,GAAA,GAAA,CAAA,MAAA;MAAA,UAAA,GAAA,GAAA,CAAA,UAAA;IACJ,OAAA,IAAA,CAAA,GAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA;EACH,CAAA;EAlC8C,qBAkC7C,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,UAAA,EAAA","sourcesContent":["/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n"]},"metadata":{},"sourceType":"module"}