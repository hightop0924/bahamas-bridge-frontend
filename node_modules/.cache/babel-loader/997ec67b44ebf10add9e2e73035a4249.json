{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext() {\n  var nextSources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nextSources[_i] = arguments[_i];\n  }\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n  return function (source) {\n    return source.lift(new OnErrorResumeNextOperator(nextSources));\n  };\n}\nexport function onErrorResumeNextStatic() {\n  var nextSources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nextSources[_i] = arguments[_i];\n  }\n  var source = undefined;\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n  source = nextSources.shift();\n  return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/function () {\n  function OnErrorResumeNextOperator(nextSources) {\n    this.nextSources = nextSources;\n  }\n  OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  };\n  return OnErrorResumeNextOperator;\n}();\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n  function OnErrorResumeNextSubscriber(destination, nextSources) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.nextSources = nextSources;\n    return _this;\n  }\n  OnErrorResumeNextSubscriber.prototype.notifyError = function () {\n    this.subscribeToNextSource();\n  };\n  OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {\n    this.subscribeToNextSource();\n  };\n  OnErrorResumeNextSubscriber.prototype._error = function (err) {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  };\n  OnErrorResumeNextSubscriber.prototype._complete = function () {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  };\n  OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n    var next = this.nextSources.shift();\n    if (!!next) {\n      var innerSubscriber = new SimpleInnerSubscriber(this);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      var innerSubscription = innerSubscribe(next, innerSubscriber);\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  };\n  return OnErrorResumeNextSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/onErrorResumeNext.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAM,MAAM,OAAA;AAIrB,SAAS,IAAA,QAAS,oBAAuB;AAEzC,SAAS,OAAA,QAAA,iBAAuB;AAmFhC,SAAM,qBAAU,EAAA,qBAAiB,EAAA,cAAA,QAAA,mBAAA;AAAO,OAAA,SAAA,iBAC2C,CAAA,EAAA;MAD3C,WAAA,GAAA,EAAA;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAC2C,EAAA,EAAA,EAAA,EAAA;;EACjF;MACE,WAAW,CAAA,MAA2B,KAAA,CAAA,IAAc,OAAC,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,EAAA;IACtD,WAAA,GAAA,WAAA,CAAA,CAAA,CAAA;EAED;EACD,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,yBAAA,CAAA,WAAA,CAAA,CAAA;EAAA,CAAA;AAaD;AAA8C,OAAA,SAAA,uBAEb,CAAA,EAAA;MAFa,WAAA,GAAA,EAAA;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAEb,EAAA,EAAA,EAAA,EAAA;;EAC/B;EAEA,IAAI,MAAA,GAAA,SAAkB;MACpB,WAAW,CAAA,MAAG,KAAA,CAAA,IAAwC,OAAC,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,EAAA;IACxD,WAAA,GAAA,WAAA,CAAA,CAAA,CAAA;EAED;EAEA,MAAA,GAAO,WAAa,CAAA,KAAK,CAAA,CAAA;EAC1B,OAAA,IAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,IAAA,yBAAA,CAAA,WAAA,CAAA,CAAA;AAED;IACE,yBAAA,GAAA,aAAoB,YAAwC;EAAxC,SAAA,yBAAW,CAA6B,WAAA,EAAA;IAC3D,IAAA,CAAA,WAAA,GAAA,WAAA;EAED;EACE,yBAAc,CAAA,SAAc,CAAA,IAAA,GAAA,UAAA,UAA4B,EAAA,MAAU,EAAE;IACrE,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,2BAAA,CAAA,UAAA,EAAA,IAAA,CAAA,WAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,yBAAA;AAED,CAAA,CAAA,CAAA;IAAgD,2BAAA,GAAA,aAAA,UAA2B,MAAA,EAAA;EACzE,OAAA,CAAA,SAAA,CAAA,2BAAsB,EAAA,MACF,CAAA;EADpB,SAAA,2BAEQ,CAAA,WAAY,EAAA,WACnB,EAAA;IAHqB,IAAA,KAAA,GAAA,MAAW,CAAX,IAAA,CAAA,IAAA,EAAA,WAA0B,CAAA,IAAA,IAAA;IAC5B,KAAA,CAAA,WAAW,GAAX,WAAW;;IAE9B,OAAA,KAAA;EAED;EACE,2BAAK,CAAA,SAAwB,CAAA,WAAA,GAAA,YAAA;IAC9B,IAAA,CAAA,qBAAA,CAAA,CAAA;EAED,CAAA;EACE,2BAAK,CAAA,SAAwB,CAAA,cAAA,GAAA,YAAA;IAC9B,IAAA,CAAA,qBAAA,CAAA,CAAA;EAES,CAAV;EACE,2BAAK,CAAA,SAAwB,CAAA,MAAA,GAAA,UAAA,GAAA,EAAA;IAC7B,IAAI,CAAC,qBAAc,CAAA,CAAA;IACpB,IAAA,CAAA,WAAA,CAAA,CAAA;EAES,CAAV;EACE,2BAAK,CAAA,SAAwB,CAAA,SAAA,GAAA,YAAA;IAC7B,IAAI,CAAC,qBAAc,CAAA,CAAA;IACpB,IAAA,CAAA,WAAA,CAAA,CAAA;EAEO,CAAR;EACE,2BAAkB,CAAA,SAAiB,CAAA,qBAAG,GAAA,YAAA;IACtC,IAAI,IAAE,GAAI,IAAE,CAAA,WAAA,CAAA,KAAA,CAAA,CAAA;QACV,CAAA,CAAA,IAAM,EAAA;MACN,IAAM,eAAc,GAAI,IAAC,qBAA4B,CAAA,IAAA,CAAA;MACrD,IAAA,WAAe,GAAC,IAAA,CAAA,WAAiB;MACjC,WAAM,CAAA,GAAA,CAAA,eAAoB,CAAA;MAI1B,IAAI,iBAAiB,GAAA,cAAK,CAAA,IAAiB,EAAA,eAAA,CAAA;UACzC,iBAAgB,KAAA,eAAmB,EAAA;QACpC,WAAA,CAAA,GAAA,CAAA,iBAAA,CAAA;MACF;KAAM,MACL;MACD,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;IACF;EACH,CAAA;EAzCgD,OAAA,2BAyC/C","sourcesContent":["/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\nexport function onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = undefined;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (!!next) {\n            var innerSubscriber = new SimpleInnerSubscriber(this);\n            var destination = this.destination;\n            destination.add(innerSubscriber);\n            var innerSubscription = innerSubscribe(next, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                destination.add(innerSubscription);\n            }\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n"]},"metadata":{},"sourceType":"module"}