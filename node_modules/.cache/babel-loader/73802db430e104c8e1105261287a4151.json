{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return function (source) {\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\nvar WithLatestFromOperator = /*@__PURE__*/function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n  return WithLatestFromOperator;\n}();\nvar WithLatestFromSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WithLatestFromSubscriber, _super);\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n      _this.add(subscribeToResult(_this, observable, undefined, i));\n    }\n    return _this;\n  }\n  WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {};\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, undefined, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n"]},"metadata":{},"sourceType":"module"}