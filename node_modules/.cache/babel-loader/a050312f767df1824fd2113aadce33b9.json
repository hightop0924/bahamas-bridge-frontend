{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return function (source) {\n    return source.lift(new FindValueOperator(predicate, source, false, thisArg));\n  };\n}\nvar FindValueOperator = /*@__PURE__*/function () {\n  function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n    this.predicate = predicate;\n    this.source = source;\n    this.yieldIndex = yieldIndex;\n    this.thisArg = thisArg;\n  }\n  FindValueOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  };\n  return FindValueOperator;\n}();\nexport { FindValueOperator };\nvar FindValueSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(FindValueSubscriber, _super);\n  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.yieldIndex = yieldIndex;\n    _this.thisArg = thisArg;\n    _this.index = 0;\n    return _this;\n  }\n  FindValueSubscriber.prototype.notifyComplete = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  };\n  FindValueSubscriber.prototype._next = function (value) {\n    var _a = this,\n      predicate = _a.predicate,\n      thisArg = _a.thisArg;\n    var index = this.index++;\n    try {\n      var result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  FindValueSubscriber.prototype._complete = function () {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  };\n  return FindValueSubscriber;\n}(Subscriber);\nexport { FindValueSubscriber };","map":{"version":3,"sources":["../../../src/internal/operators/find.ts"],"names":[],"mappings":";AAEA,OAAO,KAAC,OAAU,MAAC,OAAM;AA8CzB,SAAM,UAAU,QAAQ,eACa;AACnC,OAAA,SAAW,IAAA,CAAA,SAAc,EAAA,OAAU,EAAE;MACnC,OAAM,SAAI,KAAU,UAAA,EAAA;IACrB,MAAA,IAAA,SAAA,CAAA,6BAAA,CAAA;EACD;EACD,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA;EAAA,CAAA;AAED;IACE,iBAAA,GAAA,aAAoB,YAEA;EAFA,SAAA,iBAAA,CAAA,SAAsE,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA;IACtE,IAAA,CAAA,SAAA,GAAA,SAAqB;IACrB,IAAA,CAAA,MAAA,GAAA,MAAA;IACA,IAAA,CAAA,UAAA,GAAA,UAAa;IAChC,IAAA,CAAA,OAAA,GAAA,OAAA;EAED;EACE,iBAAa,CAAC,SAAS,CAAC,IAAI,GAAA,UAAA,QAAoB,EAAA,MAAQ,EAAE;IAC3D,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,mBAAA,CAAA,QAAA,EAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,iBAAA;;AAOD,SAAA,iBAAA;IAA4C,mBAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAGvD,OAAA,CAAA,SAAA,CAAA,mBAAY,EAAA,MACQ,CAAA;EADpB,SAAA,mBAKE,CAAA,WAAM,EAAA,SAAY,EAAA,MACnB,EAAA,UAAA,EAAA,OAAA,EAAA;IALmB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAsE,EAAA,WAAA,CAAA,IAAA,IAAA;IACtE,KAAA,CAAA,SAAA,GAAA,SAAqB;IACrB,KAAA,CAAA,MAAA,GAAA,MAAA;IACA,KAAA,CAAA,UAAA,GAAA,UAAa;IANzB,KAAA,CAAA,OAAK,GAAa,OAAA;;IAQzB,OAAA,KAAA;EAED;EACE,mBAAiB,CAAA,SAAQ,CAAA,cAAY,GAAA,UAAA,KAAA,EAAA;IAErC,IAAA,WAAY,GAAK,IAAK,CAAC,WAAC;IACxB,WAAW,CAAC,IAAA,CAAA,KAAU,CAAC;IACvB,WAAK,CAAA,QAAc,CAAA,CAAA;IACpB,IAAA,CAAA,WAAA,CAAA,CAAA;EAES,CAAV;EACQ,mBAAC,CAAA,SAAA,CAAA,KAAA,GAAA,UAAW,KAAA,EAAA;IAClB,IAAM,EAAA,GAAK,IAAG;MAAA,SAAY,GAAC,EAAA,CAAA,SAAA;MAAA,OAAA,GAAA,EAAA,CAAA,OAAA;IAC3B,IAAI,KAAA,GAAA,IAAA,CAAA,KAAA,EAAA;QACF;MACA,IAAI,MAAM,GAAE,SAAA,CAAA,IAAA,CAAA,OAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,CAAA,MAAA,CAAA;UACV,MAAK,EAAA;QACN,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,UAAA,GAAA,KAAA,GAAA,KAAA,CAAA;MACF;IAAC,CAAA,CACA,OAAA,GAAK,EAAA;MACN,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA;IACF;EAES,CAAV;EACE,mBAAK,CAAA,SAAoB,CAAA,SAAU,GAAG,YAAK;IAC5C,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,UAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;EACH,CAAA;EAnC4C,OAAA,mBAmC3C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexport { FindValueOperator };\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\nexport { FindValueSubscriber };\n//# sourceMappingURL=find.js.map\n"]},"metadata":{},"sourceType":"module"}