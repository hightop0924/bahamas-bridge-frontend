{"ast":null,"code":"import BN from \"bn.js\";\nimport * as encoding from \"@walletconnect/encoding\";\nexport function convertArrayBufferToBuffer(arrBuf) {\n  return encoding.arrayToBuffer(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToUtf8(arrBuf) {\n  return encoding.arrayToUtf8(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToHex(arrBuf, noPrefix) {\n  return encoding.arrayToHex(new Uint8Array(arrBuf), !noPrefix);\n}\nexport function convertArrayBufferToNumber(arrBuf) {\n  return encoding.arrayToNumber(new Uint8Array(arrBuf));\n}\nexport function concatArrayBuffers(...args) {\n  return encoding.hexToArray(args.map(b => encoding.arrayToHex(new Uint8Array(b))).join(\"\")).buffer;\n}\nexport function convertBufferToArrayBuffer(buf) {\n  return encoding.bufferToArray(buf).buffer;\n}\nexport function convertBufferToUtf8(buf) {\n  return encoding.bufferToUtf8(buf);\n}\nexport function convertBufferToHex(buf, noPrefix) {\n  return encoding.bufferToHex(buf, !noPrefix);\n}\nexport function convertBufferToNumber(buf) {\n  return encoding.bufferToNumber(buf);\n}\nexport function concatBuffers(...args) {\n  return encoding.concatBuffers(...args);\n}\nexport function convertUtf8ToArrayBuffer(utf8) {\n  return encoding.utf8ToArray(utf8).buffer;\n}\nexport function convertUtf8ToBuffer(utf8) {\n  return encoding.utf8ToBuffer(utf8);\n}\nexport function convertUtf8ToHex(utf8, noPrefix) {\n  return encoding.utf8ToHex(utf8, !noPrefix);\n}\nexport function convertUtf8ToNumber(utf8) {\n  return new BN(utf8, 10).toNumber();\n}\nexport function convertHexToBuffer(hex) {\n  return encoding.hexToBuffer(hex);\n}\nexport function convertHexToArrayBuffer(hex) {\n  return encoding.hexToArray(hex).buffer;\n}\nexport function convertHexToUtf8(hex) {\n  return encoding.hexToUtf8(hex);\n}\nexport function convertHexToNumber(hex) {\n  return new BN(encoding.removeHexPrefix(hex), \"hex\").toNumber();\n}\nexport function convertNumberToBuffer(num) {\n  return encoding.numberToBuffer(num);\n}\nexport function convertNumberToArrayBuffer(num) {\n  return encoding.numberToArray(num).buffer;\n}\nexport function convertNumberToUtf8(num) {\n  return new BN(num).toString();\n}\nexport function convertNumberToHex(num, noPrefix) {\n  const hex = encoding.removeHexPrefix(encoding.sanitizeHex(new BN(num).toString(16)));\n  return noPrefix ? hex : encoding.addHexPrefix(hex);\n}","map":{"version":3,"sources":["../../src/encoding.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import BN from \"bn.js\";\nimport * as encoding from \"@walletconnect/encoding\";\nexport function convertArrayBufferToBuffer(arrBuf) {\n    return encoding.arrayToBuffer(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToUtf8(arrBuf) {\n    return encoding.arrayToUtf8(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToHex(arrBuf, noPrefix) {\n    return encoding.arrayToHex(new Uint8Array(arrBuf), !noPrefix);\n}\nexport function convertArrayBufferToNumber(arrBuf) {\n    return encoding.arrayToNumber(new Uint8Array(arrBuf));\n}\nexport function concatArrayBuffers(...args) {\n    return encoding.hexToArray(args.map(b => encoding.arrayToHex(new Uint8Array(b))).join(\"\")).buffer;\n}\nexport function convertBufferToArrayBuffer(buf) {\n    return encoding.bufferToArray(buf).buffer;\n}\nexport function convertBufferToUtf8(buf) {\n    return encoding.bufferToUtf8(buf);\n}\nexport function convertBufferToHex(buf, noPrefix) {\n    return encoding.bufferToHex(buf, !noPrefix);\n}\nexport function convertBufferToNumber(buf) {\n    return encoding.bufferToNumber(buf);\n}\nexport function concatBuffers(...args) {\n    return encoding.concatBuffers(...args);\n}\nexport function convertUtf8ToArrayBuffer(utf8) {\n    return encoding.utf8ToArray(utf8).buffer;\n}\nexport function convertUtf8ToBuffer(utf8) {\n    return encoding.utf8ToBuffer(utf8);\n}\nexport function convertUtf8ToHex(utf8, noPrefix) {\n    return encoding.utf8ToHex(utf8, !noPrefix);\n}\nexport function convertUtf8ToNumber(utf8) {\n    return new BN(utf8, 10).toNumber();\n}\nexport function convertHexToBuffer(hex) {\n    return encoding.hexToBuffer(hex);\n}\nexport function convertHexToArrayBuffer(hex) {\n    return encoding.hexToArray(hex).buffer;\n}\nexport function convertHexToUtf8(hex) {\n    return encoding.hexToUtf8(hex);\n}\nexport function convertHexToNumber(hex) {\n    return new BN(encoding.removeHexPrefix(hex), \"hex\").toNumber();\n}\nexport function convertNumberToBuffer(num) {\n    return encoding.numberToBuffer(num);\n}\nexport function convertNumberToArrayBuffer(num) {\n    return encoding.numberToArray(num).buffer;\n}\nexport function convertNumberToUtf8(num) {\n    return new BN(num).toString();\n}\nexport function convertNumberToHex(num, noPrefix) {\n    const hex = encoding.removeHexPrefix(encoding.sanitizeHex(new BN(num).toString(16)));\n    return noPrefix ? hex : encoding.addHexPrefix(hex);\n}\n//# sourceMappingURL=encoding.js.map"]},"metadata":{},"sourceType":"module"}