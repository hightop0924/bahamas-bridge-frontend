{"ast":null,"code":"import { Severity } from '@sentry/types';\nimport { SeverityLevels } from './enums';\nfunction isSupportedSeverity(level) {\n  return SeverityLevels.indexOf(level) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level) {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}","map":{"version":3,"sources":["../../src/severity.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAQ,eAAe;AAExC,SAAwB,cAAc,QAAQ,SAAS;AAEvD,SAAS,mBAAmB,CAAC,KAAa,EAAA;EACxC,OAAO,cAAc,CAAC,OAAO,CAAC,KAAsB,CAAC,KAAK,CAAC,CAAC;AAC9D;AACA;;;;;AAKG;AACH,OAAM,SAAU,kBAAkB,CAAC,KAA6B,EAAA;EAC9D,IAAI,KAAK,KAAK,MAAM,EAAE,OAAO,QAAQ,CAAC,OAAO;EAC7C,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;IAC9B,OAAO,KAAK;EACb;EACD,OAAO,QAAQ,CAAC,GAAG;AACrB","sourcesContent":["import { Severity } from '@sentry/types';\n\nimport { SeverityLevel, SeverityLevels } from './enums';\n\nfunction isSupportedSeverity(level: string): level is Severity {\n  return SeverityLevels.indexOf(level as SeverityLevel) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: SeverityLevel | string): Severity {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}