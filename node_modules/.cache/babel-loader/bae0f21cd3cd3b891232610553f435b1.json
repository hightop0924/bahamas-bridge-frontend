{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\nvar MapOperator = /*@__PURE__*/function () {\n  function MapOperator(project, thisArg) {\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n  MapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  };\n  return MapOperator;\n}();\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MapSubscriber, _super);\n  function MapSubscriber(destination, project, thisArg) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.count = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n  MapSubscriber.prototype._next = function (value) {\n    var result;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return MapSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/map.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAU,MAAE,OAAM;AA2C3B,SAAM,UAAa,QAA8C,eAAe;AAC9E,OAAA,SAAO,GAAA,CAAS,OAAA,EAAA,OAAa,EAAA;EAC3B,OAAA,SAAW,YAAY,CAAA,MAAA,EAAU;QAC/B,OAAM,OAAI,KAAS,UAAC,EAAA;MACrB,MAAA,IAAA,SAAA,CAAA,4DAAA,CAAA;IACD;IACA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,WAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;EACH,CAAA;AAED;IACE,WAAA,GAAA,aAA2D,YAAsB;EAA7D,SAAA,WAAA,CAAA,OAAuC,EAAA,OAAA,EAAA;IAAU,IAAA,CAAA,OAAO,GAAP,OAAO;IAC3E,IAAA,CAAA,OAAA,GAAA,OAAA;EAED;EACE,WAAO,CAAA,SAAO,CAAA,IAAA,GAAU,UAAI,UAAc,EAAA,MAAU,EAAE;IACvD,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,aAAA,CAAA,UAAA,EAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,WAAA;;AAOD,SAAA,WAAA;IAAkC,aAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAI7C,OAAA,CAAA,SAAA,CAAA,aAAY,EAAA,MACQ,CAAA;EADpB,SAAA,aAGE,CAAA,WAAM,EAAA,OAAA,EAAW,OAAC,EAAA;IAFA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAO,CAAgC,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;IAJ3D,KAAA,CAAA,OAAK,GAAa,OAAA;IAOhB,KAAI,CAAC,KAAA,GAAO,CAAA;;IACb,OAAA,KAAA;EAID;EACE,aAAI,CAAS,SAAC,CAAA,KAAA,GAAA,UAAA,KAAA,EAAA;IACd,IAAI,MAAA;QACF;MACD,MAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,CAAA,KAAA,EAAA,CAAA;IAAC,CAAA,CACA,OAAA,GAAK,EAAA;MACL,IAAA,CAAA,WAAO,CAAA,KAAA,CAAA,GAAA,CAAA;MACR;IACD;IACD,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,CAAA;EACH,CAAA;EAvBkC,OAAA,aAuBjC","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n"]},"metadata":{},"sourceType":"module"}