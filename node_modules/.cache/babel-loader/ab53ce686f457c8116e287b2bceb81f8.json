{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return function (source) {\n    return source.lift(new TakeUntilOperator(notifier));\n  };\n}\nvar TakeUntilOperator = /*@__PURE__*/function () {\n  function TakeUntilOperator(notifier) {\n    this.notifier = notifier;\n  }\n  TakeUntilOperator.prototype.call = function (subscriber, source) {\n    var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  };\n  return TakeUntilOperator;\n}();\nvar TakeUntilSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeUntilSubscriber, _super);\n  function TakeUntilSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n    _this.seenValue = false;\n    return _this;\n  }\n  TakeUntilSubscriber.prototype.notifyNext = function () {\n    this.seenValue = true;\n    this.complete();\n  };\n  TakeUntilSubscriber.prototype.notifyComplete = function () {};\n  return TakeUntilSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/takeUntil.ts"],"names":[],"mappings":";AAKA,OAAO,KAAE,OAAA,MAAgB,OAAA;AA0CzB,SAAM,cAAU,EAAS,qBAA6B,EAAA,qBAAA,QAAA,mBAAA;AACpD,OAAA,SAAO,SAAC,CAAA,QAA0B,EAAA;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,QAAA,CAAA,CAAA;EAAA,CAAA;AAED;IACE,iBAAA,GAAA,aAA6C,YAAA;EAAzB,SAAA,iBAAA,CAAA,QAAyB,EAAA;IAC5C,IAAA,CAAA,QAAA,GAAA,QAAA;EAED;EACE,iBAAM,CAAA,SAAmB,CAAA,IAAG,GAAI,UAAA,UAAoB,EAAA,MAAA,EAAW;IAC/D,IAAM,mBAAA,GAAoB,IAAG,mBAAoB,CAAA,UAAU,CAAI;IAC/D,IAAI,oBAAoB,GAAA,cAAK,CAAA,IAAA,CAAA,QAAoB,EAAA,IAAW,qBAAA,CAAA,mBAAA,CAAA,CAAA;QAC1D,oBAAoB,IAAI,CAAA,mBAAoB,CAAC,SAAC,EAAA;MAC9C,mBAAc,CAAA,GAAS,CAAC,oBAAoB,CAAC;MAC9C,OAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,CAAA;IACD;IACD,OAAA,mBAAA;EACH,CAAA;EAAC,OAAA,iBAAA;AAOD,CAAA,CAAA,CAAA;IAAwC,mBAAA,GAAA,aAAA,UAA2B,MAAA,EAAA;EAGjE,OAAA,CAAA,SAAA,CAAA,mBAAY,EAAA,MAA4B,CAAA;EAAxC,SAAA,mBACE,CAAA,WAAM,EAAA;IAHR,IAAA,KAAA,GAAA,MAAY,CAAA,IAAK,CAAC,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;;IAIjB,OAAA,KAAA;EAED;EACE,mBAAc,CAAA,SAAQ,CAAA,UAAA,GAAA,YAAA;IACtB,IAAI,CAAC,SAAQ,GAAG,IAAA;IACjB,IAAA,CAAA,QAAA,CAAA,CAAA;EAED,CAAA;EAEA,mBAAC,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA,CACH,CAAA;EAfwC,OAAA,mBAevC","sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function () {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n"]},"metadata":{},"sourceType":"module"}