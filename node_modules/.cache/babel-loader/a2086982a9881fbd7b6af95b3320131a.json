{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n  return new Observable(function (subscriber) {\n    var handler = function () {\n      var e = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        e[_i] = arguments[_i];\n      }\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n    var retValue;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromEventPattern.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,UAAS,QAAM,eAAkB;AAC1C,SAAS,OAAA,QAAY,iBAAM;AAE3B,SAAS,UAAK,QAAM,oBAAmB;AAwIvC,SAAM,GAAA,QAAU,kBAAoB;AAIlC,OAAA,SAAI,gBAAgB,CAAA,UAAA,EAAA,aAAA,EAAA,cAAA,EAAA;MAElB,cAAO,EAAA;IAGR,OAAA,gBAAA,CAAA,UAAA,EAAA,aAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;MAAA,OAAA,OAAA,CAAA,IAAA,CAAA,GAAA,cAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,GAAA,cAAA,CAAA,IAAA,CAAA;IAAA,CAAA,CAAA,CAAA;EAED;EACE,OAAA,IAAM,UAAU,CAAA,UAAA,UAAA,EAAA;QAAC,OAAA,GAAA,SAAA,CAAA,EAAS;WAAT,GAAA,EAAA;MAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAS,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;;MAAK;MAA2C,OAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;IAE1E,CAAA;IACA,IAAI,QAAA;QACF;MACD,QAAA,GAAA,UAAA,CAAA,OAAA,CAAA;IAAC,CAAA,CACA,OAAA,GAAA,EAAA;MACA,UAAO,CAAA,KAAS,CAAC,GAAA,CAAA;MAClB,OAAA,SAAA;IAED;QACE,CAAA,UAAO,CAAA,aAAU,CAAA,EAAA;MAClB,OAAA,SAAA;IAED;IACC,OAAA,YAAA;MAAA,OAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;IAAA,CAAA;EACJ,CAAA,CAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n"]},"metadata":{},"sourceType":"module"}