{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n  if (subscriptionDelay) {\n    return function (source) {\n      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));\n    };\n  }\n  return function (source) {\n    return source.lift(new DelayWhenOperator(delayDurationSelector));\n  };\n}\nvar DelayWhenOperator = /*@__PURE__*/function () {\n  function DelayWhenOperator(delayDurationSelector) {\n    this.delayDurationSelector = delayDurationSelector;\n  }\n  DelayWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  };\n  return DelayWhenOperator;\n}();\nvar DelayWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelayWhenSubscriber, _super);\n  function DelayWhenSubscriber(destination, delayDurationSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.delayDurationSelector = delayDurationSelector;\n    _this.completed = false;\n    _this.delayNotifierSubscriptions = [];\n    _this.index = 0;\n    return _this;\n  }\n  DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  };\n  DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n    this._error(error);\n  };\n  DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n    var value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  };\n  DelayWhenSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n    try {\n      var delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  DelayWhenSubscriber.prototype._complete = function () {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  };\n  DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n    subscription.unsubscribe();\n    var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n    return subscription.outerValue;\n  };\n  DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n    var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n    if (notifierSubscription && !notifierSubscription.closed) {\n      var destination = this.destination;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  };\n  DelayWhenSubscriber.prototype.tryComplete = function () {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  };\n  return DelayWhenSubscriber;\n}(OuterSubscriber);\nvar SubscriptionDelayObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelayObservable, _super);\n  function SubscriptionDelayObservable(source, subscriptionDelay) {\n    var _this = _super.call(this) || this;\n    _this.source = source;\n    _this.subscriptionDelay = subscriptionDelay;\n    return _this;\n  }\n  SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  };\n  return SubscriptionDelayObservable;\n}(Observable);\nvar SubscriptionDelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n  function SubscriptionDelaySubscriber(parent, source) {\n    var _this = _super.call(this) || this;\n    _this.parent = parent;\n    _this.source = source;\n    _this.sourceSubscribed = false;\n    return _this;\n  }\n  SubscriptionDelaySubscriber.prototype._next = function (unused) {\n    this.subscribeToSource();\n  };\n  SubscriptionDelaySubscriber.prototype._error = function (err) {\n    this.unsubscribe();\n    this.parent.error(err);\n  };\n  SubscriptionDelaySubscriber.prototype._complete = function () {\n    this.unsubscribe();\n    this.subscribeToSource();\n  };\n  SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  };\n  return SubscriptionDelaySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/delayWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.index = 0;\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        try {\n            var delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            var destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.unsubscribe();\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n"]},"metadata":{},"sourceType":"module"}