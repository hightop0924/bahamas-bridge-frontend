{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0];\n    } else {\n      return observables[0];\n    }\n  }\n  return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/function () {\n  function RaceOperator() {}\n  RaceOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  };\n  return RaceOperator;\n}();\nexport { RaceOperator };\nvar RaceSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RaceSubscriber, _super);\n  function RaceSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n    _this.hasFirst = false;\n    _this.observables = [];\n    _this.subscriptions = [];\n    return _this;\n  }\n  RaceSubscriber.prototype._next = function (observable) {\n    this.observables.push(observable);\n  };\n  RaceSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (var i = 0; i < len && !this.hasFirst; i++) {\n        var observable = observables[i];\n        var subscription = subscribeToResult(this, observable, undefined, i);\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  };\n  RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n      for (var i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          var subscription = this.subscriptions[i];\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n      this.subscriptions = null;\n    }\n    this.destination.next(innerValue);\n  };\n  return RaceSubscriber;\n}(OuterSubscriber);\nexport { RaceSubscriber };","map":{"version":3,"sources":["../../../src/internal/observable/race.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAS,MAAM,OAAA;AACxB,SAAS,OAAA,QAAW,iBAAoB;AAKxC,SAAS,SAAA,QAAiB,aAAM;AAEhC,SAAS,eAAA,QAAmB,oBAAM;AAoDlC,SAAM,iBAAc,QAAA,2BAAA;AAAI,OAAA,SAAA,IAAA,CAAA,EAAA;MAAA,WAAA,GAAA,EAAA;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAsC,EAAA,EAAA,EAAA,EAAA;;EAG5D;MACE,WAAW,CAAC,MAAA,KAAW,CAAC,EAAE;QACxB,OAAA,CAAA,WAAc,CAAA,CAAA,CAAA,CAAA,EAAW;MAC1B,WAAA,GAAA,WAAA,CAAA,CAAA,CAAA;KAAM,MACL;MACD,OAAA,WAAA,CAAA,CAAA,CAAA;IACF;EAED;EACD,OAAA,SAAA,CAAA,WAAA,EAAA,SAAA,CAAA,CAAA,IAAA,CAAA,IAAA,YAAA,CAAA,CAAA,CAAA;AAED;IAAA,YAAA,GAAA,aAAA,YAAA;EAIA,SAAC,YAAA,CAAA,EAAA,CAHC;EACE,YAAO,CAAA,SAAO,CAAA,IAAS,GAAC,UAAI,UAAe,EAAA,MAAW,EAAE;IACzD,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,cAAA,CAAA,UAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,YAAA;;AAOD,SAAA,YAAA;IAAuC,cAAA,GAAA,aAAA,UAAqB,MAAA,EAAA;EAK1D,OAAA,CAAA,SAAA,CAAA,cAAY,EAAA,MAA0B,CAAA;EAAtC,SAAA,cACE,CAAA,WAAM,EAAA;IALA,IAAA,KAAA,GAAA,MAAoB,CAAA,IAAM,CAAA,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;IAC1B,KAAA,CAAA,QAAA,GAAW,KAAwB;IACnC,KAAA,CAAA,WAAA,GAAa,EAAmB;;IAIvC,OAAA,KAAA;EAED;EACE,cAAK,CAAA,SAAY,CAAI,KAAC,GAAA,UAAY,UAAA,EAAA;IACnC,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,UAAA,CAAA;EAES,CAAV;EACE,cAAM,CAAA,SAAc,CAAA,SAAK,GAAA,YAAY;IACrC,IAAM,WAAM,GAAA,IAAY,CAAA,WAAO;IAE/B,IAAI,GAAG,GAAA,WAAQ,CAAA,MAAA;QACb,GAAA,KAAK,CAAA,EAAA;MACN,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;KAAM,MACL;MACE,KAAA,IAAM,CAAA,GAAA,CAAA,EAAA,CAAA,GAAU,GAAG,IAAA,CAAA,IAAW,CAAC,QAAG,EAAA,CAAA,EAAA,EAAA;QAClC,IAAM,UAAA,GAAY,WAAG,CAAA,CAAA,CAAA;QAErB,IAAI,YAAK,GAAA,iBAAe,CAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,CAAA,CAAA;YACtB,IAAI,CAAC,aAAa,EAAC;UACpB,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,YAAA,CAAA;QACD;QACD,IAAA,CAAA,GAAA,CAAA,YAAA,CAAA;MACD;MACD,IAAA,CAAA,WAAA,GAAA,IAAA;IACF;EAED,CAAA;EAEE,cAAU,CAAA,SAAU,CAAA,UAAA,GAAA,UAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA;QAClB,CAAA,IAAK,CAAA,QAAQ,EAAG;MAEhB,IAAA,CAAK,QAAQ,GAAG,IAAI;MAClB,KAAA,IAAK,CAAA,GAAA,CAAK,EAAA,CAAA,GAAA,IAAU,CAAA,aAAE,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;YACpB,CAAA,KAAI,UAAY,EAAA;UAEhB,IAAA,YAAa,GAAA,IAAA,CAAW,aAAG,CAAA,CAAA,CAAA;UAC3B,YAAY,CAAA,WAAY,CAAC,CAAC;UAC3B,IAAA,CAAA,MAAA,CAAA,YAAA,CAAA;QACF;MAED;MACD,IAAA,CAAA,aAAA,GAAA,IAAA;IAED;IACD,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,UAAA,CAAA;EACH,CAAA;EApDuC,OAAA,cAoDtC","sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexport { RaceOperator };\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\nexport { RaceSubscriber };\n//# sourceMappingURL=race.js.map\n"]},"metadata":{},"sourceType":"module"}