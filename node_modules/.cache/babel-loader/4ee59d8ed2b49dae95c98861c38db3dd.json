{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\nvar DistinctOperator = /*@__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n  DistinctOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  };\n  return DistinctOperator;\n}();\nvar DistinctSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctSubscriber, _super);\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this = _super.call(this, destination) || this;\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n    if (flushes) {\n      _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_this)));\n    }\n    return _this;\n  }\n  DistinctSubscriber.prototype.notifyNext = function () {\n    this.values.clear();\n  };\n  DistinctSubscriber.prototype.notifyError = function (error) {\n    this._error(error);\n  };\n  DistinctSubscriber.prototype._next = function (value) {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  };\n  DistinctSubscriber.prototype._useKeySelector = function (value) {\n    var key;\n    var destination = this.destination;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  };\n  DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n    var values = this.values;\n    if (!values.has(key)) {\n      values.add(key);\n      this.destination.next(value);\n    }\n  };\n  return DistinctSubscriber;\n}(SimpleOuterSubscriber);\nexport { DistinctSubscriber };","map":{"version":3,"sources":["../../../src/internal/operators/distinct.ts"],"names":[],"mappings":";AAIA,OAAO,KAAE,OAAA,MAAA,OAAuB;AA4DhC,SAAM,qBAAyB,EAAA,cACyB,EAAA,qBAAA,QAAA,mBAAA;AACtD,OAAA,SAAO,QAAC,CAAA,WAA0B,EAAA,OAAO,EAAP;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,gBAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA;EAAA,CAAA;AAED;IACE,gBAAA,GAAA,aAAoB,YAAgE;EAAhE,SAAA,gBAAA,CAAA,WAA6B,EAAA,OAAA,EAAA;IAAU,IAAA,CAAA,WAAA,GAAA,WAAyB;IACnF,IAAA,CAAA,OAAA,GAAA,OAAA;EAED;EACE,gBAAO,CAAM,SAAC,CAAS,IAAC,GAAI,UAAA,UAAmB,EAAA,MAAU,EAAE;IAC5D,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,kBAAA,CAAA,UAAA,EAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,gBAAA;AAOD,CAAA,CAAA,CAAA;IAA8C,kBAAA,GAAA,aAAA,UAA2B,MAAA,EAAA;EAGvE,OAAA,CAAA,SAAA,CAAA,kBAAY,EAAA,MAAoC,CAAA;EAAhD,SAAA,kBACE,CAAA,WAAM,EAAA,WAAY,EAAA,OAKnB,EAAA;IAN+C,IAAA,KAAA,GAAA,MAAW,CAAX,IAAA,CAAA,IAAA,EAAA,WAA6B,CAAA,IAAA,IAAA;IAFrE,KAAA,CAAA,WAAS,GAAI,WAAS;IAK5B,KAAI,CAAA,MAAO,GAAE,IAAA,GAAA,CAAA,CAAA;QACX,OAAK,EAAG;MACT,KAAA,CAAA,GAAA,CAAA,cAAA,CAAA,OAAA,EAAA,IAAA,qBAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;IACF,OAAA,KAAA;EAED;EACE,kBAAY,CAAA,SAAQ,CAAA,UAAA,GAAA,YAAA;IACrB,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;EAED,CAAA;EACE,kBAAY,CAAA,SAAO,CAAA,WAAA,GAAA,UAAA,KAAA,EAAA;IACpB,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA;EAES,CAAV;EACE,kBAAS,CAAA,SAAa,CAAA,KAAA,GAAA,UAAA,KAAA,EAAA;QACpB,IAAI,CAAC,WAAA,EAAA;MACN,IAAA,CAAA,eAAA,CAAA,KAAA,CAAA;KAAM,MACL;MACD,IAAA,CAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA;IACF;EAEO,CAAR;EACE,kBAAW,CAAA,SAAA,CAAA,eAAA,GAAA,UAAA,KAAA,EAAA;IACH,IAAA,GAAA;IACR,IAAI,WAAA,GAAA,IAAA,CAAA,WAAA;QACF;MACD,GAAA,GAAA,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA;IAAC,CAAA,CACA,OAAA,GAAA,EAAA;MACA,WAAO,CAAA,KAAA,CAAA,GAAA,CAAA;MACR;IACD;IACD,IAAA,CAAA,aAAA,CAAA,GAAA,EAAA,KAAA,CAAA;EAEO,CAAR;EACU,kBAAA,CAAA,SAAM,CAAU,aAAA,GAAA,UAAA,GAAA,EAAA,KAAA,EAAA;IACxB,IAAI,MAAC,GAAO,IAAO,CAAA,MAAM;QACvB,CAAA,MAAO,CAAA,GAAO,CAAA,GAAI,CAAC,EAAA;MACnB,MAAK,CAAA,GAAA,CAAA,GAAA,CAAA;MACN,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,KAAA,CAAA;IACF;EAEH,CAAA;EA/C8C,OAAA,kBA+C7C","sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar DistinctOperator = /*@__PURE__*/ (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_this)));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function () {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(SimpleOuterSubscriber));\nexport { DistinctSubscriber };\n//# sourceMappingURL=distinct.js.map\n"]},"metadata":{},"sourceType":"module"}