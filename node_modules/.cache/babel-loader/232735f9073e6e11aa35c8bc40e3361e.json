{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n  return function windowCountOperatorFunction(source) {\n    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n  };\n}\nvar WindowCountOperator = /*@__PURE__*/function () {\n  function WindowCountOperator(windowSize, startWindowEvery) {\n    this.windowSize = windowSize;\n    this.startWindowEvery = startWindowEvery;\n  }\n  WindowCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  };\n  return WindowCountOperator;\n}();\nvar WindowCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowCountSubscriber, _super);\n  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.windowSize = windowSize;\n    _this.startWindowEvery = startWindowEvery;\n    _this.windows = [new Subject()];\n    _this.count = 0;\n    destination.next(_this.windows[0]);\n    return _this;\n  }\n  WindowCountSubscriber.prototype._next = function (value) {\n    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;\n    var destination = this.destination;\n    var windowSize = this.windowSize;\n    var windows = this.windows;\n    var len = windows.length;\n    for (var i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    var c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      var window_1 = new Subject();\n      windows.push(window_1);\n      destination.next(window_1);\n    }\n  };\n  WindowCountSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  };\n  WindowCountSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  };\n  WindowCountSubscriber.prototype._unsubscribe = function () {\n    this.count = 0;\n    this.windows = null;\n  };\n  return WindowCountSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/windowCount.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n"]},"metadata":{},"sourceType":"module"}