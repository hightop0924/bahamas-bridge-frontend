{"ast":null,"code":"import { browserHmacSha256Sign, browserHmacSha512Sign } from \"../lib/browser\";\nimport { isConstantTime } from \"../helpers\";\nexport async function hmacSha256Sign(key, msg) {\n  const result = await browserHmacSha256Sign(key, msg);\n  return result;\n}\nexport async function hmacSha256Verify(key, msg, sig) {\n  const expectedSig = await browserHmacSha256Sign(key, msg);\n  const result = isConstantTime(expectedSig, sig);\n  return result;\n}\nexport async function hmacSha512Sign(key, msg) {\n  const result = await browserHmacSha512Sign(key, msg);\n  return result;\n}\nexport async function hmacSha512Verify(key, msg, sig) {\n  const expectedSig = await browserHmacSha512Sign(key, msg);\n  const result = isConstantTime(expectedSig, sig);\n  return result;\n}","map":{"version":3,"sources":["../../../src/browser/hmac.ts"],"names":[],"mappings":"AAAA,SAAS,qBAAqB,EAAE,qBAAqB,QAAQ,gBAAgB;AAE7E,SAAS,cAAc,QAAQ,YAAY;AAE3C,OAAO,eAAe,cAAc,CAClC,GAAe,EACf,GAAe,EAAA;EAEf,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC;EACpD,OAAO,MAAM;AACf;AAEA,OAAO,eAAe,gBAAgB,CACpC,GAAe,EACf,GAAe,EACf,GAAe,EAAA;EAEf,MAAM,WAAW,GAAG,MAAM,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC;EACzD,MAAM,MAAM,GAAG,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC;EAC/C,OAAO,MAAM;AACf;AAEA,OAAO,eAAe,cAAc,CAClC,GAAe,EACf,GAAe,EAAA;EAEf,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC;EACpD,OAAO,MAAM;AACf;AAEA,OAAO,eAAe,gBAAgB,CACpC,GAAe,EACf,GAAe,EACf,GAAe,EAAA;EAEf,MAAM,WAAW,GAAG,MAAM,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC;EACzD,MAAM,MAAM,GAAG,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC;EAC/C,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["import { browserHmacSha256Sign, browserHmacSha512Sign } from \"../lib/browser\";\nimport { isConstantTime } from \"../helpers\";\nexport async function hmacSha256Sign(key, msg) {\n    const result = await browserHmacSha256Sign(key, msg);\n    return result;\n}\nexport async function hmacSha256Verify(key, msg, sig) {\n    const expectedSig = await browserHmacSha256Sign(key, msg);\n    const result = isConstantTime(expectedSig, sig);\n    return result;\n}\nexport async function hmacSha512Sign(key, msg) {\n    const result = await browserHmacSha512Sign(key, msg);\n    return result;\n}\nexport async function hmacSha512Verify(key, msg, sig) {\n    const expectedSig = await browserHmacSha512Sign(key, msg);\n    const result = isConstantTime(expectedSig, sig);\n    return result;\n}\n//# sourceMappingURL=hmac.js.map"]},"metadata":{},"sourceType":"module"}