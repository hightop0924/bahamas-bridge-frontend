{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TXs = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass TXs {\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n  async getBySafeTxHash(safeTxHash) {\n    if (!safeTxHash) {\n      throw new Error('Invalid safeTxHash');\n    }\n    const response = await this.communicator.send(methods_1.Methods.getTxBySafeTxHash, {\n      safeTxHash\n    });\n    return response.data;\n  }\n  async signMessage(message) {\n    const messagePayload = {\n      message\n    };\n    const response = await this.communicator.send(methods_1.Methods.signMessage, messagePayload);\n    return response.data;\n  }\n  async send({\n    txs,\n    params\n  }) {\n    if (!txs || !txs.length) {\n      throw new Error('No transactions were passed');\n    }\n    const messagePayload = {\n      txs,\n      params\n    };\n    const response = await this.communicator.send(methods_1.Methods.sendTransactions, messagePayload);\n    return response.data;\n  }\n}\nexports.TXs = TXs;","map":{"version":3,"sources":["../../../src/txs/index.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAUA,MAAM,GAAG,CAAA;EAGP,WAAA,CAAY,YAA0B,EAAA;IACpC,IAAI,CAAC,YAAY,GAAG,YAAY;EAClC;EAEA,MAAM,eAAe,CAAC,UAAkB,EAAA;IACtC,IAAI,CAAC,UAAU,EAAE;MACf,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC;IACtC;IAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,SAAA,CAAA,OAAO,CAAC,iBAAiB,EAAE;MAAE;IAAU,CAAE,CAAC;IAE5C,OAAO,QAAQ,CAAC,IAAI;EACtB;EAEA,MAAM,WAAW,CAAC,OAAe,EAAA;IAC/B,MAAM,cAAc,GAAG;MACrB;KACD;IAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,SAAA,CAAA,OAAO,CAAC,WAAW,EACnB,cAAc,CACf;IAED,OAAO,QAAQ,CAAC,IAAI;EACtB;EAEA,MAAM,IAAI,CAAC;IAAE,GAAG;IAAE;EAAM,CAA0B,EAAA;IAChD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;MACvB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;IAC/C;IAED,MAAM,cAAc,GAAG;MACrB,GAAG;MACH;KACD;IAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,SAAA,CAAA,OAAO,CAAC,gBAAgB,EAAE,cAAc,CAAC;IAE3C,OAAO,QAAQ,CAAC,IAAI;EACtB;AACD;AAEQ,OAAA,CAAA,GAAA,GAAA,GAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TXs = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(methods_1.Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(methods_1.Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(methods_1.Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexports.TXs = TXs;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}