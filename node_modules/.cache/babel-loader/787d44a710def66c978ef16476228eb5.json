{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n  var period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler;\n  }\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n  return new Observable(function (subscriber) {\n    var due = isNumeric(dueTime) ? dueTime : +dueTime - scheduler.now();\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period: period,\n      subscriber: subscriber\n    });\n  });\n}\nfunction dispatch(state) {\n  var index = state.index,\n    period = state.period,\n    subscriber = state.subscriber;\n  subscriber.next(index);\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n  state.index = index + 1;\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/observable/timer.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAO,QAAM,eAAoB;AAC1C,SAAS,KAAA,QAAW,oBAAM;AAC1B,SAAS,SAAA,QAAa,mBAAM;AAqD5B,SAAM,WAAU,QAAM,qBAC0C;AAD1C,OAAA,SAAA,KAAA,CAAA,OAAA,EAAA,iBAA0B,EAAA,SAAA,EAAA;EAG9C,IAAI,OAAM,KAAM,KAAA,CAAA,EAAA;IACZ,OAAA,GAAU,CAAA;EACZ;EACD,IAAA,MAAA,GAAA,CAAA,CAAA;MAAM,SAAI,CAAA,iBAAY,CAAA,EAAA;IACrB,MAAA,GAAS,MAAG,CAAA,iBAAyB,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,iBAAA,CAAA;GACtC,MAEI,IAAA,WAAY,CAAA,iBAAY,CAAA,EAAA;IAC3B,SAAS,GAAG,iBAAM;EACnB;EAED,IAAA,CAAA,WAAW,CAAA,SAAW,CAAA,EAAA;IACpB,SAAS,GAAG,KAAA;EACV;SACA,IAAG,UAAQ,CAAG,UAAU,UAAO,EAAA;IAEjC,IAAA,GAAO,GAAA,SAAU,CAAA,OAAS,CAAA,GACxB,OAAQ,GACP,CAAA,OAAA,GAAA,SAAA,CAAA,GAAA,CAAA,CAAA;IACF,OAAA,SAAA,CAAA,QAAA,CAAA,QAAA,EAAA,GAAA,EAAA;MACJ,KAAA,EAAA,CAAA;MAAA,MAAA,EAAA,MAAA;MAAA,UAAA,EAAA;IAQD,CAAS,CAAA;EACC,CAAA,CAAA;AACR;AAEA,SAAI,QAAA,CAAU,KAAC,EAAM;MACnB,KAAA,GAAO,KAAA,CAAA,KAAA;IAAA,MAAA,GAAA,KAAA,CAAA,MAAA;IAAA,UAAA,GAAA,KAAA,CAAA,UAAA;EACR,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA;MAAM,UAAI,CAAM,MAAM,EAAC;IACtB;GACD,MAEI,IAAC,MAAQ,KAAK,CAAA,CAAG,EAAE;IACpB,OAAC,UAAgB,CAAA,QAAQ,CAAA,CAAA;EAC9B","sourcesContent":["/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n"]},"metadata":{},"sourceType":"module"}