{"ast":null,"code":"import * as queryStringUtils from \"query-string\";\nexport function getQueryString(url) {\n  const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n  const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n  return queryString;\n}\nexport function appendToQueryString(queryString, newQueryParams) {\n  let queryParams = parseQueryString(queryString);\n  queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n  queryString = formatQueryString(queryParams);\n  return queryString;\n}\nexport function parseQueryString(queryString) {\n  return queryStringUtils.parse(queryString);\n}\nexport function formatQueryString(queryParams) {\n  return queryStringUtils.stringify(queryParams);\n}","map":{"version":3,"sources":["../../src/url.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,gBAAgB,MAAM,cAAc;AAEhD,OAAM,SAAU,cAAc,CAAC,GAAW,EAAA;EACxC,MAAM,OAAO,GAAuB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS;EAE1F,MAAM,WAAW,GAAW,OAAO,OAAO,KAAK,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;EAErF,OAAO,WAAW;AACpB;AAEA,OAAM,SAAU,mBAAmB,CAAC,WAAmB,EAAE,cAAmB,EAAA;EAC1E,IAAI,WAAW,GAAG,gBAAgB,CAAC,WAAW,CAAC;EAE/C,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAQ,WAAW,CAAA,EAAK,cAAc,CAAE;EAEnD,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;EAE5C,OAAO,WAAW;AACpB;AAEA,OAAM,SAAU,gBAAgB,CAAC,WAAmB,EAAA;EAClD,OAAO,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC;AAC5C;AAEA,OAAM,SAAU,iBAAiB,CAAC,WAAgB,EAAA;EAChD,OAAO,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC;AAChD","sourceRoot":"","sourcesContent":["import * as queryStringUtils from \"query-string\";\nexport function getQueryString(url) {\n    const pathEnd = url.indexOf(\"?\") !== -1 ? url.indexOf(\"?\") : undefined;\n    const queryString = typeof pathEnd !== \"undefined\" ? url.substr(pathEnd) : \"\";\n    return queryString;\n}\nexport function appendToQueryString(queryString, newQueryParams) {\n    let queryParams = parseQueryString(queryString);\n    queryParams = Object.assign(Object.assign({}, queryParams), newQueryParams);\n    queryString = formatQueryString(queryParams);\n    return queryString;\n}\nexport function parseQueryString(queryString) {\n    return queryStringUtils.parse(queryString);\n}\nexport function formatQueryString(queryParams) {\n    return queryStringUtils.stringify(queryParams);\n}\n//# sourceMappingURL=url.js.map"]},"metadata":{},"sourceType":"module"}