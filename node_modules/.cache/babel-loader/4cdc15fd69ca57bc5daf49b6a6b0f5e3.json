{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/warnings/GnosisSafeWarning.jsx\",\n  _s = $RefreshSig$();\nimport { Alert, AlertIcon, Checkbox, Flex, Text } from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GnosisSafeWarning = ({\n  isChecked,\n  setChecked,\n  noShadow = false,\n  noCheckbox = false\n}) => {\n  _s();\n  const {\n    isGnosisSafe,\n    account\n  } = useWeb3Context();\n  const {\n    receiver\n  } = useBridgeContext();\n  if (!isGnosisSafe) return null;\n  const isSameAddress = account && receiver && account.toLowerCase() === receiver.toLowerCase();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    direction: \"column\",\n    w: \"100%\",\n    mb: \"4\",\n    children: [(noCheckbox || isSameAddress) && /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"warning\",\n      borderRadius: 5,\n      mb: noCheckbox ? '0' : '4',\n      boxShadow: noShadow ? 'none' : '0px 1rem 2rem rgba(204, 218, 238, 0.8)',\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {\n        minWidth: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), noCheckbox && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"small\",\n        children: \"It is mandatory to set an alternative recipient address when Omnibridge is loaded as a Gnosis Safe App. Usually this would be the address of a Gnosis Safe on the other side of the bridge.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), isSameAddress && !noCheckbox && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"small\",\n        children: \"You have specified the same address as the current Gnosis Safe wallet address.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), !noCheckbox && isSameAddress && /*#__PURE__*/_jsxDEV(Checkbox, {\n      w: \"100%\",\n      isChecked: isChecked,\n      onChange: e => setChecked(e.target.checked),\n      borderColor: \"grey\",\n      borderRadius: \"4px\",\n      size: \"lg\",\n      variant: \"solid\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"sm\",\n        children: \"I agree to proceed and understand I will receive the funds on the same address on the other side of the bridge.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(GnosisSafeWarning, \"uKwWAPekwhhVlz8rD6xZefO46Ys=\", false, function () {\n  return [useWeb3Context, useBridgeContext];\n});\n_c = GnosisSafeWarning;\nvar _c;\n$RefreshReg$(_c, \"GnosisSafeWarning\");","map":{"version":3,"names":["Alert","AlertIcon","Checkbox","Flex","Text","useBridgeContext","useWeb3Context","React","jsxDEV","_jsxDEV","GnosisSafeWarning","isChecked","setChecked","noShadow","noCheckbox","_s","isGnosisSafe","account","receiver","isSameAddress","toLowerCase","align","direction","w","mb","children","status","borderRadius","boxShadow","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onChange","e","target","checked","borderColor","size","variant","_c","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/warnings/GnosisSafeWarning.jsx"],"sourcesContent":["import { Alert, AlertIcon, Checkbox, Flex, Text } from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport React from 'react';\n\nexport const GnosisSafeWarning = ({\n  isChecked,\n  setChecked,\n  noShadow = false,\n  noCheckbox = false,\n}) => {\n  const { isGnosisSafe, account } = useWeb3Context();\n  const { receiver } = useBridgeContext();\n\n  if (!isGnosisSafe) return null;\n  const isSameAddress =\n    account && receiver && account.toLowerCase() === receiver.toLowerCase();\n  return (\n    <Flex align=\"center\" direction=\"column\" w=\"100%\" mb=\"4\">\n      {(noCheckbox || isSameAddress) && (\n        <Alert\n          status=\"warning\"\n          borderRadius={5}\n          mb={noCheckbox ? '0' : '4'}\n          boxShadow={\n            noShadow ? 'none' : '0px 1rem 2rem rgba(204, 218, 238, 0.8)'\n          }\n        >\n          <AlertIcon minWidth=\"20px\" />\n          {noCheckbox && (\n            <Text fontSize=\"small\">\n              It is mandatory to set an alternative recipient address when\n              Omnibridge is loaded as a Gnosis Safe App. Usually this would be\n              the address of a Gnosis Safe on the other side of the bridge.\n            </Text>\n          )}\n          {isSameAddress && !noCheckbox && (\n            <Text fontSize=\"small\">\n              You have specified the same address as the current Gnosis Safe\n              wallet address.\n            </Text>\n          )}\n        </Alert>\n      )}\n      {!noCheckbox && isSameAddress && (\n        <Checkbox\n          w=\"100%\"\n          isChecked={isChecked}\n          onChange={e => setChecked(e.target.checked)}\n          borderColor=\"grey\"\n          borderRadius=\"4px\"\n          size=\"lg\"\n          variant=\"solid\"\n        >\n          <Text fontSize=\"sm\">\n            I agree to proceed and understand I will receive the funds on the\n            same address on the other side of the bridge.\n          </Text>\n        </Checkbox>\n      )}\n    </Flex>\n  );\n};\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,QAAQ,kBAAkB;AACzE,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAChCC,SAAS;EACTC,UAAU;EACVC,QAAQ,GAAG,KAAK;EAChBC,UAAU,GAAG;AACf,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAGX,cAAc,CAAC,CAAC;EAClD,MAAM;IAAEY;EAAS,CAAC,GAAGb,gBAAgB,CAAC,CAAC;EAEvC,IAAI,CAACW,YAAY,EAAE,OAAO,IAAI;EAC9B,MAAMG,aAAa,GACjBF,OAAO,IAAIC,QAAQ,IAAID,OAAO,CAACG,WAAW,CAAC,CAAC,KAAKF,QAAQ,CAACE,WAAW,CAAC,CAAC;EACzE,oBACEX,OAAA,CAACN,IAAI;IAACkB,KAAK,EAAC,QAAQ;IAACC,SAAS,EAAC,QAAQ;IAACC,CAAC,EAAC,MAAM;IAACC,EAAE,EAAC,GAAG;IAAAC,QAAA,GACpD,CAACX,UAAU,IAAIK,aAAa,kBAC3BV,OAAA,CAACT,KAAK;MACJ0B,MAAM,EAAC,SAAS;MAChBC,YAAY,EAAE,CAAE;MAChBH,EAAE,EAAEV,UAAU,GAAG,GAAG,GAAG,GAAI;MAC3Bc,SAAS,EACPf,QAAQ,GAAG,MAAM,GAAG,wCACrB;MAAAY,QAAA,gBAEDhB,OAAA,CAACR,SAAS;QAAC4B,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5BnB,UAAU,iBACTL,OAAA,CAACL,IAAI;QAAC8B,QAAQ,EAAC,OAAO;QAAAT,QAAA,EAAC;MAIvB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP,EACAd,aAAa,IAAI,CAACL,UAAU,iBAC3BL,OAAA,CAACL,IAAI;QAAC8B,QAAQ,EAAC,OAAO;QAAAT,QAAA,EAAC;MAGvB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACR,EACA,CAACnB,UAAU,IAAIK,aAAa,iBAC3BV,OAAA,CAACP,QAAQ;MACPqB,CAAC,EAAC,MAAM;MACRZ,SAAS,EAAEA,SAAU;MACrBwB,QAAQ,EAAEC,CAAC,IAAIxB,UAAU,CAACwB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAE;MAC5CC,WAAW,EAAC,MAAM;MAClBZ,YAAY,EAAC,KAAK;MAClBa,IAAI,EAAC,IAAI;MACTC,OAAO,EAAC,OAAO;MAAAhB,QAAA,eAEfhB,OAAA,CAACL,IAAI;QAAC8B,QAAQ,EAAC,IAAI;QAAAT,QAAA,EAAC;MAGpB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAClB,EAAA,CAzDWL,iBAAiB;EAAA,QAMMJ,cAAc,EAC3BD,gBAAgB;AAAA;AAAAqC,EAAA,GAP1BhC,iBAAiB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}