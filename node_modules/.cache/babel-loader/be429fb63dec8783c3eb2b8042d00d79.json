{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\nvar RepeatWhenOperator = /*@__PURE__*/function () {\n  function RepeatWhenOperator(notifier) {\n    this.notifier = notifier;\n  }\n  RepeatWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  };\n  return RepeatWhenOperator;\n}();\nvar RepeatWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RepeatWhenSubscriber, _super);\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n  RepeatWhenSubscriber.prototype.notifyNext = function () {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  };\n  RepeatWhenSubscriber.prototype.notifyComplete = function () {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return _super.prototype.complete.call(this);\n    }\n  };\n  RepeatWhenSubscriber.prototype.complete = function () {\n    this.sourceIsBeingSubscribedTo = false;\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return _super.prototype.complete.call(this);\n      }\n      this._unsubscribeAndRecycle();\n      this.notifications.next(undefined);\n    }\n  };\n  RepeatWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      notifications = _a.notifications,\n      retriesSubscription = _a.retriesSubscription;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  };\n  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n    var _unsubscribe = this._unsubscribe;\n    this._unsubscribe = null;\n    _super.prototype._unsubscribeAndRecycle.call(this);\n    this._unsubscribe = _unsubscribe;\n    return this;\n  };\n  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n    this.notifications = new Subject();\n    var retries;\n    try {\n      var notifier = this.notifier;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return _super.prototype.complete.call(this);\n    }\n    this.retries = retries;\n    this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n  };\n  return RepeatWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/repeatWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function () {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries;\n        try {\n            var notifier = this.notifier;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    };\n    return RepeatWhenSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n"]},"metadata":{},"sourceType":"module"}