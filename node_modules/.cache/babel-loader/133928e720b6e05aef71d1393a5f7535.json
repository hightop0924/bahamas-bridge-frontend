{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/contexts/Web3Context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { SafeAppWeb3Modal as Web3Modal } from '@gnosis.pm/safe-apps-web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport coinbaseLogo from \"assets/coinbase.svg\";\nimport imTokenLogo from \"assets/imtoken.svg\";\nimport { ethers } from 'ethers';\nimport { isSanctionedByChainalysis } from 'lib/chainalysis';\nimport { getNetworkName, getRPCUrl, getWalletProviderName, logError } from 'lib/helpers';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { WalletLink } from 'walletlink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Web3Context = /*#__PURE__*/React.createContext({});\nexport const useWeb3Context = () => {\n  _s();\n  return useContext(Web3Context);\n};\n_s(useWeb3Context, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst updateTitle = chainId => {\n  const networkName = getNetworkName(chainId);\n  const defaultTitle = 'OmniBridge';\n  if (!process.env.REACT_APP_TITLE) {\n    document.title = defaultTitle;\n  } else {\n    const titleReplaceString = '%c';\n    const appTitle = process.env.REACT_APP_TITLE || defaultTitle;\n    if (appTitle.indexOf(titleReplaceString) !== -1) {\n      document.title = appTitle.replace(titleReplaceString, networkName);\n    } else {\n      document.title = appTitle;\n    }\n  }\n};\nconst rpc = {\n  1: getRPCUrl(1),\n  // 42: getRPCUrl(42),\n  // 100: getRPCUrl(100),\n  // 77: getRPCUrl(77),\n  56: getRPCUrl(56)\n};\nconst connector = async (ProviderPackage, options) => {\n  const provider = new ProviderPackage(options);\n  await provider.enable();\n  return provider;\n};\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      rpc\n    }\n  },\n  'custom-imToken': {\n    display: {\n      logo: imTokenLogo,\n      name: 'imToken',\n      description: 'Connect to your imToken Wallet'\n    },\n    package: WalletConnectProvider,\n    options: {\n      rpc\n    },\n    connector\n  },\n  'custom-walletlink': {\n    display: {\n      logo: coinbaseLogo,\n      name: 'Coinbase',\n      description: 'Scan with Coinbase Wallet to connect'\n    },\n    options: {\n      appName: 'OmniBridge'\n    },\n    package: WalletLink,\n    connector: async (WalletLinkPackage, options) => {\n      const {\n        appName\n      } = options;\n      const walletLink = new WalletLinkPackage({\n        appName\n      });\n      const provider = walletLink.makeWeb3Provider({}, 0);\n      await provider.enable();\n      return provider;\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  cacheProvider: true,\n  providerOptions\n});\nexport const Web3Provider = ({\n  children\n}) => {\n  _s2();\n  const [{\n    providerChainId,\n    ethersProvider,\n    account,\n    isSanctioned\n  }, setWeb3State] = useState({});\n  const [isGnosisSafe, setGnosisSafe] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const setWeb3Provider = useCallback(async prov => {\n    try {\n      const provider = new ethers.providers.Web3Provider(prov);\n      const address = await provider.getSigner().getAddress();\n      setWeb3State({\n        account: address,\n        ethersProvider: provider,\n        providerChainId: (await provider.getNetwork()).chainId,\n        isSanctioned: await isSanctionedByChainalysis(address)\n      });\n    } catch (error) {\n      logError({\n        web3ModalError: error\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (providerChainId) {\n      updateTitle(providerChainId);\n    }\n  }, [providerChainId]);\n  const disconnect = useCallback(async () => {\n    web3Modal.clearCachedProvider();\n    setGnosisSafe(false);\n    setWeb3State({});\n  }, []);\n  const connectWeb3 = useCallback(async () => {\n    try {\n      setLoading(true);\n      const modalProvider = await web3Modal.requestProvider();\n      await setWeb3Provider(modalProvider);\n      const gnosisSafe = await web3Modal.isSafeApp();\n      setGnosisSafe(gnosisSafe);\n      if (!gnosisSafe) {\n        modalProvider.on('accountsChanged', async () => {\n          setLoading(true);\n          await setWeb3Provider(modalProvider);\n          setLoading(false);\n        });\n        modalProvider.on('chainChanged', async () => {\n          setLoading(true);\n          await setWeb3Provider(modalProvider);\n          setLoading(false);\n        });\n      }\n    } catch (error) {\n      logError({\n        web3ModalError: error\n      });\n      disconnect();\n    } finally {\n      setLoading(false);\n    }\n  }, [setWeb3Provider, disconnect]);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n    (async function load() {\n      if ((await web3Modal.isSafeApp()) || web3Modal.cachedProvider) {\n        connectWeb3();\n      } else {\n        setLoading(false);\n      }\n    })();\n  }, [connectWeb3]);\n  const isMetamask = useMemo(() => {\n    var _window$ethereum;\n    return getWalletProviderName(ethersProvider) === 'metamask' && ((_window$ethereum = window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask) === true;\n  }, [ethersProvider]);\n  const isConnected = useMemo(() => !!account && !!providerChainId && !!ethersProvider, [account, providerChainId, ethersProvider]);\n  const web3Context = useMemo(() => ({\n    isGnosisSafe,\n    ethersProvider,\n    connectWeb3,\n    loading,\n    disconnect,\n    providerChainId,\n    account,\n    isMetamask,\n    isConnected,\n    isSanctioned: isSanctioned !== null && isSanctioned !== void 0 ? isSanctioned : false\n  }), [isGnosisSafe, ethersProvider, connectWeb3, loading, disconnect, providerChainId, account, isMetamask, isConnected, isSanctioned]);\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: web3Context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s2(Web3Provider, \"sthwkqKlBpQ3SJSIzszyFJXWlIA=\");\n_c = Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["SafeAppWeb3Modal","Web3Modal","WalletConnectProvider","coinbaseLogo","imTokenLogo","ethers","isSanctionedByChainalysis","getNetworkName","getRPCUrl","getWalletProviderName","logError","React","useCallback","useContext","useEffect","useMemo","useState","WalletLink","jsxDEV","_jsxDEV","Web3Context","createContext","useWeb3Context","_s","updateTitle","chainId","networkName","defaultTitle","process","env","REACT_APP_TITLE","document","title","titleReplaceString","appTitle","indexOf","replace","rpc","connector","ProviderPackage","options","provider","enable","providerOptions","walletconnect","package","display","logo","name","description","appName","WalletLinkPackage","walletLink","makeWeb3Provider","web3Modal","cacheProvider","Web3Provider","children","_s2","providerChainId","ethersProvider","account","isSanctioned","setWeb3State","isGnosisSafe","setGnosisSafe","loading","setLoading","setWeb3Provider","prov","providers","address","getSigner","getAddress","getNetwork","error","web3ModalError","disconnect","clearCachedProvider","connectWeb3","modalProvider","requestProvider","gnosisSafe","isSafeApp","on","window","ethereum","autoRefreshOnNetworkChange","load","cachedProvider","isMetamask","_window$ethereum","isMetaMask","isConnected","web3Context","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/contexts/Web3Context.jsx"],"sourcesContent":["import { SafeAppWeb3Modal as Web3Modal } from '@gnosis.pm/safe-apps-web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport coinbaseLogo from 'assets/coinbase.svg';\nimport imTokenLogo from 'assets/imtoken.svg';\nimport { ethers } from 'ethers';\nimport { isSanctionedByChainalysis } from 'lib/chainalysis';\nimport {\n  getNetworkName,\n  getRPCUrl,\n  getWalletProviderName,\n  logError,\n} from 'lib/helpers';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { WalletLink } from 'walletlink';\n\nexport const Web3Context = React.createContext({});\nexport const useWeb3Context = () => useContext(Web3Context);\n\nconst updateTitle = chainId => {\n  const networkName = getNetworkName(chainId);\n  const defaultTitle = 'OmniBridge';\n  if (!process.env.REACT_APP_TITLE) {\n    document.title = defaultTitle;\n  } else {\n    const titleReplaceString = '%c';\n    const appTitle = process.env.REACT_APP_TITLE || defaultTitle;\n\n    if (appTitle.indexOf(titleReplaceString) !== -1) {\n      document.title = appTitle.replace(titleReplaceString, networkName);\n    } else {\n      document.title = appTitle;\n    }\n  }\n};\n\nconst rpc = {\n  1: getRPCUrl(1),\n  // 42: getRPCUrl(42),\n  // 100: getRPCUrl(100),\n  // 77: getRPCUrl(77),\n  56: getRPCUrl(56),\n};\n\nconst connector = async (ProviderPackage, options) => {\n  const provider = new ProviderPackage(options);\n  await provider.enable();\n  return provider;\n};\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: { rpc },\n  },\n  'custom-imToken': {\n    display: {\n      logo: imTokenLogo,\n      name: 'imToken',\n      description: 'Connect to your imToken Wallet',\n    },\n    package: WalletConnectProvider,\n    options: { rpc },\n    connector,\n  },\n  'custom-walletlink': {\n    display: {\n      logo: coinbaseLogo,\n      name: 'Coinbase',\n      description: 'Scan with Coinbase Wallet to connect',\n    },\n    options: {\n      appName: 'OmniBridge',\n    },\n    package: WalletLink,\n    connector: async (WalletLinkPackage, options) => {\n      const { appName } = options;\n      const walletLink = new WalletLinkPackage({\n        appName,\n      });\n      const provider = walletLink.makeWeb3Provider({}, 0);\n      await provider.enable();\n      return provider;\n    },\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  cacheProvider: true,\n  providerOptions,\n});\n\nexport const Web3Provider = ({ children }) => {\n  const [\n    { providerChainId, ethersProvider, account, isSanctioned },\n    setWeb3State,\n  ] = useState({});\n  const [isGnosisSafe, setGnosisSafe] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const setWeb3Provider = useCallback(async prov => {\n    try {\n      const provider = new ethers.providers.Web3Provider(prov);\n      const address = await provider.getSigner().getAddress();\n      setWeb3State({\n        account: address,\n        ethersProvider: provider,\n        providerChainId: (await provider.getNetwork()).chainId,\n        isSanctioned: await isSanctionedByChainalysis(address),\n      });\n    } catch (error) {\n      logError({ web3ModalError: error });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (providerChainId) {\n      updateTitle(providerChainId);\n    }\n  }, [providerChainId]);\n\n  const disconnect = useCallback(async () => {\n    web3Modal.clearCachedProvider();\n    setGnosisSafe(false);\n    setWeb3State({});\n  }, []);\n\n  const connectWeb3 = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      const modalProvider = await web3Modal.requestProvider();\n\n      await setWeb3Provider(modalProvider);\n\n      const gnosisSafe = await web3Modal.isSafeApp();\n      setGnosisSafe(gnosisSafe);\n\n      if (!gnosisSafe) {\n        modalProvider.on('accountsChanged', async () => {\n          setLoading(true);\n          await setWeb3Provider(modalProvider);\n          setLoading(false);\n        });\n        modalProvider.on('chainChanged', async () => {\n          setLoading(true);\n          await setWeb3Provider(modalProvider);\n          setLoading(false);\n        });\n      }\n    } catch (error) {\n      logError({ web3ModalError: error });\n      disconnect();\n    } finally {\n      setLoading(false);\n    }\n  }, [setWeb3Provider, disconnect]);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n    (async function load() {\n      if ((await web3Modal.isSafeApp()) || web3Modal.cachedProvider) {\n        connectWeb3();\n      } else {\n        setLoading(false);\n      }\n    })();\n  }, [connectWeb3]);\n\n  const isMetamask = useMemo(\n    () =>\n      getWalletProviderName(ethersProvider) === 'metamask' &&\n      window.ethereum?.isMetaMask === true,\n    [ethersProvider],\n  );\n\n  const isConnected = useMemo(\n    () => !!account && !!providerChainId && !!ethersProvider,\n    [account, providerChainId, ethersProvider],\n  );\n\n  const web3Context = useMemo(\n    () => ({\n      isGnosisSafe,\n      ethersProvider,\n      connectWeb3,\n      loading,\n      disconnect,\n      providerChainId,\n      account,\n      isMetamask,\n      isConnected,\n      isSanctioned: isSanctioned ?? false,\n    }),\n    [\n      isGnosisSafe,\n      ethersProvider,\n      connectWeb3,\n      loading,\n      disconnect,\n      providerChainId,\n      account,\n      isMetamask,\n      isConnected,\n      isSanctioned,\n    ],\n  );\n\n  return (\n    <Web3Context.Provider value={web3Context}>{children}</Web3Context.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}