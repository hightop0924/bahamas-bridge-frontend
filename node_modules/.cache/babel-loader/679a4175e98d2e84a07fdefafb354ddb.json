{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/warnings/DaiWarning.jsx\",\n  _s = $RefreshSig$();\nimport { Alert, AlertIcon, Flex, Link, Text } from '@chakra-ui/react';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { ETH_XDAI_BRIDGE } from 'lib/constants';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ERC20_DAI_ADDRESS = '0x6B175474E89094C44Da98b954EedeAC495271d0F'.toLowerCase();\nexport const isERC20DaiAddress = token => {\n  if (!token) return false;\n  const {\n    chainId,\n    address\n  } = token;\n  return chainId === 1 && address.toLowerCase() === ERC20_DAI_ADDRESS;\n};\nconst XDaiBridgeLink = () => /*#__PURE__*/_jsxDEV(Link, {\n  href: \"https://bridge.xdaichain.com/\",\n  color: \"blue.500\",\n  isExternal: true,\n  children: \"xDai Ethereum Bridge\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n_c = XDaiBridgeLink;\nexport const DaiWarning = ({\n  token,\n  noShadow = false\n}) => {\n  _s();\n  const {\n    bridgeDirection\n  } = useBridgeDirection();\n  const isERC20Dai = bridgeDirection === ETH_XDAI_BRIDGE && isERC20DaiAddress(token);\n  return isERC20Dai ? /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    direction: \"column\",\n    w: \"100%\",\n    mb: \"4\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      borderRadius: 5,\n      boxShadow: noShadow ? 'none' : '0px 1rem 2rem rgba(204, 218, 238, 0.8)',\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {\n        minWidth: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"small\",\n        children: [\"Bridging DAI token to Gnosis Chain DOES NOT mint native xDai token. If you want native xDai, use the \", /*#__PURE__*/_jsxDEV(XDaiBridgeLink, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(DaiWarning, \"OsGjt7xk0z5A+m1v9mrzHC8awiY=\", false, function () {\n  return [useBridgeDirection];\n});\n_c2 = DaiWarning;\nvar _c, _c2;\n$RefreshReg$(_c, \"XDaiBridgeLink\");\n$RefreshReg$(_c2, \"DaiWarning\");","map":{"version":3,"names":["Alert","AlertIcon","Flex","Link","Text","useBridgeDirection","ETH_XDAI_BRIDGE","React","jsxDEV","_jsxDEV","ERC20_DAI_ADDRESS","toLowerCase","isERC20DaiAddress","token","chainId","address","XDaiBridgeLink","href","color","isExternal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DaiWarning","noShadow","_s","bridgeDirection","isERC20Dai","align","direction","w","mb","status","borderRadius","boxShadow","minWidth","fontSize","_c2","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/warnings/DaiWarning.jsx"],"sourcesContent":["import { Alert, AlertIcon, Flex, Link, Text } from '@chakra-ui/react';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { ETH_XDAI_BRIDGE } from 'lib/constants';\nimport React from 'react';\n\nconst ERC20_DAI_ADDRESS =\n  '0x6B175474E89094C44Da98b954EedeAC495271d0F'.toLowerCase();\n\nexport const isERC20DaiAddress = token => {\n  if (!token) return false;\n\n  const { chainId, address } = token;\n  return chainId === 1 && address.toLowerCase() === ERC20_DAI_ADDRESS;\n};\n\nconst XDaiBridgeLink = () => (\n  <Link href=\"https://bridge.xdaichain.com/\" color=\"blue.500\" isExternal>\n    xDai Ethereum Bridge\n  </Link>\n);\n\nexport const DaiWarning = ({ token, noShadow = false }) => {\n  const { bridgeDirection } = useBridgeDirection();\n  const isERC20Dai =\n    bridgeDirection === ETH_XDAI_BRIDGE && isERC20DaiAddress(token);\n\n  return isERC20Dai ? (\n    <Flex align=\"center\" direction=\"column\" w=\"100%\" mb=\"4\">\n      <Alert\n        status=\"error\"\n        borderRadius={5}\n        boxShadow={noShadow ? 'none' : '0px 1rem 2rem rgba(204, 218, 238, 0.8)'}\n      >\n        <AlertIcon minWidth=\"20px\" />\n        <Text fontSize=\"small\">\n          Bridging DAI token to Gnosis Chain DOES NOT mint native xDai token. If\n          you want native xDai, use the <XDaiBridgeLink />.\n        </Text>\n      </Alert>\n    </Flex>\n  ) : null;\n};\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,QAAQ,kBAAkB;AACrE,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,eAAe,QAAQ,eAAe;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GACrB,4CAA4C,CAACC,WAAW,CAAC,CAAC;AAE5D,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;EACxC,IAAI,CAACA,KAAK,EAAE,OAAO,KAAK;EAExB,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAClC,OAAOC,OAAO,KAAK,CAAC,IAAIC,OAAO,CAACJ,WAAW,CAAC,CAAC,KAAKD,iBAAiB;AACrE,CAAC;AAED,MAAMM,cAAc,GAAGA,CAAA,kBACrBP,OAAA,CAACN,IAAI;EAACc,IAAI,EAAC,+BAA+B;EAACC,KAAK,EAAC,UAAU;EAACC,UAAU;EAAAC,QAAA,EAAC;AAEvE;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CACP;AAACC,EAAA,GAJIT,cAAc;AAMpB,OAAO,MAAMU,UAAU,GAAGA,CAAC;EAAEb,KAAK;EAAEc,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM;IAAEC;EAAgB,CAAC,GAAGxB,kBAAkB,CAAC,CAAC;EAChD,MAAMyB,UAAU,GACdD,eAAe,KAAKvB,eAAe,IAAIM,iBAAiB,CAACC,KAAK,CAAC;EAEjE,OAAOiB,UAAU,gBACfrB,OAAA,CAACP,IAAI;IAAC6B,KAAK,EAAC,QAAQ;IAACC,SAAS,EAAC,QAAQ;IAACC,CAAC,EAAC,MAAM;IAACC,EAAE,EAAC,GAAG;IAAAd,QAAA,eACrDX,OAAA,CAACT,KAAK;MACJmC,MAAM,EAAC,OAAO;MACdC,YAAY,EAAE,CAAE;MAChBC,SAAS,EAAEV,QAAQ,GAAG,MAAM,GAAG,wCAAyC;MAAAP,QAAA,gBAExEX,OAAA,CAACR,SAAS;QAACqC,QAAQ,EAAC;MAAM;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7Bf,OAAA,CAACL,IAAI;QAACmC,QAAQ,EAAC,OAAO;QAAAnB,QAAA,GAAC,uGAES,eAAAX,OAAA,CAACO,cAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAClD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC,GACL,IAAI;AACV,CAAC;AAACI,EAAA,CApBWF,UAAU;EAAA,QACOrB,kBAAkB;AAAA;AAAAmC,GAAA,GADnCd,UAAU;AAAA,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}