{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n  return function (source) {\n    return source.lift(new RetryWhenOperator(notifier, source));\n  };\n}\nvar RetryWhenOperator = /*@__PURE__*/function () {\n  function RetryWhenOperator(notifier, source) {\n    this.notifier = notifier;\n    this.source = source;\n  }\n  RetryWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  };\n  return RetryWhenOperator;\n}();\nvar RetryWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RetryWhenSubscriber, _super);\n  function RetryWhenSubscriber(destination, notifier, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.notifier = notifier;\n    _this.source = source;\n    return _this;\n  }\n  RetryWhenSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var errors = this.errors;\n      var retries = this.retries;\n      var retriesSubscription = this.retriesSubscription;\n      if (!retries) {\n        errors = new Subject();\n        try {\n          var notifier = this.notifier;\n          retries = notifier(errors);\n        } catch (e) {\n          return _super.prototype.error.call(this, e);\n        }\n        retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n      } else {\n        this.errors = undefined;\n        this.retriesSubscription = undefined;\n      }\n      this._unsubscribeAndRecycle();\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n      errors.next(err);\n    }\n  };\n  RetryWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      errors = _a.errors,\n      retriesSubscription = _a.retriesSubscription;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  };\n  RetryWhenSubscriber.prototype.notifyNext = function () {\n    var _unsubscribe = this._unsubscribe;\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n    this.source.subscribe(this);\n  };\n  return RetryWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/retryWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    var notifier = this.notifier;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return _super.prototype.error.call(this, e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n"]},"metadata":{},"sourceType":"module"}