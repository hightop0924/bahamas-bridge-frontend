{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  var resultSelector = observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n  ZipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  };\n  return ZipOperator;\n}();\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipSubscriber, _super);\n  function ZipSubscriber(destination, resultSelector, values) {\n    if (values === void 0) {\n      values = Object.create(null);\n    }\n    var _this = _super.call(this, destination) || this;\n    _this.resultSelector = resultSelector;\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;\n    return _this;\n  }\n  ZipSubscriber.prototype._next = function (value) {\n    var iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  };\n  ZipSubscriber.prototype._complete = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    this.unsubscribe();\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n    this.active = len;\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      if (iterator.stillUnsubscribed) {\n        var destination = this.destination;\n        destination.add(iterator.subscribe());\n      } else {\n        this.active--;\n      }\n    }\n  };\n  ZipSubscriber.prototype.notifyInactive = function () {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  };\n  ZipSubscriber.prototype.checkIterators = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    var destination = this.destination;\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n    var shouldComplete = false;\n    var args = [];\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      var result = iterator.next();\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n      args.push(result.value);\n    }\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n    if (shouldComplete) {\n      destination.complete();\n    }\n  };\n  ZipSubscriber.prototype._tryresultSelector = function (args) {\n    var result;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return ZipSubscriber;\n}(Subscriber);\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/function () {\n  function StaticIterator(iterator) {\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n  StaticIterator.prototype.hasValue = function () {\n    return true;\n  };\n  StaticIterator.prototype.next = function () {\n    var result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  };\n  StaticIterator.prototype.hasCompleted = function () {\n    var nextResult = this.nextResult;\n    return Boolean(nextResult && nextResult.done);\n  };\n  return StaticIterator;\n}();\nvar StaticArrayIterator = /*@__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n  StaticArrayIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n  StaticArrayIterator.prototype.next = function (value) {\n    var i = this.index++;\n    var array = this.array;\n    return i < this.length ? {\n      value: array[i],\n      done: false\n    } : {\n      value: null,\n      done: true\n    };\n  };\n  StaticArrayIterator.prototype.hasValue = function () {\n    return this.array.length > this.index;\n  };\n  StaticArrayIterator.prototype.hasCompleted = function () {\n    return this.array.length === this.index;\n  };\n  return StaticArrayIterator;\n}();\nvar ZipBufferIterator = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipBufferIterator, _super);\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this = _super.call(this, destination) || this;\n    _this.parent = parent;\n    _this.observable = observable;\n    _this.stillUnsubscribed = true;\n    _this.buffer = [];\n    _this.isComplete = false;\n    return _this;\n  }\n  ZipBufferIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n  ZipBufferIterator.prototype.next = function () {\n    var buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return {\n        value: null,\n        done: true\n      };\n    } else {\n      return {\n        value: buffer.shift(),\n        done: false\n      };\n    }\n  };\n  ZipBufferIterator.prototype.hasValue = function () {\n    return this.buffer.length > 0;\n  };\n  ZipBufferIterator.prototype.hasCompleted = function () {\n    return this.buffer.length === 0 && this.isComplete;\n  };\n  ZipBufferIterator.prototype.notifyComplete = function () {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  };\n  ZipBufferIterator.prototype.notifyNext = function (innerValue) {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  };\n  ZipBufferIterator.prototype.subscribe = function () {\n    return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n  };\n  return ZipBufferIterator;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/observable/zip.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                var destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function () {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    };\n    return ZipBufferIterator;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=zip.js.map\n"]},"metadata":{},"sourceType":"module"}