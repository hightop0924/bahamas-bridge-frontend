{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n  return function (source) {\n    return source.lift(new ExhaustMapOperator(project));\n  };\n}\nvar ExhaustMapOperator = /*@__PURE__*/function () {\n  function ExhaustMapOperator(project) {\n    this.project = project;\n  }\n  ExhaustMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  };\n  return ExhaustMapOperator;\n}();\nvar ExhaustMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExhaustMapSubscriber, _super);\n  function ExhaustMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n  ExhaustMapSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  };\n  ExhaustMapSubscriber.prototype.tryNext = function (value) {\n    var result;\n    var index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result);\n  };\n  ExhaustMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(result, innerSubscriber);\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n  ExhaustMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  };\n  ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n  ExhaustMapSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n  ExhaustMapSubscriber.prototype.notifyComplete = function () {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n  return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/exhaustMap.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhaustMapOperator(project));\n    };\n}\nvar ExhaustMapOperator = /*@__PURE__*/ (function () {\n    function ExhaustMapOperator(project) {\n        this.project = project;\n    }\n    ExhaustMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhaustMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    };\n    ExhaustMapSubscriber.prototype._innerSub = function (result) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function () {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n"]},"metadata":{},"sourceType":"module"}