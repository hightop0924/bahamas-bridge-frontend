{"ast":null,"code":"import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString } from \"@walletconnect/utils\";\nimport NetworkMonitor from \"./network\";\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\nclass SocketTransport {\n  constructor(opts) {\n    this.opts = opts;\n    this._queue = [];\n    this._events = [];\n    this._subscriptions = [];\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = \"\";\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n    if (!opts.url || typeof opts.url !== \"string\") {\n      throw new Error(\"Missing or invalid WebSocket url\");\n    }\n    this._url = opts.url;\n    this._netMonitor.on(\"online\", () => this._socketCreate());\n  }\n  set readyState(value) {}\n  get readyState() {\n    return this._socket ? this._socket.readyState : -1;\n  }\n  set connecting(value) {}\n  get connecting() {\n    return this.readyState === 0;\n  }\n  set connected(value) {}\n  get connected() {\n    return this.readyState === 1;\n  }\n  set closing(value) {}\n  get closing() {\n    return this.readyState === 2;\n  }\n  set closed(value) {}\n  get closed() {\n    return this.readyState === 3;\n  }\n  open() {\n    this._socketCreate();\n  }\n  close() {\n    this._socketClose();\n  }\n  send(message, topic, silent) {\n    if (!topic || typeof topic !== \"string\") {\n      throw new Error(\"Missing or invalid topic field\");\n    }\n    this._socketSend({\n      topic: topic,\n      type: \"pub\",\n      payload: message,\n      silent: !!silent\n    });\n  }\n  subscribe(topic) {\n    this._socketSend({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    });\n  }\n  on(event, callback) {\n    this._events.push({\n      event,\n      callback\n    });\n  }\n  _socketCreate() {\n    if (this._nextSocket) {\n      return;\n    }\n    const url = getWebSocketUrl(this._url, this._protocol, this._version);\n    this._nextSocket = new WS(url);\n    if (!this._nextSocket) {\n      throw new Error(\"Failed to create socket\");\n    }\n    this._nextSocket.onmessage = event => this._socketReceive(event);\n    this._nextSocket.onopen = () => this._socketOpen();\n    this._nextSocket.onerror = event => this._socketError(event);\n    this._nextSocket.onclose = () => {\n      setTimeout(() => {\n        this._nextSocket = null;\n        this._socketCreate();\n      }, 1000);\n    };\n  }\n  _socketOpen() {\n    this._socketClose();\n    this._socket = this._nextSocket;\n    this._nextSocket = null;\n    this._queueSubscriptions();\n    this._pushQueue();\n  }\n  _socketClose() {\n    if (this._socket) {\n      this._socket.onclose = () => {};\n      this._socket.close();\n    }\n  }\n  _socketSend(socketMessage) {\n    const message = JSON.stringify(socketMessage);\n    if (this._socket && this._socket.readyState === 1) {\n      this._socket.send(message);\n    } else {\n      this._setToQueue(socketMessage);\n      this._socketCreate();\n    }\n  }\n  async _socketReceive(event) {\n    let socketMessage;\n    try {\n      socketMessage = JSON.parse(event.data);\n    } catch (error) {\n      return;\n    }\n    this._socketSend({\n      topic: socketMessage.topic,\n      type: \"ack\",\n      payload: \"\",\n      silent: true\n    });\n    if (this._socket && this._socket.readyState === 1) {\n      const events = this._events.filter(event => event.event === \"message\");\n      if (events && events.length) {\n        events.forEach(event => event.callback(socketMessage));\n      }\n    }\n  }\n  _socketError(e) {\n    const events = this._events.filter(event => event.event === \"error\");\n    if (events && events.length) {\n      events.forEach(event => event.callback(e));\n    }\n  }\n  _queueSubscriptions() {\n    const subscriptions = this._subscriptions;\n    subscriptions.forEach(topic => this._queue.push({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    }));\n    this._subscriptions = this.opts.subscriptions || [];\n  }\n  _setToQueue(socketMessage) {\n    this._queue.push(socketMessage);\n  }\n  _pushQueue() {\n    const queue = this._queue;\n    queue.forEach(socketMessage => this._socketSend(socketMessage));\n    this._queue = [];\n  }\n}\nfunction getWebSocketUrl(_url, protocol, version) {\n  var _a, _b;\n  const url = _url.startsWith(\"https\") ? _url.replace(\"https\", \"wss\") : _url.startsWith(\"http\") ? _url.replace(\"http\", \"ws\") : _url;\n  const splitUrl = url.split(\"?\");\n  const params = isBrowser() ? {\n    protocol,\n    version,\n    env: \"browser\",\n    host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\"\n  } : {\n    protocol,\n    version,\n    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\"\n  };\n  const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\n  return splitUrl[0] + \"?\" + queryString;\n}\nexport default SocketTransport;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString, } from \"@walletconnect/utils\";\nimport NetworkMonitor from \"./network\";\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\nclass SocketTransport {\n    constructor(opts) {\n        this.opts = opts;\n        this._queue = [];\n        this._events = [];\n        this._subscriptions = [];\n        this._protocol = opts.protocol;\n        this._version = opts.version;\n        this._url = \"\";\n        this._netMonitor = null;\n        this._socket = null;\n        this._nextSocket = null;\n        this._subscriptions = opts.subscriptions || [];\n        this._netMonitor = opts.netMonitor || new NetworkMonitor();\n        if (!opts.url || typeof opts.url !== \"string\") {\n            throw new Error(\"Missing or invalid WebSocket url\");\n        }\n        this._url = opts.url;\n        this._netMonitor.on(\"online\", () => this._socketCreate());\n    }\n    set readyState(value) {\n    }\n    get readyState() {\n        return this._socket ? this._socket.readyState : -1;\n    }\n    set connecting(value) {\n    }\n    get connecting() {\n        return this.readyState === 0;\n    }\n    set connected(value) {\n    }\n    get connected() {\n        return this.readyState === 1;\n    }\n    set closing(value) {\n    }\n    get closing() {\n        return this.readyState === 2;\n    }\n    set closed(value) {\n    }\n    get closed() {\n        return this.readyState === 3;\n    }\n    open() {\n        this._socketCreate();\n    }\n    close() {\n        this._socketClose();\n    }\n    send(message, topic, silent) {\n        if (!topic || typeof topic !== \"string\") {\n            throw new Error(\"Missing or invalid topic field\");\n        }\n        this._socketSend({\n            topic: topic,\n            type: \"pub\",\n            payload: message,\n            silent: !!silent,\n        });\n    }\n    subscribe(topic) {\n        this._socketSend({\n            topic: topic,\n            type: \"sub\",\n            payload: \"\",\n            silent: true,\n        });\n    }\n    on(event, callback) {\n        this._events.push({ event, callback });\n    }\n    _socketCreate() {\n        if (this._nextSocket) {\n            return;\n        }\n        const url = getWebSocketUrl(this._url, this._protocol, this._version);\n        this._nextSocket = new WS(url);\n        if (!this._nextSocket) {\n            throw new Error(\"Failed to create socket\");\n        }\n        this._nextSocket.onmessage = (event) => this._socketReceive(event);\n        this._nextSocket.onopen = () => this._socketOpen();\n        this._nextSocket.onerror = (event) => this._socketError(event);\n        this._nextSocket.onclose = () => {\n            setTimeout(() => {\n                this._nextSocket = null;\n                this._socketCreate();\n            }, 1000);\n        };\n    }\n    _socketOpen() {\n        this._socketClose();\n        this._socket = this._nextSocket;\n        this._nextSocket = null;\n        this._queueSubscriptions();\n        this._pushQueue();\n    }\n    _socketClose() {\n        if (this._socket) {\n            this._socket.onclose = () => {\n            };\n            this._socket.close();\n        }\n    }\n    _socketSend(socketMessage) {\n        const message = JSON.stringify(socketMessage);\n        if (this._socket && this._socket.readyState === 1) {\n            this._socket.send(message);\n        }\n        else {\n            this._setToQueue(socketMessage);\n            this._socketCreate();\n        }\n    }\n    async _socketReceive(event) {\n        let socketMessage;\n        try {\n            socketMessage = JSON.parse(event.data);\n        }\n        catch (error) {\n            return;\n        }\n        this._socketSend({\n            topic: socketMessage.topic,\n            type: \"ack\",\n            payload: \"\",\n            silent: true,\n        });\n        if (this._socket && this._socket.readyState === 1) {\n            const events = this._events.filter(event => event.event === \"message\");\n            if (events && events.length) {\n                events.forEach(event => event.callback(socketMessage));\n            }\n        }\n    }\n    _socketError(e) {\n        const events = this._events.filter(event => event.event === \"error\");\n        if (events && events.length) {\n            events.forEach(event => event.callback(e));\n        }\n    }\n    _queueSubscriptions() {\n        const subscriptions = this._subscriptions;\n        subscriptions.forEach((topic) => this._queue.push({\n            topic: topic,\n            type: \"sub\",\n            payload: \"\",\n            silent: true,\n        }));\n        this._subscriptions = this.opts.subscriptions || [];\n    }\n    _setToQueue(socketMessage) {\n        this._queue.push(socketMessage);\n    }\n    _pushQueue() {\n        const queue = this._queue;\n        queue.forEach((socketMessage) => this._socketSend(socketMessage));\n        this._queue = [];\n    }\n}\nfunction getWebSocketUrl(_url, protocol, version) {\n    var _a, _b;\n    const url = _url.startsWith(\"https\")\n        ? _url.replace(\"https\", \"wss\")\n        : _url.startsWith(\"http\")\n            ? _url.replace(\"http\", \"ws\")\n            : _url;\n    const splitUrl = url.split(\"?\");\n    const params = isBrowser()\n        ? {\n            protocol,\n            version,\n            env: \"browser\",\n            host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\",\n        }\n        : {\n            protocol,\n            version,\n            env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n        };\n    const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\n    return splitUrl[0] + \"?\" + queryString;\n}\nexport default SocketTransport;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}