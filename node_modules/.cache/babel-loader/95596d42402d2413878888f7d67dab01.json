{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery) {\n  if (startBufferEvery === void 0) {\n    startBufferEvery = null;\n  }\n  return function bufferCountOperatorFunction(source) {\n    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n  };\n}\nvar BufferCountOperator = /*@__PURE__*/function () {\n  function BufferCountOperator(bufferSize, startBufferEvery) {\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n  BufferCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  };\n  return BufferCountOperator;\n}();\nvar BufferCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BufferCountSubscriber, _super);\n  function BufferCountSubscriber(destination, bufferSize) {\n    var _this = _super.call(this, destination) || this;\n    _this.bufferSize = bufferSize;\n    _this.buffer = [];\n    return _this;\n  }\n  BufferCountSubscriber.prototype._next = function (value) {\n    var buffer = this.buffer;\n    buffer.push(value);\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  };\n  BufferCountSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    _super.prototype._complete.call(this);\n  };\n  return BufferCountSubscriber;\n}(Subscriber);\nvar BufferSkipCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(BufferSkipCountSubscriber, _super);\n  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n    var _this = _super.call(this, destination) || this;\n    _this.bufferSize = bufferSize;\n    _this.startBufferEvery = startBufferEvery;\n    _this.buffers = [];\n    _this.count = 0;\n    return _this;\n  }\n  BufferSkipCountSubscriber.prototype._next = function (value) {\n    var _a = this,\n      bufferSize = _a.bufferSize,\n      startBufferEvery = _a.startBufferEvery,\n      buffers = _a.buffers,\n      count = _a.count;\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n    for (var i = buffers.length; i--;) {\n      var buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  };\n  BufferSkipCountSubscriber.prototype._complete = function () {\n    var _a = this,\n      buffers = _a.buffers,\n      destination = _a.destination;\n    while (buffers.length > 0) {\n      var buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    _super.prototype._complete.call(this);\n  };\n  return BufferSkipCountSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferCount.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAU,MAAE,OAAM;AA2D3B,SAAM,UAAU,QAAW,eAAwB;AAAA,OAAA,SAAA,WAAA,CAAA,UAAA,EAAA,gBAAA,EAAA;EACjD,IAAA,gBAAgB,KAAA,KAAA,CAAA,EAAA;IACd,gBAAc,GAAK,IAAI;EACzB;EACD,OAAA,SAAA,2BAAA,CAAA,MAAA,EAAA;IAED,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,mBAAA,CAAA,UAAA,EAAA,gBAAA,CAAA,CAAA;EAGE,CAAA;AAAoB;IAA4B,mBAAA,GAAA,aAAA,YAAwB;EACtE,SAAK,mBAAgB,CAAI,UAAU,EAAA,gBAAK,EAAA;QACtC,CAAA,UAAK,GAAA,UAAkB;IACxB,IAAA,CAAA,gBAAA,GAAA,gBAAA;SAAM,gBAAA,IAAA,UAAA,KAAA,gBAAA,EAAA;MACL,IAAI,CAAC,eAAe,GAAG,qBAAA;KACxB,MACF;MAED,IAAA,CAAA,eAAA,GAAA,yBAAK;IACH;EACF;EACF,mBAAA,CAAA,SAAC,CAAA,IAAA,GAAA,UAAA,UAAA,EAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,IAAA,CAAA,eAAA,CAAA,UAAA,EAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,gBAAA,CAAA,CAAA;EAOD,CAAA;EAAuC,OAAA,mBAAA;GAGrC;IAAA,qBACE,GAAA,aAAM,UAAY,MACnB,EAAA;EAFiD,OAAA,CAAA,SAAA,CAAA,qBAAkB,EAAA,MAAA,CAAA;EAF5D,SAAA,qBAAiB,CAAA,WAAA,EAAA,UAAA,EAAA;;IAIxB,KAAA,CAAA,UAAA,GAAA,UAAA;IAES,KAAA,CAAA,MAAA,GAAA,EAAV;IACE,OAAM,KAAM;EAEZ;EAEA,qBAAiB,CAAA,SAAS,CAAA,KAAA,GAAU,UAAE,KAAA,EAAA;QACpC,MAAK,GAAA,IAAA,CAAA,MAAY;IACjB,MAAA,CAAA,IAAK,CAAA,KAAM,CAAG;IACf,IAAA,MAAA,CAAA,MAAA,IAAA,IAAA,CAAA,UAAA,EAAA;MACF,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,CAAA;MAES,IAAA,CAAA,MAAA,GAAA,EAAV;IACE;GACA;EACE,qBAAK,CAAA,SAAiB,CAAA,SAAQ,GAAA,YAAA;IAC/B,IAAA,MAAA,GAAA,IAAA,CAAA,MAAA;IACD,IAAA,MAAA,CAAA,MAAM,GAAA,CAAA,EAAA;MACP,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,CAAA;IACH;IAzBuC,MAAU,CAyBhD,SAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA;EAOD,CAAA;EAA2C,OAAA,qBAAA;EAIzC,UAAA,CAAA;IAAA,yBACE,GAAA,aAAM,UAAY,MACnB,EAAA;EAFiD,OAAA,CAAA,SAAA,CAAA,yBAAkB,EAAA,MAAA,CAAA;EAAU,SAAA,yBAAA,CAAA,WAAwB,EAAA,UAAA,EAAA,gBAAA,EAAA;IAH9F,IAAA,KAAA,GAAA,MAAwB,CAAC,IAAA,CAAA,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;IACzB,KAAA,CAAA,UAAkB,GAAA,UAAA;;IAIzB,KAAA,CAAA,OAAA,GAAA,EAAA;IAES,KAAA,CAAA,KAAA,GAAA,CAAV;IACQ,OAAA,KAAA;EAEN;EACA,yBAAY,CAAA,SAAgB,CAAA,KAAQ,GAAA,UAAA,KAAA,EAAA;QAClC,EAAA,GAAA,IAAQ;MAAA,UAAS,GAAA,EAAA,CAAA,UAAA;MAAA,gBAAA,GAAA,EAAA,CAAA,gBAAA;MAAA,OAAA,GAAA,EAAA,CAAA,OAAA;MAAA,KAAA,GAAA,EAAA,CAAA,KAAA;IAClB,IAAA,CAAA,KAAA,EAAA;IAED,IAAA,KAAS,GAAC,gBAAiB,KAAK,CAAA,EAAI;MAClC,OAAM,CAAA,IAAM,CAAG,EAAA,CAAA;IACf;IACA,KAAA,IAAI,CAAA,GAAA,OAAO,CAAM,MAAK,EAAA,CAAA,EAAA,GAAA;UACpB,MAAA,GAAQ,OAAQ,CAAA,CAAE,CAAC;MACnB,MAAA,CAAA,IAAK,CAAA,KAAA,CAAA;MACN,IAAA,MAAA,CAAA,MAAA,KAAA,UAAA,EAAA;QACF,OAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;QACF,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,MAAA,CAAA;MAED;IACQ;GAEN;EACE,yBAAa,CAAA,SAAa,CAAE,SAAC,GAAA,YAAA;QAC7B,EAAA,GAAI,IAAA;MAAO,OAAM,GAAI,EAAE,CAAA,OAAA;MAAA,WAAA,GAAA,EAAA,CAAA,WAAA;WACrB,OAAA,CAAA,MAAY,GAAI,CAAC,EAAA;MAClB,IAAA,MAAA,GAAA,OAAA,CAAA,KAAA,CAAA,CAAA;MACF,IAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;QACD,WAAM,CAAA,IAAA,CAAA,MAAS,CAAA;MAChB;IAEH;IAtC2C,MAAU,CAsCpD,SAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar BufferCountOperator = /*@__PURE__*/ (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n"]},"metadata":{},"sourceType":"module"}