{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGatewayUrl = void 0;\nconst getGatewayUrl = (uri, tokenId) => {\n  const match = new RegExp(/([a-z]+)(?::\\/\\/|\\/)(.*)/).exec(uri);\n  if (!match || match.length < 3) {\n    return uri;\n  }\n  const id = match[2];\n  let url = uri;\n  switch (match[1]) {\n    case 'ar':\n      {\n        url = `https://arweave.net/${id}`;\n        break;\n      }\n    case 'ipfs':\n      if (id.includes('ipfs') || id.includes('ipns')) {\n        url = `https://gateway.ipfs.io/${id}`;\n      } else {\n        url = `https://gateway.ipfs.io/ipfs/${id}`;\n      }\n      break;\n    case 'ipns':\n      if (id.includes('ipfs') || id.includes('ipns')) {\n        url = `https://gateway.ipfs.io/${id}`;\n      } else {\n        url = `https://gateway.ipfs.io/ipns/${id}`;\n      }\n      break;\n    case 'http':\n    case 'https':\n      break;\n  }\n  return tokenId ? url.replaceAll('{id}', tokenId) : url;\n};\nexports.getGatewayUrl = getGatewayUrl;","map":{"version":3,"sources":["../src/resolve.ts"],"names":[],"mappings":";;;;;;AAAO,MAAM,aAAa,GAAG,CAAC,GAAW,EAAE,OAAgB,KAAY;EACrE,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAE9D,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IAC9B,OAAO,GAAG;EACX;EAED,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;EACnB,IAAI,GAAG,GAAG,GAAG;EAEb,QAAQ,KAAK,CAAC,CAAC,CAAC;IACd,KAAK,IAAI;MAAE;QACT,GAAG,GAAG,uBAAuB,EAAE,EAAE;QACjC;MACD;IACD,KAAK,MAAM;MACT,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC9C,GAAG,GAAG,2BAA2B,EAAE,EAAE;OACtC,MAAM;QACL,GAAG,GAAG,gCAAgC,EAAE,EAAE;MAC3C;MACD;IACF,KAAK,MAAM;MACT,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC9C,GAAG,GAAG,2BAA2B,EAAE,EAAE;OACtC,MAAM;QACL,GAAG,GAAG,gCAAgC,EAAE,EAAE;MAC3C;MACD;IACF,KAAK,MAAM;IACX,KAAK,OAAO;MACV;EACH;EAED,OAAO,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,GAAG;AACxD,CAAC;AAnCY,OAAA,CAAA,aAAa,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGatewayUrl = void 0;\nconst getGatewayUrl = (uri, tokenId) => {\n    const match = new RegExp(/([a-z]+)(?::\\/\\/|\\/)(.*)/).exec(uri);\n    if (!match || match.length < 3) {\n        return uri;\n    }\n    const id = match[2];\n    let url = uri;\n    switch (match[1]) {\n        case 'ar': {\n            url = `https://arweave.net/${id}`;\n            break;\n        }\n        case 'ipfs':\n            if (id.includes('ipfs') || id.includes('ipns')) {\n                url = `https://gateway.ipfs.io/${id}`;\n            }\n            else {\n                url = `https://gateway.ipfs.io/ipfs/${id}`;\n            }\n            break;\n        case 'ipns':\n            if (id.includes('ipfs') || id.includes('ipns')) {\n                url = `https://gateway.ipfs.io/${id}`;\n            }\n            else {\n                url = `https://gateway.ipfs.io/ipns/${id}`;\n            }\n            break;\n        case 'http':\n        case 'https':\n            break;\n    }\n    return tokenId ? url.replaceAll('{id}', tokenId) : url;\n};\nexports.getGatewayUrl = getGatewayUrl;\n//# sourceMappingURL=resolve.js.map"]},"metadata":{},"sourceType":"script"}