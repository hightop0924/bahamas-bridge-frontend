{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/bridge/SystemFeedback.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Flex, Popover, PopoverBody, PopoverContent, PopoverTrigger, Spinner, Text, VStack } from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { utils } from 'ethers';\nimport { LimitsIcon } from 'icons/LimitsIcon';\nimport { formatValueForLimits as formatValue } from 'lib/helpers';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SystemFeedback = ({\n  tokenLimits,\n  fetching,\n  refresh\n}) => {\n  _s();\n  const {\n    fromToken: token\n  } = useBridgeContext();\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: refresh,\n        variant: \"ghost\",\n        color: \"blue.500\",\n        _hover: {\n          bg: '#EEF4FD'\n        },\n        fontWeight: \"normal\",\n        px: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(LimitsIcon, {\n          boxSize: \"1.25rem\",\n          mr: \"0.3125rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Limits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n      border: \"none\",\n      minW: \"25rem\",\n      w: \"auto\",\n      maxW: \"35rem\",\n      p: 0,\n      children: token && tokenLimits && /*#__PURE__*/_jsxDEV(PopoverBody, {\n        width: \"100%\",\n        align: \"center\",\n        fontSize: \"sm\",\n        boxShadow: \"0 0.5rem 1rem #CADAEF\",\n        px: \"1.5rem\",\n        py: \"1rem\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: \"0.5rem\",\n          w: \"100%\",\n          align: \"stretch\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"grey\",\n              textAlign: \"left\",\n              children: \"Daily Limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), fetching ? /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              children: tokenLimits.dailyLimit.gte(utils.parseEther('1000000000000000') // greater than 999 trillion is infinity\n              ) ? /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                ml: 4,\n                textAlign: \"right\",\n                lineHeight: \"21px\",\n                fontSize: \"xl\",\n                children: \"\\u221E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                ml: 4,\n                textAlign: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  as: \"span\",\n                  color: \"#4DA9A6\",\n                  children: [formatValue(tokenLimits.dailyLimit.sub(tokenLimits.remainingLimit), token.decimals), ' / ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  as: \"span\",\n                  children: [formatValue(tokenLimits.dailyLimit, token.decimals), ' ', token.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"grey\",\n              textAlign: \"left\",\n              children: \"Max per Tx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), fetching ? /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              ml: 4,\n              textAlign: \"right\",\n              children: [formatValue(tokenLimits.maxPerTx, token.decimals), ' ', token.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"grey\",\n              textAlign: \"left\",\n              children: \"Min per Tx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), fetching ? /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"bold\",\n              ml: 4,\n              textAlign: \"right\",\n              children: [formatValue(tokenLimits.minPerTx, token.decimals), ' ', token.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemFeedback, \"2wf7aP+pOLkNpDaCjU2rA6EJ/mI=\", false, function () {\n  return [useBridgeContext];\n});\n_c = SystemFeedback;\nvar _c;\n$RefreshReg$(_c, \"SystemFeedback\");","map":{"version":3,"names":["Box","Button","Flex","Popover","PopoverBody","PopoverContent","PopoverTrigger","Spinner","Text","VStack","useBridgeContext","utils","LimitsIcon","formatValueForLimits","formatValue","React","jsxDEV","_jsxDEV","SystemFeedback","tokenLimits","fetching","refresh","_s","fromToken","token","children","onClick","variant","color","_hover","bg","fontWeight","px","boxSize","mr","fileName","_jsxFileName","lineNumber","columnNumber","border","minW","w","maxW","p","width","align","fontSize","boxShadow","py","spacing","justify","textAlign","size","dailyLimit","gte","parseEther","ml","lineHeight","as","sub","remainingLimit","decimals","symbol","maxPerTx","minPerTx","_c","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/bridge/SystemFeedback.jsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Spinner,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { utils } from 'ethers';\nimport { LimitsIcon } from 'icons/LimitsIcon';\nimport { formatValueForLimits as formatValue } from 'lib/helpers';\nimport React from 'react';\n\nexport const SystemFeedback = ({ tokenLimits, fetching, refresh }) => {\n  const { fromToken: token } = useBridgeContext();\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button\n          onClick={refresh}\n          variant=\"ghost\"\n          color=\"blue.500\"\n          _hover={{ bg: '#EEF4FD' }}\n          fontWeight=\"normal\"\n          px=\"2\"\n        >\n          <LimitsIcon boxSize=\"1.25rem\" mr=\"0.3125rem\" />\n          <Text>Limits</Text>\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent border=\"none\" minW=\"25rem\" w=\"auto\" maxW=\"35rem\" p={0}>\n        {token && tokenLimits && (\n          <PopoverBody\n            width=\"100%\"\n            align=\"center\"\n            fontSize=\"sm\"\n            boxShadow=\"0 0.5rem 1rem #CADAEF\"\n            px=\"1.5rem\"\n            py=\"1rem\"\n          >\n            <VStack spacing=\"0.5rem\" w=\"100%\" align=\"stretch\">\n              <Flex align=\"center\" justify=\"space-between\">\n                <Text color=\"grey\" textAlign=\"left\">\n                  Daily Limit\n                </Text>\n                {fetching ? (\n                  <Spinner size=\"sm\" />\n                ) : (\n                  <Box>\n                    {tokenLimits.dailyLimit.gte(\n                      utils.parseEther('1000000000000000'), // greater than 999 trillion is infinity\n                    ) ? (\n                      <Text\n                        fontWeight=\"bold\"\n                        ml={4}\n                        textAlign=\"right\"\n                        lineHeight=\"21px\"\n                        fontSize=\"xl\"\n                      >\n                        ∞\n                      </Text>\n                    ) : (\n                      <Text fontWeight=\"bold\" ml={4} textAlign=\"right\">\n                        <Text as=\"span\" color=\"#4DA9A6\">\n                          {formatValue(\n                            tokenLimits.dailyLimit.sub(\n                              tokenLimits.remainingLimit,\n                            ),\n                            token.decimals,\n                          )}\n                          {' / '}\n                        </Text>\n                        <Text as=\"span\">\n                          {formatValue(tokenLimits.dailyLimit, token.decimals)}{' '}\n                          {token.symbol}\n                        </Text>\n                      </Text>\n                    )}\n                  </Box>\n                )}\n              </Flex>\n              <Flex align=\"center\" justify=\"space-between\">\n                <Text color=\"grey\" textAlign=\"left\">\n                  Max per Tx\n                </Text>\n                {fetching ? (\n                  <Spinner size=\"sm\" />\n                ) : (\n                  <Text fontWeight=\"bold\" ml={4} textAlign=\"right\">\n                    {formatValue(tokenLimits.maxPerTx, token.decimals)}{' '}\n                    {token.symbol}\n                  </Text>\n                )}\n              </Flex>\n              <Flex align=\"center\" justify=\"space-between\">\n                <Text color=\"grey\" textAlign=\"left\">\n                  Min per Tx\n                </Text>\n                {fetching ? (\n                  <Spinner size=\"sm\" />\n                ) : (\n                  <Text fontWeight=\"bold\" ml={4} textAlign=\"right\">\n                    {formatValue(tokenLimits.minPerTx, token.decimals)}{' '}\n                    {token.symbol}\n                  </Text>\n                )}\n              </Flex>\n            </VStack>\n          </PopoverBody>\n        )}\n      </PopoverContent>\n    </Popover>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}