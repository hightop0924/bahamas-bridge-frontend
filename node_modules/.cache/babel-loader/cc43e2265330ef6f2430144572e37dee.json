{"ast":null,"code":"import { __assign, __read, __spread } from \"tslib\";\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, getGlobalSingleton, isNodeEnv, logger, uuid4 } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Scope } from './scope';\nimport { Session } from './session';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 4;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */function () {\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  function Hub(client, scope, _version) {\n    if (scope === void 0) {\n      scope = new Scope();\n    }\n    if (_version === void 0) {\n      _version = API_VERSION;\n    }\n    this._version = _version;\n    /** Is a {@link Layer}[] containing the client and scope */\n    this._stack = [{}];\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.isOlderThan = function (version) {\n    return this._version < version;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.bindClient = function (client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.pushScope = function () {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope: scope\n    });\n    return scope;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.popScope = function () {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.withScope = function (callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.getClient = function () {\n    return this.getStackTop().client;\n  };\n  /** Returns the scope of the top stack. */\n  Hub.prototype.getScope = function () {\n    return this.getStackTop().scope;\n  };\n  /** Returns the scope stack for domains or the process. */\n  Hub.prototype.getStack = function () {\n    return this._stack;\n  };\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  Hub.prototype.getStackTop = function () {\n    return this._stack[this._stack.length - 1];\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  Hub.prototype.captureException = function (exception, hint) {\n    var eventId = this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4();\n    var finalHint = hint;\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      var syntheticException = void 0;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException: syntheticException\n      };\n    }\n    this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureMessage = function (message, level, hint) {\n    var eventId = this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4();\n    var finalHint = hint;\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      var syntheticException = void 0;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException: syntheticException\n      };\n    }\n    this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureEvent = function (event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n    this._invokeClient('captureEvent', event, __assign(__assign({}, hint), {\n      event_id: eventId\n    }));\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.lastEventId = function () {\n    return this._lastEventId;\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (!scope || !client) return;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    var _b = client.getOptions && client.getOptions() || {},\n      _c = _b.beforeBreadcrumb,\n      beforeBreadcrumb = _c === void 0 ? null : _c,\n      _d = _b.maxBreadcrumbs,\n      maxBreadcrumbs = _d === void 0 ? DEFAULT_BREADCRUMBS : _d;\n    if (maxBreadcrumbs <= 0) return;\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = __assign({\n      timestamp: timestamp\n    }, breadcrumb);\n    var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n      return beforeBreadcrumb(mergedBreadcrumb, hint);\n    }) : mergedBreadcrumb;\n    if (finalBreadcrumb === null) return;\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setUser = function (user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setTags = function (tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setExtras = function (extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setTag = function (key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.setExtra = function (key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  };\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype.setContext = function (name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.configureScope = function (callback) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (scope && client) {\n      callback(scope);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.run = function (callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.getIntegration = function (integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      IS_DEBUG_BUILD && logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startSpan = function (context) {\n    return this._callExtensionMethod('startSpan', context);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startTransaction = function (context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.traceHeaders = function () {\n    return this._callExtensionMethod('traceHeaders');\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.captureSession = function (endSession) {\n    if (endSession === void 0) {\n      endSession = false;\n    }\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n    // only send the update\n    this._sendSessionUpdate();\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.endSession = function () {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      session.close();\n    }\n    this._sendSessionUpdate();\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  Hub.prototype.startSession = function (context) {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    var _b = client && client.getOptions() || {},\n      release = _b.release,\n      environment = _b.environment;\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    var userAgent = (global.navigator || {}).userAgent;\n    var session = new Session(__assign(__assign(__assign({\n      release: release,\n      environment: environment\n    }, scope && {\n      user: scope.getUser()\n    }), userAgent && {\n      userAgent: userAgent\n    }), context));\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        currentSession.update({\n          status: 'exited'\n        });\n      }\n      this.endSession();\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n    return session;\n  };\n  /**\n   * Sends the current Session on the scope\n   */\n  Hub.prototype._sendSessionUpdate = function () {\n    var _a = this.getStackTop(),\n      scope = _a.scope,\n      client = _a.client;\n    if (!scope) return;\n    var session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  };\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype._invokeClient = function (method) {\n    var _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var _b = this.getStackTop(),\n      scope = _b.scope,\n      client = _b.client;\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (_a = client)[method].apply(_a, __spread(args, [scope]));\n    }\n  };\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Hub.prototype._callExtensionMethod = function (method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    IS_DEBUG_BUILD && logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n  };\n  return Hub;\n}();\nexport { Hub };\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined\n  };\n  return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain() {\n  IS_DEBUG_BUILD && logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n  var sentry = getMainCarrier().__SENTRY__;\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', function () {\n    return new Hub();\n  }, carrier);\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  __SENTRY__.hub = hub;\n  return true;\n}","map":{"version":3,"sources":["../../src/hub.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalObject,\n  getGlobalSingleton,\n  isNodeEnv,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope?: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Hack to prevent bundlers from breaking our usage of the domain package in the cross-platform Hub package */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      domain?: { [key: string]: any };\n    } & {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @hidden\n * @deprecated Can be removed once `Hub.getActiveDomain` is removed.\n */\nexport interface DomainAsCarrier extends Carrier {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  members: { [key: string]: any }[];\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      IS_DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      session.close();\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const global = getGlobalObject<{ navigator?: { userAgent?: string } }>();\n    const { userAgent } = global.navigator || {};\n\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        currentSession.update({ status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    IS_DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  IS_DEBUG_BUILD && logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}