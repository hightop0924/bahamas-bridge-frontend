{"ast":null,"code":"/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n  if (typeof resultSelector === 'function') {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}","map":{"version":3,"sources":["../../../src/internal/operators/mergeMapTo.ts"],"names":[],"mappings":"AAEA;AAiDA,SAAM,QAAU,QAAA,YACd;AAEA,OAAA,SAAA,UAAA,CAAA,eAAA,EAAA,cAA4B,EAAA,UAAiB,EAAA;EAE7C,IAAI,UAAO,KAAA,KAAA,CAAc,EAAA;IACvB,UAAO,GAAA,MAAS,CAAA,iBAAM;EACvB;EACD,IAAI,OAAO,cAAc,KAAK,UAAU,EAAA;IACtC,OAAA,QAAa,CAAA,YAAe;MAAA,OAAA,eAAA;IAAA,CAAA,EAAA,cAAA,EAAA,UAAA,CAAA;EAC7B;EACD,IAAA,OAAO,cAAS,KAAM,QAAA,EAAA;IACvB,UAAA,GAAA,cAAA","sourcesContent":["/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map\n"]},"metadata":{},"sourceType":"module"}