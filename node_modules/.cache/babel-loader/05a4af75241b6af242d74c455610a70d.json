{"ast":null,"code":"/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { zip as zipStatic } from '../observable/zip';\nexport function zip() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  return function zipOperatorFunction(source) {\n    return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/zip.ts"],"names":[],"mappings":"AAAA;AAsCA,SAAM,GAAA,IAAU,SAAG,QAAA,mBAAA;AAAO,OAAA,SAAA,GAAA,CAAA,EAAA;MAAA,WAAA,GAAA,EAAA;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAA4E,EAAA,EAAA,EAAA,EAAA;;EACpG;EACE,OAAA,SAAO,mBAAiB,CAAA,MAAS,EAAA;IACjC,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA,CAAA;EACH,CAAA","sourcesContent":["/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { zip as zipStatic } from '../observable/zip';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=zip.js.map\n"]},"metadata":{},"sourceType":"module"}