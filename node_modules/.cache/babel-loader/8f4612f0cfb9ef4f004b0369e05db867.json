{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\nvar SingleOperator = /*@__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n  SingleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  };\n  return SingleOperator;\n}();\nvar SingleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SingleSubscriber, _super);\n  function SingleSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n  SingleSubscriber.prototype.applySingleValue = function (value) {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  };\n  SingleSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  };\n  SingleSubscriber.prototype.tryNext = function (value, index) {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  SingleSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError());\n    }\n  };\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/single.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAU,MAAE,OAAM;AAC3B,SAAS,UAAU,QAAQ,eAAA;AAkD3B,SAAM,UAAU,QAAU,oBAAuE;AAC/F,OAAA,SAAO,MAAC,CAAA,SAA0B,EAAA;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,cAAA,CAAA,SAAA,EAAA,MAAA,CAAA,CAAA;EAAA,CAAA;AAED;IACE,cAAA,GAAA,aAAoB,YACsB;EADtB,SAAA,cAAA,CAAA,SAAuE,EAAA,MAAA,EAAA;IACvE,IAAA,CAAA,SAAA,GAAA,SAAsB;IACzC,IAAA,CAAA,MAAA,GAAA,MAAA;EAED;EACE,cAAO,CAAA,SAAO,CAAA,IAAU,GAAI,UAAA,UAAiB,EAAA,MAAU,EAAE;IAC1D,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,gBAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,MAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,cAAA;AAOD,CAAA,CAAA,CAAA;IAAkC,gBAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAK7C,OAAA,CAAA,SAAA,CAAA,gBAAY,EAAA,MACQ,CAAA;EADpB,SAAA,gBAGE,CAAA,WAAM,EAAA,SAAY,EAAA,MACnB,EAAA;IAHmB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAuE,EAAA,WAAA,CAAA,IAAA,IAAA;IACvE,KAAA,CAAA,SAAA,GAAA,SAAsB;IANlC,KAAA,CAAA,MAAA,GAAS,MAAY;IAErB,KAAA,CAAA,SAAiB,GAAC,KAAA;;IAMzB,OAAA,KAAA;EAED;EACE,gBAAS,CAAA,SAAW,CAAA,gBAAA,GAAA,UAAA,KAAA,EAAA;QAClB,IAAI,CAAC,SAAA,EAAW;MACjB,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA,yCAAA,CAAA;KAAM,MACL;MACA,IAAI,CAAC,SAAA,GAAW,IAAG;MACpB,IAAA,CAAA,WAAA,GAAA,KAAA;IACF;EAES,CAAV;EACE,gBAAc,CAAA,SAAU,CAAA,KAAG,GAAA,UAAA,KAAA,EAAA;IAE3B,IAAI,KAAK,GAAA,IAAA,CAAA,KAAW,EAAA;QAClB,IAAI,CAAC,SAAQ,EAAA;MACd,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA,KAAA,CAAA;KAAM,MACL;MACD,IAAA,CAAA,gBAAA,CAAA,KAAA,CAAA;IACF;EAEO,CAAR;EACE,gBAAI,CAAA,SAAA,CAAA,OAAA,GAAA,UAAA,KAAA,EAAA,KAAA,EAAA;QACF;UACE,IAAI,CAAC,SAAA,CAAA,KAAA,EAAiB,KAAK,EAAE,IAAA,CAAA,MAAA,CAAA,EAAA;QAC9B,IAAA,CAAA,gBAAA,CAAA,KAAA,CAAA;MACF;IAAC,CAAA,CACA,OAAA,GAAK,EAAA;MACN,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA;IACF;EAES,CAAV;EACE,gBAAM,CAAA,SAAkB,CAAC,SAAA,GAAY,YAAA;IAErC,IAAI,WAAU,GAAI,IAAE,CAAA,WAAA;QAClB,IAAA,CAAA,KAAA,GAAY,CAAA,EAAI;MAChB,WAAW,CAAC,IAAA,CAAA,IAAQ,CAAE,SAAC,GAAA,IAAA,CAAA,WAAA,GAAA,SAAA,CAAA;MACxB,WAAA,CAAA,QAAA,CAAA,CAAA;KAAM,MACL;MACD,WAAA,CAAA,KAAA,CAAA,IAAA,UAAA,CAAA,CAAA,CAAA;IACF;EACH,CAAA;EAlDkC,OAAA,gBAkDjC","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar SingleOperator = /*@__PURE__*/ (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n//# sourceMappingURL=single.js.map\n"]},"metadata":{},"sourceType":"module"}