{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar constants;\n(function (constants) {\n  constants.typeOfFunction = 'function';\n  constants.boolTrue = true;\n})(constants || (constants = {}));\nfunction bind(target, propertyKey, descriptor) {\n  if (!descriptor || typeof descriptor.value !== constants.typeOfFunction) {\n    throw new TypeError(\"Only methods can be decorated with @bind. <\" + propertyKey + \"> is not a method!\");\n  }\n  return {\n    configurable: constants.boolTrue,\n    get: function () {\n      var bound = descriptor.value.bind(this);\n      // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.\n      Object.defineProperty(this, propertyKey, {\n        value: bound,\n        configurable: constants.boolTrue,\n        writable: constants.boolTrue\n      });\n      return bound;\n    }\n  };\n}\nexports.bind = bind;\nexports.default = bind;","map":{"version":3,"names":["Object","defineProperty","exports","value","constants","typeOfFunction","boolTrue","bind","target","propertyKey","descriptor","TypeError","configurable","get","bound","writable","default"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/node_modules/bind-decorator/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants;\n(function (constants) {\n    constants.typeOfFunction = 'function';\n    constants.boolTrue = true;\n})(constants || (constants = {}));\nfunction bind(target, propertyKey, descriptor) {\n    if (!descriptor || (typeof descriptor.value !== constants.typeOfFunction)) {\n        throw new TypeError(\"Only methods can be decorated with @bind. <\" + propertyKey + \"> is not a method!\");\n    }\n    return {\n        configurable: constants.boolTrue,\n        get: function () {\n            var bound = descriptor.value.bind(this);\n            // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.\n            Object.defineProperty(this, propertyKey, {\n                value: bound,\n                configurable: constants.boolTrue,\n                writable: constants.boolTrue\n            });\n            return bound;\n        }\n    };\n}\nexports.bind = bind;\nexports.default = bind;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAACC,cAAc,GAAG,UAAU;EACrCD,SAAS,CAACE,QAAQ,GAAG,IAAI;AAC7B,CAAC,EAAEF,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,SAASG,IAAIA,CAACC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAE;EAC3C,IAAI,CAACA,UAAU,IAAK,OAAOA,UAAU,CAACP,KAAK,KAAKC,SAAS,CAACC,cAAe,EAAE;IACvE,MAAM,IAAIM,SAAS,CAAC,6CAA6C,GAAGF,WAAW,GAAG,oBAAoB,CAAC;EAC3G;EACA,OAAO;IACHG,YAAY,EAAER,SAAS,CAACE,QAAQ;IAChCO,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIC,KAAK,GAAGJ,UAAU,CAACP,KAAK,CAACI,IAAI,CAAC,IAAI,CAAC;MACvC;MACAP,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEQ,WAAW,EAAE;QACrCN,KAAK,EAAEW,KAAK;QACZF,YAAY,EAAER,SAAS,CAACE,QAAQ;QAChCS,QAAQ,EAAEX,SAAS,CAACE;MACxB,CAAC,CAAC;MACF,OAAOQ,KAAK;IAChB;EACJ,CAAC;AACL;AACAZ,OAAO,CAACK,IAAI,GAAGA,IAAI;AACnBL,OAAO,CAACc,OAAO,GAAGT,IAAI"},"metadata":{},"sourceType":"script"}