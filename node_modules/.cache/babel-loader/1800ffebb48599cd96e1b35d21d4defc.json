{"ast":null,"code":"const domain = \"walletconnect.org\";\nconst alphanumerical = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst bridges = alphanumerical.split(\"\").map(char => `https://${char}.bridge.walletconnect.org`);\nexport function extractHostname(url) {\n  let hostname = url.indexOf(\"//\") > -1 ? url.split(\"/\")[2] : url.split(\"/\")[0];\n  hostname = hostname.split(\":\")[0];\n  hostname = hostname.split(\"?\")[0];\n  return hostname;\n}\nexport function extractRootDomain(url) {\n  return extractHostname(url).split(\".\").slice(-2).join(\".\");\n}\nexport function randomBridgeIndex() {\n  return Math.floor(Math.random() * bridges.length);\n}\nexport function selectRandomBridgeUrl() {\n  return bridges[randomBridgeIndex()];\n}\nexport function shouldSelectRandomly(url) {\n  return extractRootDomain(url) === domain;\n}\nexport function getBridgeUrl(url) {\n  if (shouldSelectRandomly(url)) {\n    return selectRandomBridgeUrl();\n  }\n  return url;\n}","map":{"version":3,"sources":["../../src/url.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,GAAG,mBAAmB;AAElC,MAAM,cAAc,GAAG,sCAAsC;AAE7D,MAAM,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,WAAW,IAAI,2BAA2B,CAAC;AAEhG,OAAM,SAAU,eAAe,CAAC,GAAW,EAAA;EAEzC,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE7E,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEjC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjC,OAAO,QAAQ;AACjB;AAEA,OAAM,SAAU,iBAAiB,CAAC,GAAW,EAAA;EAC3C,OAAO,eAAe,CAAC,GAAG,CAAC,CACxB,KAAK,CAAC,GAAG,CAAC,CACV,KAAK,CAAC,CAAC,CAAC,CAAC,CACT,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,OAAM,SAAU,iBAAiB,CAAA,EAAA;EAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAA,CAAE,GAAG,OAAO,CAAC,MAAM,CAAC;AACnD;AAEA,OAAM,SAAU,qBAAqB,CAAA,EAAA;EACnC,OAAO,OAAO,CAAC,iBAAiB,CAAA,CAAE,CAAC;AACrC;AAEA,OAAM,SAAU,oBAAoB,CAAC,GAAW,EAAA;EAC9C,OAAO,iBAAiB,CAAC,GAAG,CAAC,KAAK,MAAM;AAC1C;AAEA,OAAM,SAAU,YAAY,CAAC,GAAW,EAAA;EACtC,IAAI,oBAAoB,CAAC,GAAG,CAAC,EAAE;IAC7B,OAAO,qBAAqB,CAAA,CAAE;EAC/B;EACD,OAAO,GAAG;AACZ","sourceRoot":"","sourcesContent":["const domain = \"walletconnect.org\";\nconst alphanumerical = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst bridges = alphanumerical.split(\"\").map(char => `https://${char}.bridge.walletconnect.org`);\nexport function extractHostname(url) {\n    let hostname = url.indexOf(\"//\") > -1 ? url.split(\"/\")[2] : url.split(\"/\")[0];\n    hostname = hostname.split(\":\")[0];\n    hostname = hostname.split(\"?\")[0];\n    return hostname;\n}\nexport function extractRootDomain(url) {\n    return extractHostname(url)\n        .split(\".\")\n        .slice(-2)\n        .join(\".\");\n}\nexport function randomBridgeIndex() {\n    return Math.floor(Math.random() * bridges.length);\n}\nexport function selectRandomBridgeUrl() {\n    return bridges[randomBridgeIndex()];\n}\nexport function shouldSelectRandomly(url) {\n    return extractRootDomain(url) === domain;\n}\nexport function getBridgeUrl(url) {\n    if (shouldSelectRandomly(url)) {\n        return selectRandomBridgeUrl();\n    }\n    return url;\n}\n//# sourceMappingURL=url.js.map"]},"metadata":{},"sourceType":"module"}