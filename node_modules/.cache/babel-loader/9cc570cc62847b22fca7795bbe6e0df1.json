{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function pairwise() {\n  return function (source) {\n    return source.lift(new PairwiseOperator());\n  };\n}\nvar PairwiseOperator = /*@__PURE__*/function () {\n  function PairwiseOperator() {}\n  PairwiseOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  };\n  return PairwiseOperator;\n}();\nvar PairwiseSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(PairwiseSubscriber, _super);\n  function PairwiseSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n    _this.hasPrev = false;\n    return _this;\n  }\n  PairwiseSubscriber.prototype._next = function (value) {\n    var pair;\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n    this.prev = value;\n    if (pair) {\n      this.destination.next(pair);\n    }\n  };\n  return PairwiseSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/pairwise.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAU,MAAE,OAAM;AA8C3B,SAAM,UAAU,QAAQ,eAAA;AACtB,OAAA,SAAO,QAAC,CAAA,EAAqB;EAC9B,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,CAAA;EAAA,CAAA;AAED;IAAA,gBAAA,GAAA,aAAA,YAAA;EAIA,SAAC,gBAAA,CAAA,EAAA,CAHC;EACE,gBAAO,CAAM,SAAC,CAAS,IAAC,GAAI,UAAA,UAAmB,EAAA,MAAW,EAAE;IAC7D,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,kBAAA,CAAA,UAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,gBAAA;AAOD,CAAA,CAAA,CAAA;IAAoC,kBAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAI/C,OAAA,CAAA,SAAA,CAAA,kBAAY,EAAA,MAA+B,CAAA;EAA3C,SAAA,kBACE,CAAA,WAAM,EAAA;IAHA,IAAA,KAAA,GAAA,MAAmB,CAAA,IAAM,CAAA,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;;IAIhC,OAAA,KAAA;EAED;EACE,kBAA6B,CAAA,SAAA,CAAA,KAAA,GAAA,UAAA,KAAA,EAAA;IAE7B,IAAI,IAAI;QACN,IAAI,CAAA,OAAQ,EAAC;MACd,IAAA,GAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;KAAM,MACL;MACD,IAAA,CAAA,OAAA,GAAA,IAAA;IAED;IAEA,IAAI,CAAA,IAAI,GAAE,KAAA;QACR,IAAI,EAAC;MACN,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA;IACF;EACH,CAAA;EAvBoC,OAAA,kBAuBnC","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        var pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n"]},"metadata":{},"sourceType":"module"}