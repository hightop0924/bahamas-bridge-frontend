{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { BigNumber } from 'ethers';\nimport { LARGEST_UINT256, LOCAL_STORAGE_KEYS } from 'lib/constants';\nimport { logDebug, logError } from 'lib/helpers';\nimport { approveToken, fetchAllowance } from 'lib/token';\nimport { useCallback, useEffect, useState } from 'react';\nconst {\n  INFINITE_UNLOCK\n} = LOCAL_STORAGE_KEYS;\nexport const useApproval = (fromToken, fromAmount, txHash) => {\n  _s();\n  const {\n    account,\n    ethersProvider,\n    providerChainId\n  } = useWeb3Context();\n  const [allowance, setAllowance] = useState(BigNumber.from(0));\n  const [allowed, setAllowed] = useState(true);\n  useEffect(() => {\n    if (fromToken && providerChainId === fromToken.chainId) {\n      fetchAllowance(fromToken, account, ethersProvider).then(setAllowance);\n    } else {\n      setAllowance(BigNumber.from(0));\n    }\n  }, [ethersProvider, account, fromToken, providerChainId, txHash]);\n  useEffect(() => {\n    setAllowed(fromToken && ['NATIVE', 'erc677'].includes(fromToken.mode) || allowance.gte(fromAmount));\n  }, [fromAmount, allowance, fromToken]);\n  const [unlockLoading, setUnlockLoading] = useState(false);\n  const [approvalTxHash, setApprovalTxHash] = useState();\n  const approve = useCallback(async () => {\n    setUnlockLoading(true);\n    const approvalAmount = window.localStorage.getItem(INFINITE_UNLOCK) === 'true' ? LARGEST_UINT256 : fromAmount;\n    try {\n      const tx = await approveToken(ethersProvider, fromToken, approvalAmount);\n      setApprovalTxHash(tx.hash);\n      await tx.wait();\n      setAllowance(approvalAmount);\n    } catch (approveError) {\n      if ((approveError === null || approveError === void 0 ? void 0 : approveError.code) === 'TRANSACTION_REPLACED') {\n        if (approveError.cancelled) {\n          throw new Error('transaction was replaced');\n        } else {\n          logDebug('TRANSACTION_REPLACED');\n          setApprovalTxHash(approveError.replacement.hash);\n          try {\n            await approveError.replacement.wait();\n            setAllowance(approvalAmount);\n          } catch (secondApprovalError) {\n            logError({\n              secondApprovalError,\n              fromToken,\n              approvalAmount: approvalAmount.toString(),\n              account\n            });\n            throw secondApprovalError;\n          }\n        }\n      } else {\n        logError({\n          approveError,\n          fromToken,\n          approvalAmount: approvalAmount.toString(),\n          account\n        });\n        throw approveError;\n      }\n    } finally {\n      setApprovalTxHash();\n      setUnlockLoading(false);\n    }\n  }, [fromAmount, fromToken, ethersProvider, account]);\n  return {\n    allowed,\n    unlockLoading,\n    approvalTxHash,\n    approve\n  };\n};\n_s(useApproval, \"F+PPw1P/cZnpEEaXKuxclk0hm+E=\", false, function () {\n  return [useWeb3Context];\n});","map":{"version":3,"names":["useWeb3Context","BigNumber","LARGEST_UINT256","LOCAL_STORAGE_KEYS","logDebug","logError","approveToken","fetchAllowance","useCallback","useEffect","useState","INFINITE_UNLOCK","useApproval","fromToken","fromAmount","txHash","_s","account","ethersProvider","providerChainId","allowance","setAllowance","from","allowed","setAllowed","chainId","then","includes","mode","gte","unlockLoading","setUnlockLoading","approvalTxHash","setApprovalTxHash","approve","approvalAmount","window","localStorage","getItem","tx","hash","wait","approveError","code","cancelled","Error","replacement","secondApprovalError","toString"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/hooks/useApproval.js"],"sourcesContent":["import { useWeb3Context } from 'contexts/Web3Context';\nimport { BigNumber } from 'ethers';\nimport { LARGEST_UINT256, LOCAL_STORAGE_KEYS } from 'lib/constants';\nimport { logDebug, logError } from 'lib/helpers';\nimport { approveToken, fetchAllowance } from 'lib/token';\nimport { useCallback, useEffect, useState } from 'react';\n\nconst { INFINITE_UNLOCK } = LOCAL_STORAGE_KEYS;\n\nexport const useApproval = (fromToken, fromAmount, txHash) => {\n  const { account, ethersProvider, providerChainId } = useWeb3Context();\n  const [allowance, setAllowance] = useState(BigNumber.from(0));\n  const [allowed, setAllowed] = useState(true);\n\n  useEffect(() => {\n    if (fromToken && providerChainId === fromToken.chainId) {\n      fetchAllowance(fromToken, account, ethersProvider).then(setAllowance);\n    } else {\n      setAllowance(BigNumber.from(0));\n    }\n  }, [ethersProvider, account, fromToken, providerChainId, txHash]);\n\n  useEffect(() => {\n    setAllowed(\n      (fromToken && ['NATIVE', 'erc677'].includes(fromToken.mode)) ||\n        allowance.gte(fromAmount),\n    );\n  }, [fromAmount, allowance, fromToken]);\n\n  const [unlockLoading, setUnlockLoading] = useState(false);\n  const [approvalTxHash, setApprovalTxHash] = useState();\n\n  const approve = useCallback(async () => {\n    setUnlockLoading(true);\n    const approvalAmount =\n      window.localStorage.getItem(INFINITE_UNLOCK) === 'true'\n        ? LARGEST_UINT256\n        : fromAmount;\n    try {\n      const tx = await approveToken(ethersProvider, fromToken, approvalAmount);\n      setApprovalTxHash(tx.hash);\n      await tx.wait();\n      setAllowance(approvalAmount);\n    } catch (approveError) {\n      if (approveError?.code === 'TRANSACTION_REPLACED') {\n        if (approveError.cancelled) {\n          throw new Error('transaction was replaced');\n        } else {\n          logDebug('TRANSACTION_REPLACED');\n          setApprovalTxHash(approveError.replacement.hash);\n          try {\n            await approveError.replacement.wait();\n            setAllowance(approvalAmount);\n          } catch (secondApprovalError) {\n            logError({\n              secondApprovalError,\n              fromToken,\n              approvalAmount: approvalAmount.toString(),\n              account,\n            });\n            throw secondApprovalError;\n          }\n        }\n      } else {\n        logError({\n          approveError,\n          fromToken,\n          approvalAmount: approvalAmount.toString(),\n          account,\n        });\n        throw approveError;\n      }\n    } finally {\n      setApprovalTxHash();\n      setUnlockLoading(false);\n    }\n  }, [fromAmount, fromToken, ethersProvider, account]);\n\n  return { allowed, unlockLoading, approvalTxHash, approve };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}