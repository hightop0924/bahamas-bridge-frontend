{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n  return function (source) {\n    return source.lift(new WindowToggleOperator(openings, closingSelector));\n  };\n}\nvar WindowToggleOperator = /*@__PURE__*/function () {\n  function WindowToggleOperator(openings, closingSelector) {\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n  WindowToggleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  };\n  return WindowToggleOperator;\n}();\nvar WindowToggleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowToggleSubscriber, _super);\n  function WindowToggleSubscriber(destination, openings, closingSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.openings = openings;\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n    _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n    return _this;\n  }\n  WindowToggleSubscriber.prototype._next = function (value) {\n    var contexts = this.contexts;\n    if (contexts) {\n      var len = contexts.length;\n      for (var i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  };\n  WindowToggleSubscriber.prototype._error = function (err) {\n    var contexts = this.contexts;\n    this.contexts = null;\n    if (contexts) {\n      var len = contexts.length;\n      var index = -1;\n      while (++index < len) {\n        var context_1 = contexts[index];\n        context_1.window.error(err);\n        context_1.subscription.unsubscribe();\n      }\n    }\n    _super.prototype._error.call(this, err);\n  };\n  WindowToggleSubscriber.prototype._complete = function () {\n    var contexts = this.contexts;\n    this.contexts = null;\n    if (contexts) {\n      var len = contexts.length;\n      var index = -1;\n      while (++index < len) {\n        var context_2 = contexts[index];\n        context_2.window.complete();\n        context_2.subscription.unsubscribe();\n      }\n    }\n    _super.prototype._complete.call(this);\n  };\n  WindowToggleSubscriber.prototype._unsubscribe = function () {\n    var contexts = this.contexts;\n    this.contexts = null;\n    if (contexts) {\n      var len = contexts.length;\n      var index = -1;\n      while (++index < len) {\n        var context_3 = contexts[index];\n        context_3.window.unsubscribe();\n        context_3.subscription.unsubscribe();\n      }\n    }\n  };\n  WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    if (outerValue === this.openings) {\n      var closingNotifier = void 0;\n      try {\n        var closingSelector = this.closingSelector;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n      var window_1 = new Subject();\n      var subscription = new Subscription();\n      var context_4 = {\n        window: window_1,\n        subscription: subscription\n      };\n      this.contexts.push(context_4);\n      var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        innerSubscription.context = context_4;\n        subscription.add(innerSubscription);\n      }\n      this.destination.next(window_1);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  };\n  WindowToggleSubscriber.prototype.notifyError = function (err) {\n    this.error(err);\n  };\n  WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf(inner.context));\n    }\n  };\n  WindowToggleSubscriber.prototype.closeWindow = function (index) {\n    if (index === -1) {\n      return;\n    }\n    var contexts = this.contexts;\n    var context = contexts[index];\n    var window = context.window,\n      subscription = context.subscription;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  };\n  return WindowToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/windowToggle.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingNotifier = void 0;\n            try {\n                var closingSelector = this.closingSelector;\n                closingNotifier = closingSelector(innerValue);\n            }\n            catch (e) {\n                return this.error(e);\n            }\n            var window_1 = new Subject();\n            var subscription = new Subscription();\n            var context_4 = { window: window_1, subscription: subscription };\n            this.contexts.push(context_4);\n            var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n            if (innerSubscription.closed) {\n                this.closeWindow(this.contexts.length - 1);\n            }\n            else {\n                innerSubscription.context = context_4;\n                subscription.add(innerSubscription);\n            }\n            this.destination.next(window_1);\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n"]},"metadata":{},"sourceType":"module"}