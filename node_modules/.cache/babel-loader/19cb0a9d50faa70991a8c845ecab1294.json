{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFavicon = exports.range = exports.isBigNumber = exports.ensureParsedJSONObject = exports.ensureBN = exports.ensureRegExpString = exports.ensureIntNumber = exports.ensureBuffer = exports.ensureAddressString = exports.ensureEvenLengthHexString = exports.ensureHexString = exports.isHexString = exports.prepend0x = exports.strip0x = exports.has0xPrefix = exports.hexStringFromIntNumber = exports.intNumberFromHexString = exports.bigIntStringFromBN = exports.hexStringFromBuffer = exports.hexStringToUint8Array = exports.uint8ArrayToHex = exports.randomBytesHex = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst types_1 = require(\"./types\");\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\nfunction randomBytesHex(length) {\n  return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\nexports.randomBytesHex = randomBytesHex;\nfunction uint8ArrayToHex(value) {\n  return [...value].map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexports.uint8ArrayToHex = uint8ArrayToHex;\nfunction hexStringToUint8Array(hexString) {\n  return new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n}\nexports.hexStringToUint8Array = hexStringToUint8Array;\nfunction hexStringFromBuffer(buf, includePrefix = false) {\n  const hex = buf.toString(\"hex\");\n  return (0, types_1.HexString)(includePrefix ? \"0x\" + hex : hex);\n}\nexports.hexStringFromBuffer = hexStringFromBuffer;\nfunction bigIntStringFromBN(bn) {\n  return (0, types_1.BigIntString)(bn.toString(10));\n}\nexports.bigIntStringFromBN = bigIntStringFromBN;\nfunction intNumberFromHexString(hex) {\n  return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(hex, false), 16).toNumber());\n}\nexports.intNumberFromHexString = intNumberFromHexString;\nfunction hexStringFromIntNumber(num) {\n  return (0, types_1.HexString)(\"0x\" + new bn_js_1.default(num).toString(16));\n}\nexports.hexStringFromIntNumber = hexStringFromIntNumber;\nfunction has0xPrefix(str) {\n  return str.startsWith(\"0x\") || str.startsWith(\"0X\");\n}\nexports.has0xPrefix = has0xPrefix;\nfunction strip0x(hex) {\n  if (has0xPrefix(hex)) {\n    return hex.slice(2);\n  }\n  return hex;\n}\nexports.strip0x = strip0x;\nfunction prepend0x(hex) {\n  if (has0xPrefix(hex)) {\n    return \"0x\" + hex.slice(2);\n  }\n  return \"0x\" + hex;\n}\nexports.prepend0x = prepend0x;\nfunction isHexString(hex) {\n  if (typeof hex !== \"string\") {\n    return false;\n  }\n  const s = strip0x(hex).toLowerCase();\n  return HEXADECIMAL_STRING_REGEX.test(s);\n}\nexports.isHexString = isHexString;\nfunction ensureHexString(hex, includePrefix = false) {\n  if (typeof hex === \"string\") {\n    const s = strip0x(hex).toLowerCase();\n    if (HEXADECIMAL_STRING_REGEX.test(s)) {\n      return (0, types_1.HexString)(includePrefix ? \"0x\" + s : s);\n    }\n  }\n  throw new Error(`\"${String(hex)}\" is not a hexadecimal string`);\n}\nexports.ensureHexString = ensureHexString;\nfunction ensureEvenLengthHexString(hex, includePrefix = false) {\n  let h = ensureHexString(hex, false);\n  if (h.length % 2 === 1) {\n    h = (0, types_1.HexString)(\"0\" + h);\n  }\n  return includePrefix ? (0, types_1.HexString)(\"0x\" + h) : h;\n}\nexports.ensureEvenLengthHexString = ensureEvenLengthHexString;\nfunction ensureAddressString(str) {\n  if (typeof str === \"string\") {\n    const s = strip0x(str).toLowerCase();\n    if (isHexString(s) && s.length === 40) {\n      return (0, types_1.AddressString)(prepend0x(s));\n    }\n  }\n  throw new Error(`Invalid Ethereum address: ${String(str)}`);\n}\nexports.ensureAddressString = ensureAddressString;\nfunction ensureBuffer(str) {\n  if (Buffer.isBuffer(str)) {\n    return str;\n  }\n  if (typeof str === \"string\") {\n    if (isHexString(str)) {\n      const s = ensureEvenLengthHexString(str, false);\n      return Buffer.from(s, \"hex\");\n    } else {\n      return Buffer.from(str, \"utf8\");\n    }\n  }\n  throw new Error(`Not binary data: ${String(str)}`);\n}\nexports.ensureBuffer = ensureBuffer;\nfunction ensureIntNumber(num) {\n  if (typeof num === \"number\" && Number.isInteger(num)) {\n    return (0, types_1.IntNumber)(num);\n  }\n  if (typeof num === \"string\") {\n    if (INT_STRING_REGEX.test(num)) {\n      return (0, types_1.IntNumber)(Number(num));\n    }\n    if (isHexString(num)) {\n      return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(num, false), 16).toNumber());\n    }\n  }\n  throw new Error(`Not an integer: ${String(num)}`);\n}\nexports.ensureIntNumber = ensureIntNumber;\nfunction ensureRegExpString(regExp) {\n  if (regExp instanceof RegExp) {\n    return (0, types_1.RegExpString)(regExp.toString());\n  }\n  throw new Error(`Not a RegExp: ${String(regExp)}`);\n}\nexports.ensureRegExpString = ensureRegExpString;\nfunction ensureBN(val) {\n  if (val !== null && (bn_js_1.default.isBN(val) || isBigNumber(val))) {\n    return new bn_js_1.default(val.toString(10), 10);\n  }\n  if (typeof val === \"number\") {\n    return new bn_js_1.default(ensureIntNumber(val));\n  }\n  if (typeof val === \"string\") {\n    if (INT_STRING_REGEX.test(val)) {\n      return new bn_js_1.default(val, 10);\n    }\n    if (isHexString(val)) {\n      return new bn_js_1.default(ensureEvenLengthHexString(val, false), 16);\n    }\n  }\n  throw new Error(`Not an integer: ${String(val)}`);\n}\nexports.ensureBN = ensureBN;\nfunction ensureParsedJSONObject(val) {\n  if (typeof val === \"string\") {\n    return JSON.parse(val);\n  }\n  if (typeof val === \"object\") {\n    return val;\n  }\n  throw new Error(`Not a JSON string or an object: ${String(val)}`);\n}\nexports.ensureParsedJSONObject = ensureParsedJSONObject;\nfunction isBigNumber(val) {\n  if (val == null || typeof val.constructor !== \"function\") {\n    return false;\n  }\n  const {\n    constructor\n  } = val;\n  return typeof constructor.config === \"function\" && typeof constructor.EUCLID === \"number\";\n}\nexports.isBigNumber = isBigNumber;\nfunction range(start, stop) {\n  return Array.from({\n    length: stop - start\n  }, (_, i) => start + i);\n}\nexports.range = range;\nfunction getFavicon() {\n  const el = document.querySelector('link[sizes=\"192x192\"]') || document.querySelector('link[sizes=\"180x180\"]') || document.querySelector('link[rel=\"icon\"]') || document.querySelector('link[rel=\"shortcut icon\"]');\n  const {\n    protocol,\n    host\n  } = document.location;\n  const href = el ? el.getAttribute(\"href\") : null;\n  if (!href || href.startsWith(\"javascript:\")) {\n    return null;\n  }\n  if (href.startsWith(\"http://\") || href.startsWith(\"https://\") || href.startsWith(\"data:\")) {\n    return href;\n  }\n  if (href.startsWith(\"//\")) {\n    return protocol + href;\n  }\n  return `${protocol}//${host}${href}`;\n}\nexports.getFavicon = getFavicon;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","getFavicon","range","isBigNumber","ensureParsedJSONObject","ensureBN","ensureRegExpString","ensureIntNumber","ensureBuffer","ensureAddressString","ensureEvenLengthHexString","ensureHexString","isHexString","prepend0x","strip0x","has0xPrefix","hexStringFromIntNumber","intNumberFromHexString","bigIntStringFromBN","hexStringFromBuffer","hexStringToUint8Array","uint8ArrayToHex","randomBytesHex","bn_js_1","require","types_1","INT_STRING_REGEX","HEXADECIMAL_STRING_REGEX","length","crypto","getRandomValues","Uint8Array","map","b","toString","padStart","join","hexString","match","byte","parseInt","buf","includePrefix","hex","HexString","bn","BigIntString","IntNumber","default","toNumber","num","str","startsWith","slice","s","toLowerCase","test","Error","String","h","AddressString","Buffer","isBuffer","from","Number","isInteger","regExp","RegExp","RegExpString","val","isBN","JSON","parse","constructor","config","EUCLID","start","stop","Array","_","i","el","document","querySelector","protocol","host","location","href","getAttribute"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/node_modules/walletlink/dist/util.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFavicon = exports.range = exports.isBigNumber = exports.ensureParsedJSONObject = exports.ensureBN = exports.ensureRegExpString = exports.ensureIntNumber = exports.ensureBuffer = exports.ensureAddressString = exports.ensureEvenLengthHexString = exports.ensureHexString = exports.isHexString = exports.prepend0x = exports.strip0x = exports.has0xPrefix = exports.hexStringFromIntNumber = exports.intNumberFromHexString = exports.bigIntStringFromBN = exports.hexStringFromBuffer = exports.hexStringToUint8Array = exports.uint8ArrayToHex = exports.randomBytesHex = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst types_1 = require(\"./types\");\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n/**\n * @param length number of bytes\n */\nfunction randomBytesHex(length) {\n    return uint8ArrayToHex(crypto.getRandomValues(new Uint8Array(length)));\n}\nexports.randomBytesHex = randomBytesHex;\nfunction uint8ArrayToHex(value) {\n    return [...value].map(b => b.toString(16).padStart(2, '0')).join('');\n}\nexports.uint8ArrayToHex = uint8ArrayToHex;\nfunction hexStringToUint8Array(hexString) {\n    return new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n}\nexports.hexStringToUint8Array = hexStringToUint8Array;\nfunction hexStringFromBuffer(buf, includePrefix = false) {\n    const hex = buf.toString(\"hex\");\n    return (0, types_1.HexString)(includePrefix ? \"0x\" + hex : hex);\n}\nexports.hexStringFromBuffer = hexStringFromBuffer;\nfunction bigIntStringFromBN(bn) {\n    return (0, types_1.BigIntString)(bn.toString(10));\n}\nexports.bigIntStringFromBN = bigIntStringFromBN;\nfunction intNumberFromHexString(hex) {\n    return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(hex, false), 16).toNumber());\n}\nexports.intNumberFromHexString = intNumberFromHexString;\nfunction hexStringFromIntNumber(num) {\n    return (0, types_1.HexString)(\"0x\" + new bn_js_1.default(num).toString(16));\n}\nexports.hexStringFromIntNumber = hexStringFromIntNumber;\nfunction has0xPrefix(str) {\n    return str.startsWith(\"0x\") || str.startsWith(\"0X\");\n}\nexports.has0xPrefix = has0xPrefix;\nfunction strip0x(hex) {\n    if (has0xPrefix(hex)) {\n        return hex.slice(2);\n    }\n    return hex;\n}\nexports.strip0x = strip0x;\nfunction prepend0x(hex) {\n    if (has0xPrefix(hex)) {\n        return \"0x\" + hex.slice(2);\n    }\n    return \"0x\" + hex;\n}\nexports.prepend0x = prepend0x;\nfunction isHexString(hex) {\n    if (typeof hex !== \"string\") {\n        return false;\n    }\n    const s = strip0x(hex).toLowerCase();\n    return HEXADECIMAL_STRING_REGEX.test(s);\n}\nexports.isHexString = isHexString;\nfunction ensureHexString(hex, includePrefix = false) {\n    if (typeof hex === \"string\") {\n        const s = strip0x(hex).toLowerCase();\n        if (HEXADECIMAL_STRING_REGEX.test(s)) {\n            return (0, types_1.HexString)(includePrefix ? \"0x\" + s : s);\n        }\n    }\n    throw new Error(`\"${String(hex)}\" is not a hexadecimal string`);\n}\nexports.ensureHexString = ensureHexString;\nfunction ensureEvenLengthHexString(hex, includePrefix = false) {\n    let h = ensureHexString(hex, false);\n    if (h.length % 2 === 1) {\n        h = (0, types_1.HexString)(\"0\" + h);\n    }\n    return includePrefix ? (0, types_1.HexString)(\"0x\" + h) : h;\n}\nexports.ensureEvenLengthHexString = ensureEvenLengthHexString;\nfunction ensureAddressString(str) {\n    if (typeof str === \"string\") {\n        const s = strip0x(str).toLowerCase();\n        if (isHexString(s) && s.length === 40) {\n            return (0, types_1.AddressString)(prepend0x(s));\n        }\n    }\n    throw new Error(`Invalid Ethereum address: ${String(str)}`);\n}\nexports.ensureAddressString = ensureAddressString;\nfunction ensureBuffer(str) {\n    if (Buffer.isBuffer(str)) {\n        return str;\n    }\n    if (typeof str === \"string\") {\n        if (isHexString(str)) {\n            const s = ensureEvenLengthHexString(str, false);\n            return Buffer.from(s, \"hex\");\n        }\n        else {\n            return Buffer.from(str, \"utf8\");\n        }\n    }\n    throw new Error(`Not binary data: ${String(str)}`);\n}\nexports.ensureBuffer = ensureBuffer;\nfunction ensureIntNumber(num) {\n    if (typeof num === \"number\" && Number.isInteger(num)) {\n        return (0, types_1.IntNumber)(num);\n    }\n    if (typeof num === \"string\") {\n        if (INT_STRING_REGEX.test(num)) {\n            return (0, types_1.IntNumber)(Number(num));\n        }\n        if (isHexString(num)) {\n            return (0, types_1.IntNumber)(new bn_js_1.default(ensureEvenLengthHexString(num, false), 16).toNumber());\n        }\n    }\n    throw new Error(`Not an integer: ${String(num)}`);\n}\nexports.ensureIntNumber = ensureIntNumber;\nfunction ensureRegExpString(regExp) {\n    if (regExp instanceof RegExp) {\n        return (0, types_1.RegExpString)(regExp.toString());\n    }\n    throw new Error(`Not a RegExp: ${String(regExp)}`);\n}\nexports.ensureRegExpString = ensureRegExpString;\nfunction ensureBN(val) {\n    if (val !== null && (bn_js_1.default.isBN(val) || isBigNumber(val))) {\n        return new bn_js_1.default(val.toString(10), 10);\n    }\n    if (typeof val === \"number\") {\n        return new bn_js_1.default(ensureIntNumber(val));\n    }\n    if (typeof val === \"string\") {\n        if (INT_STRING_REGEX.test(val)) {\n            return new bn_js_1.default(val, 10);\n        }\n        if (isHexString(val)) {\n            return new bn_js_1.default(ensureEvenLengthHexString(val, false), 16);\n        }\n    }\n    throw new Error(`Not an integer: ${String(val)}`);\n}\nexports.ensureBN = ensureBN;\nfunction ensureParsedJSONObject(val) {\n    if (typeof val === \"string\") {\n        return JSON.parse(val);\n    }\n    if (typeof val === \"object\") {\n        return val;\n    }\n    throw new Error(`Not a JSON string or an object: ${String(val)}`);\n}\nexports.ensureParsedJSONObject = ensureParsedJSONObject;\nfunction isBigNumber(val) {\n    if (val == null || typeof val.constructor !== \"function\") {\n        return false;\n    }\n    const { constructor } = val;\n    return (typeof constructor.config === \"function\" &&\n        typeof constructor.EUCLID === \"number\");\n}\nexports.isBigNumber = isBigNumber;\nfunction range(start, stop) {\n    return Array.from({ length: stop - start }, (_, i) => start + i);\n}\nexports.range = range;\nfunction getFavicon() {\n    const el = document.querySelector('link[sizes=\"192x192\"]') ||\n        document.querySelector('link[sizes=\"180x180\"]') ||\n        document.querySelector('link[rel=\"icon\"]') ||\n        document.querySelector('link[rel=\"shortcut icon\"]');\n    const { protocol, host } = document.location;\n    const href = el ? el.getAttribute(\"href\") : null;\n    if (!href || href.startsWith(\"javascript:\")) {\n        return null;\n    }\n    if (href.startsWith(\"http://\") ||\n        href.startsWith(\"https://\") ||\n        href.startsWith(\"data:\")) {\n        return href;\n    }\n    if (href.startsWith(\"//\")) {\n        return protocol + href;\n    }\n    return `${protocol}//${host}${href}`;\n}\nexports.getFavicon = getFavicon;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}