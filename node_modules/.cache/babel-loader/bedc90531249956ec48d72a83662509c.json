{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */function () {\n  function InboundFilters(_options) {\n    if (_options === void 0) {\n      _options = {};\n    }\n    this._options = _options;\n    /**\n     * @inheritDoc\n     */\n    this.name = InboundFilters.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  InboundFilters.prototype.setupOnce = function (addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(function (event) {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self_1 = hub.getIntegration(InboundFilters);\n        if (self_1) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self_1._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  InboundFilters.id = 'InboundFilters';\n  return InboundFilters;\n}();\nexport { InboundFilters };\n/** JSDoc */\nexport function _mergeOptions(internalOptions, clientOptions) {\n  if (internalOptions === void 0) {\n    internalOptions = {};\n  }\n  if (clientOptions === void 0) {\n    clientOptions = {};\n  }\n  return {\n    allowUrls: __spread(internalOptions.whitelistUrls || [], internalOptions.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),\n    denyUrls: __spread(internalOptions.blacklistUrls || [], internalOptions.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),\n    ignoreErrors: __spread(internalOptions.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true\n  };\n}\n/** JSDoc */\nexport function _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    IS_DEBUG_BUILD && logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    IS_DEBUG_BUILD && logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    IS_DEBUG_BUILD && logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + _getEventFilterUrl(event));\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    IS_DEBUG_BUILD && logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + _getEventFilterUrl(event));\n    return true;\n  }\n  return false;\n}\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n  return _getPossibleEventMessages(event).some(function (message) {\n    return ignoreErrors.some(function (pattern) {\n      return isMatchingPattern(message, pattern);\n    });\n  });\n}\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(function (pattern) {\n    return isMatchingPattern(url, pattern);\n  });\n}\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(function (pattern) {\n    return isMatchingPattern(url, pattern);\n  });\n}\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      var _a = event.exception.values && event.exception.values[0] || {},\n        _b = _a.type,\n        type = _b === void 0 ? '' : _b,\n        _c = _a.value,\n        value = _c === void 0 ? '' : _c;\n      return [\"\" + value, type + \": \" + value];\n    } catch (oO) {\n      IS_DEBUG_BUILD && logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n      return [];\n    }\n  }\n  return [];\n}\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\nfunction _getLastValidUrl(frames) {\n  if (frames === void 0) {\n    frames = [];\n  }\n  for (var i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n  return null;\n}\nfunction _getEventFilterUrl(event) {\n  try {\n    if (event.stacktrace) {\n      return _getLastValidUrl(event.stacktrace.frames);\n    }\n    var frames_1;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames_1 = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames_1 ? _getLastValidUrl(frames_1) : null;\n  } catch (oO) {\n    IS_DEBUG_BUILD && logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n    return null;\n  }\n}","map":{"version":3,"sources":["../../../src/integrations/inboundfilters.ts"],"names":[],"mappings":"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","sourcesContent":["import { Event, EventProcessor, Hub, Integration, StackFrame } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../flags';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (processor: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    });\n  }\n}\n\n/** JSDoc */\nexport function _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [\n      // eslint-disable-next-line deprecation/deprecation\n      ...(internalOptions.whitelistUrls || []),\n      ...(internalOptions.allowUrls || []),\n      // eslint-disable-next-line deprecation/deprecation\n      ...(clientOptions.whitelistUrls || []),\n      ...(clientOptions.allowUrls || []),\n    ],\n    denyUrls: [\n      // eslint-disable-next-line deprecation/deprecation\n      ...(internalOptions.blacklistUrls || []),\n      ...(internalOptions.denyUrls || []),\n      // eslint-disable-next-line deprecation/deprecation\n      ...(clientOptions.blacklistUrls || []),\n      ...(clientOptions.denyUrls || []),\n    ],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nexport function _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      IS_DEBUG_BUILD && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    if (event.stacktrace) {\n      return _getLastValidUrl(event.stacktrace.frames);\n    }\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    IS_DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}