{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\nvar SwitchMapOperator = /*@__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    this.project = project;\n  }\n  SwitchMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  };\n  return SwitchMapOperator;\n}();\nvar SwitchMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchMapSubscriber, _super);\n  function SwitchMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n  SwitchMapSubscriber.prototype._next = function (value) {\n    var result;\n    var index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result);\n  };\n  SwitchMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  };\n  SwitchMapSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n    this.unsubscribe();\n  };\n  SwitchMapSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = undefined;\n  };\n  SwitchMapSubscriber.prototype.notifyComplete = function () {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n  SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n  return SwitchMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/switchMap.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n        this.unsubscribe();\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = undefined;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function () {\n        this.innerSubscription = undefined;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n"]},"metadata":{},"sourceType":"module"}