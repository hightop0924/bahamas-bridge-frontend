{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getGlobalObject } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n/* eslint-enable @typescript-eslint/no-explicit-any */\nvar global = getGlobalObject();\nvar activeTransaction;\nexport function reactRouterV4Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\nexport function reactRouterV5Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\nfunction createReactRouterInstrumentation(history, name, allRoutes, matchPath) {\n  if (allRoutes === void 0) {\n    allRoutes = [];\n  }\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n    if (global && global.location) {\n      return global.location.pathname;\n    }\n    return undefined;\n  }\n  function getTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return pathname;\n    }\n    var branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return branches[x].match.path;\n      }\n    }\n    return pathname;\n  }\n  return function (customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {\n    if (startTransactionOnPageLoad === void 0) {\n      startTransactionOnPageLoad = true;\n    }\n    if (startTransactionOnLocationChange === void 0) {\n      startTransactionOnLocationChange = true;\n    }\n    var initPathName = getInitPathName();\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: getTransactionName(initPathName),\n        op: 'pageload',\n        tags: {\n          'routing.instrumentation': name\n        }\n      });\n    }\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(function (location, action) {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          var tags = {\n            'routing.instrumentation': name\n          };\n          activeTransaction = customStartTransaction({\n            name: getTransactionName(location.pathname),\n            op: 'navigation',\n            tags: tags\n          });\n        }\n      });\n    }\n  };\n}\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(routes, pathname, matchPath, branch) {\n  if (branch === void 0) {\n    branch = [];\n  }\n  routes.some(function (route) {\n    var match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : computeRootMatch(pathname); // use default \"root\" match\n    if (match) {\n      branch.push({\n        route: route,\n        match: match\n      });\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n    return !!match;\n  });\n  return branch;\n}\nfunction computeRootMatch(pathname) {\n  return {\n    path: '/',\n    url: '/',\n    params: {},\n    isExact: pathname === '/'\n  };\n}\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nexport function withSentryRouting(Route) {\n  var componentDisplayName = Route.displayName || Route.name;\n  var WrappedRoute = function (props) {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path);\n    }\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return React.createElement(Route, __assign({}, props));\n  };\n  WrappedRoute.displayName = \"sentryRoute(\" + componentDisplayName + \")\";\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */","map":{"version":3,"sources":["../../src/reactrouter.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Transaction } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { Action, Location, ReactRouterInstrumentation } from './types';\n\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype Match = { path: string; url: string; params: Record<string, any>; isExact: boolean };\n\nexport type RouterHistory = {\n  location?: Location;\n  listen?(cb: (location: Location, action: Action) => void): void;\n} & Record<string, any>;\n\nexport type RouteConfig = {\n  [propName: string]: any;\n  path?: string | string[];\n  exact?: boolean;\n  component?: JSX.Element;\n  routes?: RouteConfig[];\n};\n\ntype MatchPath = (pathname: string, props: string | string[] | any, parent?: Match | null) => Match | null;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst global = getGlobalObject<Window>();\n\nlet activeTransaction: Transaction | undefined;\n\nexport function reactRouterV4Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\n\nexport function reactRouterV5Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\n\nfunction createReactRouterInstrumentation(\n  history: RouterHistory,\n  name: string,\n  allRoutes: RouteConfig[] = [],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  function getInitPathName(): string | undefined {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (global && global.location) {\n      return global.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  function getTransactionName(pathname: string): string {\n    if (allRoutes.length === 0 || !matchPath) {\n      return pathname;\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return branches[x].match.path;\n      }\n    }\n\n    return pathname;\n  }\n\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true): void => {\n    const initPathName = getInitPathName();\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: getTransactionName(initPathName),\n        op: 'pageload',\n        tags: {\n          'routing.instrumentation': name,\n        },\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          const tags = {\n            'routing.instrumentation': name,\n          };\n\n          activeTransaction = customStartTransaction({\n            name: getTransactionName(location.pathname),\n            op: 'navigation',\n            tags,\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes: RouteConfig[],\n  pathname: string,\n  matchPath: MatchPath,\n  branch: Array<{ route: RouteConfig; match: Match }> = [],\n): Array<{ route: RouteConfig; match: Match }> {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match // use parent match\n      : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname: string): Match {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nexport function withSentryRouting<P extends Record<string, any>, R extends React.ComponentType<P>>(Route: R): R {\n  const componentDisplayName = (Route as any).displayName || (Route as any).name;\n\n  const WrappedRoute: React.FC<P> = (props: P) => {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path);\n    }\n\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return <Route {...props} />;\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}