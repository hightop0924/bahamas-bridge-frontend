{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useMemo } from 'react';\nimport { getGraphHealth } from 'stores/graphHealth';\nimport { getRPCHealth } from 'stores/rpcHealth';\nimport { useUpdateInterval } from './useUpdateInterval';\nconst {\n  REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS\n} = process.env;\nconst DEFAULT_GRAPH_HEALTH_THRESHOLD_BLOCKS = 10;\nconst THRESHOLD_BLOCKS = REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS || DEFAULT_GRAPH_HEALTH_THRESHOLD_BLOCKS;\nexport const useGraphHealth = () => {\n  _s();\n  const {\n    homeChainId,\n    foreignChainId,\n    homeGraphName,\n    foreignGraphName\n  } = useBridgeDirection();\n  const [refreshCount] = useUpdateInterval();\n  const [homeHealthy, foreignHealthy] = useMemo(() => {\n    const {\n      [homeChainId]: homeBlockNumber,\n      [foreignChainId]: foreignBlockNumber\n    } = getRPCHealth();\n    const {\n      [homeGraphName]: homeHealth,\n      [foreignGraphName]: foreignHealth\n    } = getGraphHealth();\n    const home = homeHealth && homeBlockNumber !== undefined ? homeHealth.isReachable && !homeHealth.isFailed && homeHealth.isSynced && Math.abs(homeHealth.latestBlockNumber - homeBlockNumber) < THRESHOLD_BLOCKS && Math.abs(homeHealth.chainHeadBlockNumber - homeBlockNumber) < THRESHOLD_BLOCKS : true;\n    const foreign = foreignHealth && foreignBlockNumber !== undefined ? foreignHealth.isReachable && !foreignHealth.isFailed && foreignHealth.isSynced && Math.abs(foreignHealth.latestBlockNumber - foreignBlockNumber) < THRESHOLD_BLOCKS && Math.abs(foreignHealth.chainHeadBlockNumber - foreignBlockNumber) < THRESHOLD_BLOCKS : true;\n    return [home, foreign];\n    // for refreshCount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshCount, homeChainId, foreignChainId, homeGraphName, foreignGraphName]);\n  return {\n    homeHealthy,\n    foreignHealthy\n  };\n};\n_s(useGraphHealth, \"7g7S8eYyasng23M9L+7+rF9Hghk=\", false, function () {\n  return [useBridgeDirection, useUpdateInterval];\n});","map":{"version":3,"names":["useBridgeDirection","useMemo","getGraphHealth","getRPCHealth","useUpdateInterval","REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS","process","env","DEFAULT_GRAPH_HEALTH_THRESHOLD_BLOCKS","THRESHOLD_BLOCKS","useGraphHealth","_s","homeChainId","foreignChainId","homeGraphName","foreignGraphName","refreshCount","homeHealthy","foreignHealthy","homeBlockNumber","foreignBlockNumber","homeHealth","foreignHealth","home","undefined","isReachable","isFailed","isSynced","Math","abs","latestBlockNumber","chainHeadBlockNumber","foreign"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/hooks/useGraphHealth.js"],"sourcesContent":["import { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useMemo } from 'react';\nimport { getGraphHealth } from 'stores/graphHealth';\nimport { getRPCHealth } from 'stores/rpcHealth';\n\nimport { useUpdateInterval } from './useUpdateInterval';\n\nconst { REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS } = process.env;\n\nconst DEFAULT_GRAPH_HEALTH_THRESHOLD_BLOCKS = 10;\n\nconst THRESHOLD_BLOCKS =\n  REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS ||\n  DEFAULT_GRAPH_HEALTH_THRESHOLD_BLOCKS;\n\nexport const useGraphHealth = () => {\n  const { homeChainId, foreignChainId, homeGraphName, foreignGraphName } =\n    useBridgeDirection();\n\n  const [refreshCount] = useUpdateInterval();\n\n  const [homeHealthy, foreignHealthy] = useMemo(() => {\n    const {\n      [homeChainId]: homeBlockNumber,\n      [foreignChainId]: foreignBlockNumber,\n    } = getRPCHealth();\n    const { [homeGraphName]: homeHealth, [foreignGraphName]: foreignHealth } =\n      getGraphHealth();\n\n    const home =\n      homeHealth && homeBlockNumber !== undefined\n        ? homeHealth.isReachable &&\n          !homeHealth.isFailed &&\n          homeHealth.isSynced &&\n          Math.abs(homeHealth.latestBlockNumber - homeBlockNumber) <\n            THRESHOLD_BLOCKS &&\n          Math.abs(homeHealth.chainHeadBlockNumber - homeBlockNumber) <\n            THRESHOLD_BLOCKS\n        : true;\n\n    const foreign =\n      foreignHealth && foreignBlockNumber !== undefined\n        ? foreignHealth.isReachable &&\n          !foreignHealth.isFailed &&\n          foreignHealth.isSynced &&\n          Math.abs(foreignHealth.latestBlockNumber - foreignBlockNumber) <\n            THRESHOLD_BLOCKS &&\n          Math.abs(foreignHealth.chainHeadBlockNumber - foreignBlockNumber) <\n            THRESHOLD_BLOCKS\n        : true;\n\n    return [home, foreign];\n    // for refreshCount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    refreshCount,\n    homeChainId,\n    foreignChainId,\n    homeGraphName,\n    foreignGraphName,\n  ]);\n\n  return { homeHealthy, foreignHealthy };\n};\n"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,MAAM;EAAEC;AAAwC,CAAC,GAAGC,OAAO,CAACC,GAAG;AAE/D,MAAMC,qCAAqC,GAAG,EAAE;AAEhD,MAAMC,gBAAgB,GACpBJ,uCAAuC,IACvCG,qCAAqC;AAEvC,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC,WAAW;IAAEC,cAAc;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GACpEf,kBAAkB,CAAC,CAAC;EAEtB,MAAM,CAACgB,YAAY,CAAC,GAAGZ,iBAAiB,CAAC,CAAC;EAE1C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGjB,OAAO,CAAC,MAAM;IAClD,MAAM;MACJ,CAACW,WAAW,GAAGO,eAAe;MAC9B,CAACN,cAAc,GAAGO;IACpB,CAAC,GAAGjB,YAAY,CAAC,CAAC;IAClB,MAAM;MAAE,CAACW,aAAa,GAAGO,UAAU;MAAE,CAACN,gBAAgB,GAAGO;IAAc,CAAC,GACtEpB,cAAc,CAAC,CAAC;IAElB,MAAMqB,IAAI,GACRF,UAAU,IAAIF,eAAe,KAAKK,SAAS,GACvCH,UAAU,CAACI,WAAW,IACtB,CAACJ,UAAU,CAACK,QAAQ,IACpBL,UAAU,CAACM,QAAQ,IACnBC,IAAI,CAACC,GAAG,CAACR,UAAU,CAACS,iBAAiB,GAAGX,eAAe,CAAC,GACtDV,gBAAgB,IAClBmB,IAAI,CAACC,GAAG,CAACR,UAAU,CAACU,oBAAoB,GAAGZ,eAAe,CAAC,GACzDV,gBAAgB,GAClB,IAAI;IAEV,MAAMuB,OAAO,GACXV,aAAa,IAAIF,kBAAkB,KAAKI,SAAS,GAC7CF,aAAa,CAACG,WAAW,IACzB,CAACH,aAAa,CAACI,QAAQ,IACvBJ,aAAa,CAACK,QAAQ,IACtBC,IAAI,CAACC,GAAG,CAACP,aAAa,CAACQ,iBAAiB,GAAGV,kBAAkB,CAAC,GAC5DX,gBAAgB,IAClBmB,IAAI,CAACC,GAAG,CAACP,aAAa,CAACS,oBAAoB,GAAGX,kBAAkB,CAAC,GAC/DX,gBAAgB,GAClB,IAAI;IAEV,OAAO,CAACc,IAAI,EAAES,OAAO,CAAC;IACtB;IACA;EACF,CAAC,EAAE,CACDhB,YAAY,EACZJ,WAAW,EACXC,cAAc,EACdC,aAAa,EACbC,gBAAgB,CACjB,CAAC;EAEF,OAAO;IAAEE,WAAW;IAAEC;EAAe,CAAC;AACxC,CAAC;AAACP,EAAA,CAhDWD,cAAc;EAAA,QAEvBV,kBAAkB,EAEGI,iBAAiB;AAAA"},"metadata":{},"sourceType":"module"}