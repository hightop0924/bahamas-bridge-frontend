{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n  return function (source) {\n    return source.lift(new EveryOperator(predicate, thisArg, source));\n  };\n}\nvar EveryOperator = /*@__PURE__*/function () {\n  function EveryOperator(predicate, thisArg, source) {\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.source = source;\n  }\n  EveryOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  };\n  return EveryOperator;\n}();\nvar EverySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(EverySubscriber, _super);\n  function EverySubscriber(destination, predicate, thisArg, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.thisArg = thisArg;\n    _this.source = source;\n    _this.index = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n  EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  };\n  EverySubscriber.prototype._next = function (value) {\n    var result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  };\n  EverySubscriber.prototype._complete = function () {\n    this.notifyComplete(true);\n  };\n  return EverySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/every.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAU,MAAE,OAAM;AAwB3B,SAAM,UAAU,QAAS,eACa;AACpC,OAAA,SAAO,KAAC,CAAA,SAA0B,EAAA,OAAA,EAAA;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,aAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;EAAA,CAAA;AAED;IACE,aAAA,GAAA,aAAoB,YAEA;EAFA,SAAA,aAAA,CAAA,SAAsE,EAAA,OAAA,EAAA,MAAA,EAAA;IACtE,IAAA,CAAA,SAAA,GAAA,SAAa;IACb,IAAA,CAAA,OAAA,GAAA,OAAsB;IACzC,IAAA,CAAA,MAAA,GAAA,MAAA;EAED;EACE,aAAO,CAAA,SAAO,CAAA,IAAU,GAAA,UAAI,QAAgB,EAAA,MAAQ,EAAE;IACvD,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,eAAA,CAAA,QAAA,EAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,MAAA,CAAA,CAAA;EACH,CAAA;EAAC,OAAA,aAAA;AAOD,CAAA,CAAA,CAAA;IAAiC,eAAA,GAAA,aAAA,UAAa,MAAA,EAAA;EAG5C,OAAA,CAAA,SAAA,CAAA,eAAY,EAAA,MACQ,CAAA;EADpB,SAAA,eAIE,CAAA,WAAM,EAAA,SAAY,EAAA,OAEnB,EAAA,MAAA,EAAA;IALmB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAsE,EAAA,WAAA,CAAA,IAAA,IAAA;IACtE,KAAA,CAAA,SAAA,GAAA,SAAY;IACZ,KAAA,CAAA,OAAA,GAAA,OAAsB;IALlC,KAAA,CAAA,MAAK,GAAY,MAAC;IAOxB,KAAI,CAAC,KAAA,GAAO,CAAA;;IACb,OAAA,KAAA;EAED;EACE,eAAK,CAAA,SAAgB,CAAC,cAAA,GAAiB,UAAA,eAAA,EAAA;IACvC,IAAI,CAAC,WAAW,CAAC,IAAA,CAAA,eAAW,CAAA;IAC7B,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;EAES,CAAV;EACE,eAAU,CAAA,SAAS,CAAA,KAAA,GAAA,UAAA,KAAA,EAAA;IACnB,IAAI,MAAA,GAAA,KAAA;QACF;MACD,MAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,CAAA,KAAA,EAAA,EAAA,IAAA,CAAA,MAAA,CAAA;IAAC,CAAA,CACA,OAAA,GAAK,EAAA;MACL,IAAA,CAAA,WAAO,CAAA,KAAA,CAAA,GAAA,CAAA;MACR;IAED;QACE,CAAA,MAAK,EAAA;MACN,IAAA,CAAA,cAAA,CAAA,KAAA,CAAA;IACF;EAES,CAAV;EACE,eAAK,CAAA,SAAe,CAAA,SAAM,GAAA,YAAA;IAC3B,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA;EACH,CAAA;EAjCiC,OAAA,eAiChC","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n"]},"metadata":{},"sourceType":"module"}