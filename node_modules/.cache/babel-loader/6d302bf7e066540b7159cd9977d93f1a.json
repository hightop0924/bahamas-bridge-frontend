{"ast":null,"code":"export function promisify(originalFn, thisArg) {\n  const promisifiedFunction = async (...callArgs) => {\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err === null || typeof err === \"undefined\") {\n          reject(err);\n        }\n        resolve(data);\n      };\n      originalFn.apply(thisArg, [...callArgs, callback]);\n    });\n  };\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  const message = error.message || \"Failed or Rejected Request\";\n  let code = -32000;\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n      case \"Invalid request\":\n        code = -32600;\n        break;\n      case \"Method not found\":\n        code = -32601;\n        break;\n      case \"Invalid params\":\n        code = -32602;\n        break;\n      case \"Internal error\":\n        code = -32603;\n        break;\n      default:\n        code = -32000;\n        break;\n    }\n  }\n  const result = {\n    code,\n    message\n  };\n  if (error.data) {\n    result.data = error.data;\n  }\n  return result;\n}","map":{"version":3,"sources":["../../src/payload.ts"],"names":[],"mappings":"AAMA,OAAM,SAAU,SAAS,CACvB,UAAoC,EACpC,OAAa,EAAA;EAEb,MAAM,mBAAmB,GAAG,MAAA,CAC1B,GAAG,QAAe,KAC0C;IAC5D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;MACrC,MAAM,QAAQ,GAAG,CACf,GAAiB,EACjB,IAAqD,KACnD;QACF,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;UAC9C,MAAM,CAAC,GAAG,CAAC;QACZ;QACD,OAAO,CAAC,IAAI,CAAC;MACf,CAAC;MACD,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EACD,OAAO,mBAAmB;AAC5B;AAEA,OAAM,SAAU,cAAc,CAC5B,KAAoC,EAAA;EAEpC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,4BAA4B;EAC7D,IAAI,IAAI,GAAG,CAAC,KAAK;EACjB,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;IACxB,QAAQ,OAAO;MACb,KAAK,aAAa;QAChB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,iBAAiB;QACpB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,kBAAkB;QACrB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,gBAAgB;QACnB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,gBAAgB;QACnB,IAAI,GAAG,CAAC,KAAK;QACb;MACF;QACE,IAAI,GAAG,CAAC,KAAK;QACb;IACH;EACF;EACD,MAAM,MAAM,GAAqD;IAC/D,IAAI;IACJ;GACD;EACD,IAAI,KAAK,CAAC,IAAI,EAAE;IACd,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;EACzB;EACD,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["export function promisify(originalFn, thisArg) {\n    const promisifiedFunction = async (...callArgs) => {\n        return new Promise((resolve, reject) => {\n            const callback = (err, data) => {\n                if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                }\n                resolve(data);\n            };\n            originalFn.apply(thisArg, [...callArgs, callback]);\n        });\n    };\n    return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n    const message = error.message || \"Failed or Rejected Request\";\n    let code = -32000;\n    if (error && !error.code) {\n        switch (message) {\n            case \"Parse error\":\n                code = -32700;\n                break;\n            case \"Invalid request\":\n                code = -32600;\n                break;\n            case \"Method not found\":\n                code = -32601;\n                break;\n            case \"Invalid params\":\n                code = -32602;\n                break;\n            case \"Internal error\":\n                code = -32603;\n                break;\n            default:\n                code = -32000;\n                break;\n        }\n    }\n    const result = {\n        code,\n        message,\n    };\n    if (error.data) {\n        result.data = error.data;\n    }\n    return result;\n}\n//# sourceMappingURL=payload.js.map"]},"metadata":{},"sourceType":"module"}