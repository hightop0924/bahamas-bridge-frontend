{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar XMLHttpRequestEventTarget = /** @class */function () {\n  function XMLHttpRequestEventTarget() {\n    this.listeners = {};\n  }\n  XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n    this.listeners[eventType] = this.listeners[eventType] || [];\n    this.listeners[eventType].push(listener.handleEvent || listener);\n  };\n  XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n    eventType = eventType.toLowerCase();\n    if (!this.listeners[eventType]) {\n      return;\n    }\n    var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n    if (index < 0) {\n      return;\n    }\n    this.listeners[eventType].splice(index, 1);\n  };\n  XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n    var eventType = event.type.toLowerCase();\n    event.target = this; // TODO: set event.currentTarget?\n    if (this.listeners[eventType]) {\n      for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n        var listener_1 = _a[_i];\n        listener_1.call(this, event);\n      }\n    }\n    var listener = this[\"on\" + eventType];\n    if (listener) {\n      listener.call(this, event);\n    }\n    return true;\n  };\n  return XMLHttpRequestEventTarget;\n}();\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;","map":{"version":3,"sources":["../xml-http-request-event-target.ts"],"names":[],"mappings":";;;;;AAMA,IAAA,yBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,yBAAA,CAAA,EAAA;IASS,IAAA,CAAA,SAAS,GAAmD,CAAA,CAAE;EAiCvE;EA/BC,yBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,SAAiB,EAAE,QAAqD,EAAA;IACxF,SAAS,GAAG,SAAS,CAAC,WAAW,CAAA,CAAE;IACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE;IAC3D,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAE,QAAwC,CAAC,WAAW,IAAK,QAAkC,CAAC;EAC7H,CAAC;EACD,yBAAA,CAAA,SAAA,CAAA,mBAAmB,GAAnB,UAAoB,SAAiB,EAAE,QAAqD,EAAA;IAC3F,SAAS,GAAG,SAAS,CAAC,WAAW,CAAA,CAAE;IACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;MAAE;IAAQ;IAE1C,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAE,QAAwC,CAAC,WAAW,IAAK,QAAkC,CAAC;IAC7I,IAAI,KAAK,GAAG,CAAC,EAAE;MAAE;IAAQ;IAEzB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC3C,CAAC;EACD,yBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,KAAoB,EAAA;IACjC,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAA,CAAE;IAC1C,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;IAErB,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;MAC9B,KAAqB,IAAA,EAAA,GAAA,CAAyB,EAAzB,EAAA,GAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAzB,EAAA,GAAA,EAAA,CAAA,MAAyB,EAAzB,EAAA,EAAyB,EAAA;QAAzC,IAAI,UAAQ,GAAA,EAAA,CAAA,EAAA,CAAA;QAChB,UAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;MAC1B;IACF;IAEA,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAA,GAAK,SAAW,CAAC;IACvC,IAAI,QAAQ,EAAE;MACb,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IAC3B;IAEA,OAAO,IAAI;EACZ,CAAC;EACF,OAAA,yBAAC;AAAD,CAAC,CAAA,CAAA;AA1CY,OAAA,CAAA,yBAAA,GAAA,yBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar XMLHttpRequestEventTarget = /** @class */ (function () {\n    function XMLHttpRequestEventTarget() {\n        this.listeners = {};\n    }\n    XMLHttpRequestEventTarget.prototype.addEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        this.listeners[eventType] = this.listeners[eventType] || [];\n        this.listeners[eventType].push(listener.handleEvent || listener);\n    };\n    XMLHttpRequestEventTarget.prototype.removeEventListener = function (eventType, listener) {\n        eventType = eventType.toLowerCase();\n        if (!this.listeners[eventType]) {\n            return;\n        }\n        var index = this.listeners[eventType].indexOf(listener.handleEvent || listener);\n        if (index < 0) {\n            return;\n        }\n        this.listeners[eventType].splice(index, 1);\n    };\n    XMLHttpRequestEventTarget.prototype.dispatchEvent = function (event) {\n        var eventType = event.type.toLowerCase();\n        event.target = this; // TODO: set event.currentTarget?\n        if (this.listeners[eventType]) {\n            for (var _i = 0, _a = this.listeners[eventType]; _i < _a.length; _i++) {\n                var listener_1 = _a[_i];\n                listener_1.call(this, event);\n            }\n        }\n        var listener = this[\"on\" + eventType];\n        if (listener) {\n            listener.call(this, event);\n        }\n        return true;\n    };\n    return XMLHttpRequestEventTarget;\n}());\nexports.XMLHttpRequestEventTarget = XMLHttpRequestEventTarget;\n//# sourceMappingURL=xml-http-request-event-target.js.map"]},"metadata":{},"sourceType":"script"}