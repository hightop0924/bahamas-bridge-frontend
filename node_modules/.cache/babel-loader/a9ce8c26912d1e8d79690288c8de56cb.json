{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  return function (source) {\n    return source.lift(new SampleTimeOperator(period, scheduler));\n  };\n}\nvar SampleTimeOperator = /*@__PURE__*/function () {\n  function SampleTimeOperator(period, scheduler) {\n    this.period = period;\n    this.scheduler = scheduler;\n  }\n  SampleTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  };\n  return SampleTimeOperator;\n}();\nvar SampleTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SampleTimeSubscriber, _super);\n  function SampleTimeSubscriber(destination, period, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.period = period;\n    _this.scheduler = scheduler;\n    _this.hasValue = false;\n    _this.add(scheduler.schedule(dispatchNotification, period, {\n      subscriber: _this,\n      period: period\n    }));\n    return _this;\n  }\n  SampleTimeSubscriber.prototype._next = function (value) {\n    this.lastValue = value;\n    this.hasValue = true;\n  };\n  SampleTimeSubscriber.prototype.notifyNext = function () {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  };\n  return SampleTimeSubscriber;\n}(Subscriber);\nfunction dispatchNotification(state) {\n  var subscriber = state.subscriber,\n    period = state.period;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/operators/sampleTime.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAU,MAAE,OAAM;AAC3B,SAAS,UAAO,QAAM,eAAoB;AA6C1C,SAAM,KAAA,QAAU,oBAA8B;AAAA,OAAA,SAAA,UAAA,CAAA,MAAA,EAAA,SAAA,EAAA;EAC5C,IAAA,SAAO,KAAC,KAAqB,CAAA,EAAA;IAC9B,SAAA,GAAA,KAAA;EAED;EACE,OAAA,UAAA,MAAA,EAAA;IAAA,OAAkC,MACd,CAAA,IAAwB,CAAA,IAAA,kBAAA,CAAA,MAAA,EAAA,SAAA,CAAA,CAAA;EAAA,CAAA;AADxB;IACA,kBAAS,GAAT,aAAwB,YAAA;EAC5C,SAAC,kBAAA,CAAA,MAAA,EAAA,SAAA,EAAA;IAED,IAAA,CAAA,MAAA,GAAA,MAAA;IACE,IAAA,CAAA,SAAc,GAAA,SAAU;EAC1B;EACF,kBAAA,CAAA,SAAC,CAAA,IAAA,GAAA,UAAA,UAAA,EAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,oBAAA,CAAA,UAAA,EAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;EAOD,CAAA;EAAsC,OAAA,kBAAA;GAIpC;IAAA,oBAGE,GAAA,aAAM,UAAY,MAAA,EAEnB;EAJmB,OAAA,CAAA,SAAM,CAAN,oBAAc,EAAA,MAAA,CAAA;EACd,SAAA,oBAAA,CAAA,WAAwB,EAAA,MAAA,EAAA,SAAA,EAAA;IAJ5C,IAAA,KAAA,GAAA,MAAoB,CAAA,IAAM,CAAA,IAAA,EAAA,WAAA,CAAA,IAAA,IAAA;IAMxB,KAAI,CAAC,MAAI,GAAA,MAAU;;IACpB,KAAA,CAAA,QAAA,GAAA,KAAA;IAES,KAAA,CAAA,GAAA,CAAA,SAAA,CAAA,QAAA,CAAV,oBAAgB,EAAQ,MAAA,EAAA;MAAA,UAAA,EAAA,KAAA;MAAA,MAAA,EAAA;IAAA,CAAA,CAAA,CAAA;IACtB,OAAK,KAAA;EACL;EACF,oBAAC,CAAA,SAAA,CAAA,KAAA,GAAA,UAAA,KAAA,EAAA;IAED,IAAA,CAAA,SAAA,GAAA,KAAA;IACE,IAAI,CAAA,QAAK,GAAA,IAAU;GACjB;EACA,oBAAK,CAAA,SAAiB,CAAA,UAAK,GAAS,YAAE;IACvC,IAAA,IAAA,CAAA,QAAA,EAAA;MACF,IAAA,CAAA,QAAA,GAAA,KAAA;MACH,IAAA,CAAA,WAAA,CAAA,IAAC,CAAA,IAAA,CAAA,SAAA,CAAA;IAtBqC;EAwBtC,CAAA;EACQ,OAAA,oBAAA;EACN,UAAA,CAAU;AACV,SAAK,oBAAgB,CAAA,KAAQ,EAAA;EAC9B,IAAA,UAAA,GAAA,KAAA,CAAA,UAAA;IAAA,MAAA,GAAA,KAAA,CAAA,MAAA","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n"]},"metadata":{},"sourceType":"module"}