{"ast":null,"code":"import { setRPCHealth } from 'stores/rpcHealth';\nimport { getValidEthersProvider } from './providerHelpers';\nexport const getEthersProvider = async chainId => {\n  const provider = await getValidEthersProvider(chainId);\n  if (provider) {\n    provider.getBlockNumber().then(health => setRPCHealth(chainId, health)).catch();\n  }\n  return provider;\n};\nexport const isEIP1193 = ethersProvider => ethersProvider && ethersProvider.connection && ethersProvider.connection.url && ethersProvider.connection.url.includes('eip-1193');","map":{"version":3,"names":["setRPCHealth","getValidEthersProvider","getEthersProvider","chainId","provider","getBlockNumber","then","health","catch","isEIP1193","ethersProvider","connection","url","includes"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/lib/providers.js"],"sourcesContent":["import { setRPCHealth } from 'stores/rpcHealth';\n\nimport { getValidEthersProvider } from './providerHelpers';\n\nexport const getEthersProvider = async chainId => {\n  const provider = await getValidEthersProvider(chainId);\n  if (provider) {\n    provider\n      .getBlockNumber()\n      .then(health => setRPCHealth(chainId, health))\n      .catch();\n  }\n  return provider;\n};\n\nexport const isEIP1193 = ethersProvider =>\n  ethersProvider &&\n  ethersProvider.connection &&\n  ethersProvider.connection.url &&\n  ethersProvider.connection.url.includes('eip-1193');\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,sBAAsB,QAAQ,mBAAmB;AAE1D,OAAO,MAAMC,iBAAiB,GAAG,MAAMC,OAAO,IAAI;EAChD,MAAMC,QAAQ,GAAG,MAAMH,sBAAsB,CAACE,OAAO,CAAC;EACtD,IAAIC,QAAQ,EAAE;IACZA,QAAQ,CACLC,cAAc,CAAC,CAAC,CAChBC,IAAI,CAACC,MAAM,IAAIP,YAAY,CAACG,OAAO,EAAEI,MAAM,CAAC,CAAC,CAC7CC,KAAK,CAAC,CAAC;EACZ;EACA,OAAOJ,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMK,SAAS,GAAGC,cAAc,IACrCA,cAAc,IACdA,cAAc,CAACC,UAAU,IACzBD,cAAc,CAACC,UAAU,CAACC,GAAG,IAC7BF,cAAc,CAACC,UAAU,CAACC,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC"},"metadata":{},"sourceType":"module"}