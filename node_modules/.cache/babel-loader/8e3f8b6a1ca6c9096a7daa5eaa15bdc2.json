{"ast":null,"code":"export var setPrototypeOf = Object.setPrototypeOf || ({\n  __proto__: []\n} instanceof Array ? setProtoOf : mixinProperties);\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf(obj, proto) {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties(obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n  return obj;\n}","map":{"version":3,"sources":["../../src/polyfill.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,cAAc,GACzB,MAAM,CAAC,cAAc,KAAK;EAAE,SAAS,EAAE;AAAE,CAAE,YAAY,KAAK,GAAG,UAAU,GAAG,eAAe,CAAC;AAE9F;;AAEG;AACH;AACA,SAAS,UAAU,CAAiC,GAAY,EAAE,KAAa,EAAA;EAC7E;EACA,GAAG,CAAC,SAAS,GAAG,KAAK;EACrB,OAAO,GAAuB;AAChC;AAEA;;AAEG;AACH;AACA,SAAS,eAAe,CAAiC,GAAY,EAAE,KAAa,EAAA;EAClF,KAAK,IAAM,IAAI,IAAI,KAAK,EAAE;IACxB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;MACpD;MACA,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB;EACF;EAED,OAAO,GAAuB;AAChC","sourcesContent":["export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}