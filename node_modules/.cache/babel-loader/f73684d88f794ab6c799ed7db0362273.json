{"ast":null,"code":"var _jsxFileName = \"/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/common/BridgeDropdown.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useBreakpointValue } from '@chakra-ui/react';\nimport { useSettings } from 'contexts/SettingsContext';\nimport { DownArrowIcon } from 'icons/DownArrowIcon';\nimport { NetworkIcon } from 'icons/NetworkIcon';\nimport { networks } from 'lib/networks';\nimport React, { useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BridgeDropdown = ({\n  close\n}) => {\n  _s();\n  const {\n    bridgeDirection,\n    setBridgeDirection\n  } = useSettings();\n  const placement = useBreakpointValue({\n    base: 'bottom',\n    md: 'bottom-end'\n  });\n  const setItem = useCallback(e => {\n    setBridgeDirection(e.target.value, true);\n    close();\n  }, [close, setBridgeDirection]);\n  const networkOptions = Object.keys(networks);\n  const isValidNetwork = Object.keys(networks).indexOf(bridgeDirection) >= 0;\n  const currentBridgeDirection = isValidNetwork ? bridgeDirection : networkOptions[0];\n  useEffect(() => {\n    if (!isValidNetwork) {\n      setBridgeDirection(networkOptions[0], true);\n    }\n  }, [isValidNetwork, networkOptions, setBridgeDirection]);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    placement: placement,\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      as: Button,\n      leftIcon: /*#__PURE__*/_jsxDEV(NetworkIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this),\n      rightIcon: /*#__PURE__*/_jsxDEV(DownArrowIcon, {\n        boxSize: \"0.5rem\",\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this),\n      color: \"grey\",\n      bg: \"none\",\n      _hover: {\n        color: 'blue.500',\n        bgColor: 'blackAlpha.100'\n      },\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"black\",\n        textTransform: \"uppercase\",\n        fontSize: \"sm\",\n        children: networks[currentBridgeDirection].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n      border: \"none\",\n      boxShadow: \"0 0.5rem 1rem #CADAEF\",\n      zIndex: \"3\",\n      children: Object.entries(networks).map(([key, {\n        label\n      }]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: key,\n        onClick: setItem,\n        textTransform: \"uppercase\",\n        fontWeight: \"700\",\n        fontSize: \"sm\",\n        justifyContent: \"center\",\n        children: label\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BridgeDropdown, \"ETxJzoqpWCwh579ZZ2zhBNOikJ0=\", false, function () {\n  return [useSettings, useBreakpointValue];\n});\n_c = BridgeDropdown;\nvar _c;\n$RefreshReg$(_c, \"BridgeDropdown\");","map":{"version":3,"names":["Button","Menu","MenuButton","MenuItem","MenuList","Text","useBreakpointValue","useSettings","DownArrowIcon","NetworkIcon","networks","React","useCallback","useEffect","jsxDEV","_jsxDEV","BridgeDropdown","close","_s","bridgeDirection","setBridgeDirection","placement","base","md","setItem","e","target","value","networkOptions","Object","keys","isValidNetwork","indexOf","currentBridgeDirection","children","as","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","rightIcon","boxSize","color","bg","_hover","bgColor","p","textTransform","fontSize","label","border","boxShadow","zIndex","entries","map","key","onClick","fontWeight","justifyContent","_c","$RefreshReg$"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/components/common/BridgeDropdown.jsx"],"sourcesContent":["import {\n  Button,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { useSettings } from 'contexts/SettingsContext';\nimport { DownArrowIcon } from 'icons/DownArrowIcon';\nimport { NetworkIcon } from 'icons/NetworkIcon';\nimport { networks } from 'lib/networks';\nimport React, { useCallback, useEffect } from 'react';\n\nexport const BridgeDropdown = ({ close }) => {\n  const { bridgeDirection, setBridgeDirection } = useSettings();\n  const placement = useBreakpointValue({ base: 'bottom', md: 'bottom-end' });\n\n  const setItem = useCallback(\n    e => {\n      setBridgeDirection(e.target.value, true);\n      close();\n    },\n    [close, setBridgeDirection],\n  );\n\n  const networkOptions = Object.keys(networks);\n  const isValidNetwork = Object.keys(networks).indexOf(bridgeDirection) >= 0;\n\n  const currentBridgeDirection = isValidNetwork\n    ? bridgeDirection\n    : networkOptions[0];\n\n  useEffect(() => {\n    if (!isValidNetwork) {\n      setBridgeDirection(networkOptions[0], true);\n    }\n  }, [isValidNetwork, networkOptions, setBridgeDirection]);\n\n  return (\n    <Menu placement={placement}>\n      <MenuButton\n        as={Button}\n        leftIcon={<NetworkIcon />}\n        rightIcon={<DownArrowIcon boxSize=\"0.5rem\" color=\"black\" />}\n        color=\"grey\"\n        bg=\"none\"\n        _hover={{ color: 'blue.500', bgColor: 'blackAlpha.100' }}\n        p={2}\n      >\n        <Text color=\"black\" textTransform=\"uppercase\" fontSize=\"sm\">\n          {networks[currentBridgeDirection].label}\n        </Text>\n      </MenuButton>\n      <MenuList border=\"none\" boxShadow=\"0 0.5rem 1rem #CADAEF\" zIndex=\"3\">\n        {Object.entries(networks).map(([key, { label }]) => (\n          <MenuItem\n            value={key}\n            onClick={setItem}\n            key={key}\n            textTransform=\"uppercase\"\n            fontWeight=\"700\"\n            fontSize=\"sm\"\n            justifyContent=\"center\"\n          >\n            {label}\n          </MenuItem>\n        ))}\n      </MenuList>\n    </Menu>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}