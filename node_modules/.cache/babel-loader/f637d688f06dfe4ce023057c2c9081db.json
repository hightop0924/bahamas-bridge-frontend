{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n  var resultSelector = undefined;\n  var scheduler = undefined;\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/function () {\n  function CombineLatestOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n  CombineLatestOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  };\n  return CombineLatestOperator;\n}();\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CombineLatestSubscriber, _super);\n  function CombineLatestSubscriber(destination, resultSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.resultSelector = resultSelector;\n    _this.active = 0;\n    _this.values = [];\n    _this.observables = [];\n    return _this;\n  }\n  CombineLatestSubscriber.prototype._next = function (observable) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  };\n  CombineLatestSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (var i = 0; i < len; i++) {\n        var observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  };\n  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  };\n  CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    var values = this.values;\n    var oldVal = values[outerIndex];\n    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  };\n  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n    var result;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return CombineLatestSubscriber;\n}(OuterSubscriber);\nexport { CombineLatestSubscriber };","map":{"version":3,"sources":["../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = undefined;\n    var scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n"]},"metadata":{},"sourceType":"module"}