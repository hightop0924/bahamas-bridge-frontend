{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useMemo } from 'react';\nexport const useNeedsClaiming = () => {\n  _s();\n  const {\n    providerChainId\n  } = useWeb3Context();\n  const {\n    fromToken\n  } = useBridgeContext();\n  const {\n    homeChainId,\n    claimDisabled,\n    tokensClaimDisabled\n  } = useBridgeDirection();\n  const isHome = providerChainId === homeChainId;\n  return useMemo(() => isHome && !claimDisabled && !(tokensClaimDisabled !== null && tokensClaimDisabled !== void 0 ? tokensClaimDisabled : []).includes(fromToken === null || fromToken === void 0 ? void 0 : fromToken.address.toLowerCase()), [isHome, claimDisabled, tokensClaimDisabled, fromToken]);\n};\n_s(useNeedsClaiming, \"bIjGNga5C+wgYG3GvdJ9+yZn0sI=\", false, function () {\n  return [useWeb3Context, useBridgeContext, useBridgeDirection];\n});","map":{"version":3,"names":["useBridgeContext","useWeb3Context","useBridgeDirection","useMemo","useNeedsClaiming","_s","providerChainId","fromToken","homeChainId","claimDisabled","tokensClaimDisabled","isHome","includes","address","toLowerCase"],"sources":["/home/hightop/bahamas_bridge/omnibridge-ui/packages/dapp/src/hooks/useNeedsClaiming.js"],"sourcesContent":["import { useBridgeContext } from 'contexts/BridgeContext';\nimport { useWeb3Context } from 'contexts/Web3Context';\nimport { useBridgeDirection } from 'hooks/useBridgeDirection';\nimport { useMemo } from 'react';\n\nexport const useNeedsClaiming = () => {\n  const { providerChainId } = useWeb3Context();\n  const { fromToken } = useBridgeContext();\n  const { homeChainId, claimDisabled, tokensClaimDisabled } =\n    useBridgeDirection();\n\n  const isHome = providerChainId === homeChainId;\n\n  return useMemo(\n    () =>\n      isHome &&\n      !claimDisabled &&\n      !(tokensClaimDisabled ?? []).includes(fromToken?.address.toLowerCase()),\n    [isHome, claimDisabled, tokensClaimDisabled, fromToken],\n  );\n};\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,OAAO,QAAQ,OAAO;AAE/B,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAgB,CAAC,GAAGL,cAAc,CAAC,CAAC;EAC5C,MAAM;IAAEM;EAAU,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EACxC,MAAM;IAAEQ,WAAW;IAAEC,aAAa;IAAEC;EAAoB,CAAC,GACvDR,kBAAkB,CAAC,CAAC;EAEtB,MAAMS,MAAM,GAAGL,eAAe,KAAKE,WAAW;EAE9C,OAAOL,OAAO,CACZ,MACEQ,MAAM,IACN,CAACF,aAAa,IACd,CAAC,CAACC,mBAAmB,aAAnBA,mBAAmB,cAAnBA,mBAAmB,GAAI,EAAE,EAAEE,QAAQ,CAACL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEM,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,EACzE,CAACH,MAAM,EAAEF,aAAa,EAAEC,mBAAmB,EAAEH,SAAS,CACxD,CAAC;AACH,CAAC;AAACF,EAAA,CAfWD,gBAAgB;EAAA,QACCH,cAAc,EACpBD,gBAAgB,EAEpCE,kBAAkB;AAAA"},"metadata":{},"sourceType":"module"}