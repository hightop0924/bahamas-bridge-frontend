{"ast":null,"code":"const HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n  const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n  if (!matches || !matches.length) return;\n  return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n  const protocol = getUrlProtocol(url);\n  if (typeof protocol === \"undefined\") return false;\n  return new RegExp(regex).test(protocol);\n}\nexport function isHttpUrl(url) {\n  return matchRegexProtocol(url, HTTP_REGEX);\n}\nexport function isWsUrl(url) {\n  return matchRegexProtocol(url, WS_REGEX);\n}\nexport function isLocalhostUrl(url) {\n  return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n}","map":{"version":3,"sources":["../../src/url.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,GAAG,UAAU;AAE7B,MAAM,QAAQ,GAAG,QAAQ;AAEzB,SAAS,cAAc,CAAC,GAAW,EAAA;EACjC,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACpD,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;EACjC,OAAO,OAAO,CAAC,CAAC,CAAC;AACnB;AAEA,SAAS,kBAAkB,CAAC,GAAW,EAAE,KAAa,EAAA;EACpD,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC;EACpC,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,OAAO,KAAK;EACjD,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzC;AAEA,OAAM,SAAU,SAAS,CAAC,GAAW,EAAA;EACnC,OAAO,kBAAkB,CAAC,GAAG,EAAE,UAAU,CAAC;AAC5C;AAEA,OAAM,SAAU,OAAO,CAAC,GAAW,EAAA;EACjC,OAAO,kBAAkB,CAAC,GAAG,EAAE,QAAQ,CAAC;AAC1C;AAEA,OAAM,SAAU,cAAc,CAAC,GAAW,EAAA;EACxC,OAAO,IAAI,MAAM,CAAC,4BAA4B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3D","sourceRoot":"","sourcesContent":["const HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nexport function isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nexport function isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nexport function isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n}\n//# sourceMappingURL=url.js.map"]},"metadata":{},"sourceType":"module"}